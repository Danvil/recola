{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"en",
				"entities"
			],
			[
				"lin",
				"line_strips"
			],
			[
				"Co",
				"ColorRgba8"
			],
			[
				"orth",
				"ortho_normal_basis_z"
			],
			[
				"slee",
				"sleep_duration"
			],
			[
				"Tr",
				"TransformUniformGroup"
			],
			[
				"Moc",
				"MoccaRunner"
			],
			[
				"sim",
				"sim_worker_handle"
			],
			[
				"Buff",
				"BufferCommand"
			],
			[
				"Gpu",
				"GpuBufferMoccal"
			],
			[
				"W",
				"WgpuRes"
			],
			[
				"Uns",
				"UnsafeAnyCell"
			],
			[
				"run",
				"run_thread"
			],
			[
				"Bu",
				"BufferCommand"
			],
			[
				"M",
				"MoccaRunner"
			],
			[
				"Sim",
				"SimulationWorker"
			],
			[
				"even",
				"event_loop"
			],
			[
				"Win",
				"WindowStore"
			],
			[
				"Buf",
				"BufferId"
			],
			[
				"it",
				"items"
			],
			[
				"Buffer",
				"BufferCommandQueueItem"
			],
			[
				"win",
				"win_id"
			],
			[
				"ren",
				"renderer_rpass"
			],
			[
				"buf",
				"buf_id"
			],
			[
				"SIn",
				"SingletonMut"
			],
			[
				"tran",
				"transform_buf"
			],
			[
				"cam",
				"camera_buf"
			],
			[
				"TR",
				"TransformBufferGpu"
			],
			[
				"qu",
				"queue_render_items"
			],
			[
				"vbu",
				"vbuf_entity"
			],
			[
				"C",
				"CandyExampleCubeMocca"
			],
			[
				"m",
				"mocca_runner"
			],
			[
				"Run",
				"RuntimeApp"
			],
			[
				"eve",
				"event_loop"
			],
			[
				"BloodVess",
				"BloodVesselPrefab"
			],
			[
				"Bl",
				"BloodConfig"
			],
			[
				"Heart",
				"HeartRateBpm"
			],
			[
				"Hear",
				"HeartRateBpm"
			],
			[
				"H",
				"HeartPumpVolume"
			],
			[
				"lun",
				"lung_1"
			],
			[
				"ene",
				"entity_named"
			],
			[
				"En",
				"EntityView"
			],
			[
				"blu",
				"blue_in"
			],
			[
				"rou",
				"red_out"
			],
			[
				"hear",
				"heart_chamber_fn"
			],
			[
				"defau",
				"default_chunk"
			],
			[
				"ho",
				"hemoglobin_saturation"
			],
			[
				"hom",
				"hemoglobin_concentration"
			],
			[
				"Blo",
				"BloodChunk"
			],
			[
				"He",
				"HeartRate"
			],
			[
				"Hea",
				"HeartState"
			],
			[
				"vol",
				"volume"
			],
			[
				"Bloo",
				"BloodChunk"
			],
			[
				"wa",
				"wall_thickness"
			],
			[
				"pre",
				"pressure"
			],
			[
				"nom",
				"nominal_volume"
			],
			[
				"BloodVe",
				"BloodVesselStats"
			],
			[
				"le",
				"length"
			],
			[
				"no",
				"nominal_count"
			],
			[
				"part",
				"part_vessel"
			],
			[
				"in",
				"inflow_alloc"
			],
			[
				"war",
				"warmup_request"
			],
			[
				"sum",
				"sum_debt"
			],
			[
				"with",
				"with_round_op_threshold"
			],
			[
				"ass",
				"assert_eq\tassert_eq!(…, …)"
			],
			[
				"c",
				"capacity"
			],
			[
				"d",
				"demand"
			],
			[
				"Fai",
				"FairAlloc"
			],
			[
				"Fa",
				"FairAlloc"
			],
			[
				"trans",
				"transfer_count"
			],
			[
				"Vess",
				"VesselToHeart"
			],
			[
				"Lung",
				"LungOxygenAbsorption"
			],
			[
				"Mod",
				"ModifierKind"
			],
			[
				"Modif",
				"ModifierBase"
			],
			[
				"Ori",
				"OrganEfficiencyMod"
			],
			[
				"Cu",
				"CurrentBloodOxygen"
			],
			[
				"ciri",
				"critical_blood_oxygen_organ_eff_range"
			],
			[
				"res",
				"rescale_01"
			],
			[
				"De",
				"DecimalRange"
			],
			[
				"Dec",
				"Decimal"
			],
			[
				"Bre",
				"BreathingSettings"
			],
			[
				"Cur",
				"CurrentBloodOxygen"
			],
			[
				"s",
				"system"
			],
			[
				"Mo",
				"Modifier"
			],
			[
				"sec",
				"sec_sub"
			],
			[
				"S",
				"SECONDARY_TO_PRIMARY_SATIATION_CONVERSION_RATE"
			],
			[
				"primsub",
				"prim_sub_actual"
			],
			[
				"pr",
				"primary"
			],
			[
				"prim",
				"prim_sub_max"
			],
			[
				"inv",
				"inventory_item_command"
			],
			[
				"In",
				"InventoryItemCommands"
			],
			[
				"Vie",
				"ViewKind"
			],
			[
				"sele",
				"selection"
			],
			[
				"se",
				"selection_index"
			],
			[
				"sor",
				"sorting_criteria_cycle"
			],
			[
				"Inve",
				"InventorySortingCriteria"
			],
			[
				"Dire",
				"Direction1"
			],
			[
				"ta",
				"table_state"
			],
			[
				"Inv",
				"InventoryView"
			],
			[
				"sort",
				"sort_by"
			],
			[
				"play",
				"player_entity"
			],
			[
				"tabl",
				"table_state"
			],
			[
				"set_",
				"set_second"
			],
			[
				"pl",
				"player_inventory"
			],
			[
				"oxy",
				"oxygen_absorption_mod"
			],
			[
				"po",
				"pollution_absorption"
			],
			[
				"jac",
				"jack_inv"
			],
			[
				"Consu",
				"ConsumeOp"
			],
			[
				"Cont",
				"ContainedBy"
			],
			[
				"Con",
				"ContainedBy"
			],
			[
				"main",
				"main_impl"
			],
			[
				"Wor",
				"WorldApi"
			],
			[
				"spin",
				"spin_threshold"
			],
			[
				"sl",
				"sleep_time"
			],
			[
				"ste",
				"steam_client"
			],
			[
				"thr",
				"throttle"
			],
			[
				"co",
				"connection_time"
			],
			[
				"steam",
				"steam_id"
			],
			[
				"stea",
				"steam_server"
			],
			[
				"Gam",
				"GameServerMessage"
			],
			[
				"Auth",
				"AuthConnectionStatus"
			],
			[
				"thre",
				"thread_1"
			],
			[
				"re",
				"requests"
			],
			[
				"Log",
				"LoginServerConfig"
			],
			[
				"Conn",
				"ConnectionStatus"
			],
			[
				"conn",
				"connections"
			],
			[
				"Cli",
				"ClientRequest"
			],
			[
				"hand",
				"handle_request"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/I/Ikabur/atom/crates/excess/src/commands.rs",
			"settings":
			{
				"buffer_size": 8835,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACrHgAALy8gQ29weXJpZ2h0IDIwMjQgYnkgRGF2aWQgV2Vpa2Vyc2RvcmZlci4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KCnVzZSBjcmF0ZTo6ewogICAgRW50aXR5LCBFbnRpdHlTZXRBcmcsIEVudGl0eVNldENvbXBvbmVudHNUdXBsZSwgU2luZ2xldG9uTWFya2VyLCBTdGF0aWNTaXplZFNlbmRTeW5jSWQsIFdvcmxkLAogICAgZGV0YWlsOjp7RmFicmljLCBVbnNhZmVXb3JsZENlbGx9LAp9Owp1c2UgZXhjZXNzX21hY3Jvczo6YWxsX3R1cGxlczsKCi8vLyBEZWZlcnJlZCBjb21tYW5kcyB0byBleGVjdXRlIG9uIGEgd29ybGQgYXQgdGhlIGVuZCBvZiBhIHN5c3RlbQovLy8KLy8vIENvbW1hbmRzIGNhbiBiZSB1c2VkIHRvIHF1ZXVlIHdvcmsgd2hpbGUgb3RoZXIgcXVlcmllcyBoYXZlIHJlYWQgb3Igd3JpdGUgYWNjZXNzIHRvIHBhcnRzIG9mCi8vLyB0aGUgd29ybGQuIENvbW1hbmRzIGNhbiB0aGVuIGJlIGFwcGxpZWQgYWZ0ZXJ3YXJkcyB3aXRoIHVuaXF1ZSBhY2Nlc3MgdG8gdGhlIHdvcmxkLgovLy8KLy8vICMgRXhhbXBsZQovLy8gYGBgCi8vLyBzdHJ1Y3QgRm9vIHt9OwovLy8gZm4gZXhhbXBsZShtdXQgY29tbWFuZHM6IGF0b206OkNvbW1hbmRzKSB7Ci8vLyAgICAgbGV0IGVpZCA9IGNvbW1hbmRzLnNwYXduKChGb28ge30sIDNfaTMyKSkuaWQoKTsKLy8vICAgICAvLyB1c2UgZWlkLCBidXQgY29tcG9uZW50cyBhcmUgbm90IHlldCBhZGRlZAovLy8gfQovLy8gYGBgCnB1YiBzdHJ1Y3QgQ29tbWFuZHM8J2YsICdxLCBCPiB7CiAgICB3b3JsZF9pZF9nZW46IFVuc2FmZVdvcmxkQ2VsbDwnZiwgQj4sCiAgICBxdWV1ZTogJidxIG11dCBDb21tYW5kUXVldWU8Qj4sCn0KCmltcGw8J2YsICdxLCBCOiBGYWJyaWM+IENvbW1hbmRzPCdmLCAncSwgQj4gewogICAgcHViKGNyYXRlKSBmbiBuZXcoCiAgICAgICAgd29ybGRfaWRfZ2VuOiBVbnNhZmVXb3JsZENlbGw8J2YsIEI+LAogICAgICAgIHF1ZXVlOiAmJ3EgbXV0IENvbW1hbmRRdWV1ZTxCPiwKICAgICkgLT4gU2VsZiB7CiAgICAgICAgU2VsZiB7CiAgICAgICAgICAgIHdvcmxkX2lkX2dlbiwKICAgICAgICAgICAgcXVldWUsCiAgICAgICAgfQogICAgfQoKICAgIC8vLyBTcGF3bnMgYSBuZXcgZW50aXR5IGFmdGVyIHRoZSBzeXN0ZW0gaGFzIGNvbmNsdWRlZAogICAgcHViIGZuIHNwYXduX2VtcHR5PCdjPigmJ2MgbXV0IHNlbGYpIC0+IEVudGl0eUNvbW1hbmRzPCdmLCAncSwgJ2MsIEI+IHsKICAgICAgICAvLyBTQUZFVFk6IEl0IGlzIGFsd2F5cyBzYWZlIHRvIGlzc3VlIGEgbmV3IGVudGl0eSBJRAogICAgICAgIGxldCBpZCA9IHVuc2FmZSB7IHNlbGYud29ybGRfaWRfZ2VuLmdldF9tdXQoKSB9LmltcGxfaXNzdWVfZW50aXR5KCk7CgogICAgICAgIHNlbGYucXVldWUucHVzaChtb3ZlIHx3b3JsZDogJm11dCBXb3JsZDxCPnwgewogICAgICAgICAgICB3b3JsZC5zcGF3bl9lbXB0eV93aXRoX2lkKGlkKTsKICAgICAgICB9KTsKCiAgICAgICAgRW50aXR5Q29tbWFuZHMgeyBjb21tYW5kczogc2VsZiwgaWQgfQogICAgfQoKICAgIC8vLyBTcGF3bnMgYSBuZXcgZW50aXR5IHdpdGggY29tcG9uZW50cyBhZnRlciB0aGUgc3lzdGVtIGhhcyBjb25jbHVkZWQKICAgIHB1YiBmbiBzcGF3bjwnYywgQTogRW50aXR5U2V0Q29tcG9uZW50c1R1cGxlPEI+ICsgJ3N0YXRpYyArIFNlbmQgKyBTeW5jPigKICAgICAgICAmJ2MgbXV0IHNlbGYsCiAgICAgICAgYXJnOiBBLAogICAgKSAtPiBFbnRpdHlDb21tYW5kczwnZiwgJ3EsICdjLCBCPiB7CiAgICAgICAgLy8gU0FGRVRZOiBJdCBpcyBhbHdheXMgc2FmZSB0byBpc3N1ZSBhIG5ldyBlbnRpdHkgSUQKICAgICAgICBsZXQgaWQgPSB1bnNhZmUgeyBzZWxmLndvcmxkX2lkX2dlbi5nZXRfbXV0KCkgfS5pbXBsX2lzc3VlX2VudGl0eSgpOwoKICAgICAgICBzZWxmLnF1ZXVlLnB1c2gobW92ZSB8d29ybGQ6ICZtdXQgV29ybGQ8Qj58IHsKICAgICAgICAgICAgd29ybGQuc3Bhd25fd2l0aF9pZChpZCwgYXJnKTsKICAgICAgICB9KTsKCiAgICAgICAgRW50aXR5Q29tbWFuZHMgeyBjb21tYW5kczogc2VsZiwgaWQgfQogICAgfQoKICAgIC8vLyBEZXNwYXducyBhbiBlbnRpdHkgYWZ0ZXIgdGhlIHN5c3RlbSBoYXMgY29uY2x1ZGVkCiAgICBwdWIgZm4gZGVzcGF3bigmbXV0IHNlbGYsIGlkOiBFbnRpdHkpIHsKICAgICAgICBzZWxmLnF1ZXVlCiAgICAgICAgICAgIC5wdXNoKG1vdmUgfHdvcmxkOiAmbXV0IFdvcmxkPEI+fCB3b3JsZC5kZXNwYXduKGlkKSk7CiAgICB9CgogICAgLy8vIEdldHMgYWNjZXNzIHRvIG9wZXJhdGlvbnMgcmVsYXRlZCB0byBlbnRpdGllcwogICAgcHViIGZuIGVudGl0eTwnYz4oJidjIG11dCBzZWxmLCBpZDogRW50aXR5KSAtPiBFbnRpdHlDb21tYW5kczwnZiwgJ3EsICdjLCBCPiB7CiAgICAgICAgRW50aXR5Q29tbWFuZHMgeyBjb21tYW5kczogc2VsZiwgaWQgfQogICAgfQoKICAgIC8vLyBTZXRzIGEgc2luZ2xldG9uIGFmdGVyIHRoZSBzeXN0ZW0gaGFzIGNvbmNsdWRlZAogICAgcHViIGZuIHNldF9zaW5nbGV0b248J2MsIFM6IFNpbmdsZXRvbk1hcmtlcj4oJidjIG11dCBzZWxmLCB2YWx1ZTogUykgewogICAgICAgIHNlbGYucXVldWUucHVzaChtb3ZlIHx3b3JsZDogJm11dCBXb3JsZDxCPnwgewogICAgICAgICAgICB3b3JsZC5zZXRfc2luZ2xldG9uKHZhbHVlKTsKICAgICAgICB9KTsKICAgIH0KCiAgICBwdWIgZm4gcmVtb3ZlX3NpbmdsZXRvbjwnYywgUzogU2luZ2xldG9uTWFya2VyPigmJ2MgbXV0IHNlbGYpIHsKICAgICAgICBzZWxmLnF1ZXVlLnB1c2gobW92ZSB8d29ybGQ6ICZtdXQgV29ybGQ8Qj58IHsKICAgICAgICAgICAgd29ybGQucmVtb3ZlX3NpbmdsZXRvbjo6PFM+KCk7CiAgICAgICAgfSk7CiAgICB9Cn0KCi8vLyBBbiBvcGVyYXRpb24gd2hpY2ggY2FuIGJlIGFkZGVkIHRvIGEgY29tbWFuZCBxdWV1ZQpwdWIgdHJhaXQgQ29tbWFuZDxCPjogU2VuZCArICdzdGF0aWMgewogICAgZm4gYXBwbHkoc2VsZiwgd29ybGQ6ICZtdXQgV29ybGQ8Qj4pOwp9CgppbXBsPFQ6IFNlbmQgKyAnc3RhdGljLCBCPiBDb21tYW5kPEI+IGZvciBUCndoZXJlCiAgICBUOiBGbk9uY2UoJm11dCBXb3JsZDxCPiksCnsKICAgIGZuIGFwcGx5KHNlbGYsIHdvcmxkOiAmbXV0IFdvcmxkPEI+KSB7CiAgICAgICAgKHNlbGYpKHdvcmxkKQogICAgfQp9CgovLy8gSGVscGVyIHRyYWl0IGZvciBgQm94PGR5biBDb21tYW5kPmAgdG8gY2FsbCBjb25zdW1pbmcgYGFwcGx5YAp0cmFpdCBEeW5Db21tYW5kPEI+IHsKICAgIGZuIGFwcGx5KCZtdXQgc2VsZiwgd29ybGQ6ICZtdXQgV29ybGQ8Qj4pOwp9CgppbXBsPEM6IENvbW1hbmQ8Qj4sIEI+IER5bkNvbW1hbmQ8Qj4gZm9yIE9wdGlvbjxDPiB7CiAgICBmbiBhcHBseSgmbXV0IHNlbGYsIHdvcmxkOiAmbXV0IFdvcmxkPEI+KSB7CiAgICAgICAgc2VsZi50YWtlKCkudW53cmFwKCkuYXBwbHkod29ybGQpOwogICAgfQp9CgovLy8gQSBxdWV1ZSBvZiBjb21tYW5kcwpwdWIgc3RydWN0IENvbW1hbmRRdWV1ZTxCPiB7CiAgICBjb21tYW5kczogVmVjPEJveDxkeW4gRHluQ29tbWFuZDxCPj4+LAp9CgppbXBsPEI+IERlZmF1bHQgZm9yIENvbW1hbmRRdWV1ZTxCPiB7CiAgICBmbiBkZWZhdWx0KCkgLT4gU2VsZiB7CiAgICAgICAgU2VsZiB7CiAgICAgICAgICAgIGNvbW1hbmRzOiBWZWM6Om5ldygpLAogICAgICAgIH0KICAgIH0KfQoKaW1wbDxCPiBDb21tYW5kUXVldWU8Qj4gewogICAgLy8vIEFkZHMgYSBuZXcgY29tbWFuZCB0byB0aGUgZW5kIG9mIHRoZSBxdWV1ZQogICAgcHViIGZuIHB1c2g8QzogQ29tbWFuZDxCPj4oJm11dCBzZWxmLCBjb21tYW5kOiBDKSB7CiAgICAgICAgc2VsZi5jb21tYW5kcy5wdXNoKEJveDo6bmV3KFNvbWUoY29tbWFuZCkpKTsKICAgIH0KCiAgICAvLy8gQXBwbGllcyBhbGwgcXVldWVkIGNvbW1hbmRzIHRvIHRoZSB3b3JsZCBhbmQgY2xlYXJzIHRoZSBxdWV1ZQogICAgcHViIGZuIGFwcGx5KHNlbGYsIHdvcmxkOiAmbXV0IFdvcmxkPEI+KSB7CiAgICAgICAgZm9yIG11dCBjb21tYW5kIGluIHNlbGYuY29tbWFuZHMuaW50b19pdGVyKCkgewogICAgICAgICAgICBjb21tYW5kLmFwcGx5KHdvcmxkKTsKICAgICAgICB9CiAgICB9Cn0KCi8vLyBDb21tYW5kcyBmb3IgZW50aXRpZXMKcHViIHN0cnVjdCBFbnRpdHlDb21tYW5kczwnZiwgJ3EsICdjLCBCPiB7CiAgICBjb21tYW5kczogJidjIG11dCBDb21tYW5kczwnZiwgJ3EsIEI+LAogICAgaWQ6IEVudGl0eSwKfQoKaW1wbDwnZiwgJ3EsICdjLCBCOiBGYWJyaWM+IEVudGl0eUNvbW1hbmRzPCdmLCAncSwgJ2MsIEI+IHsKICAgIC8vLyBHZXRzIHRoZSBJRCBvZiBhbiBlbnRpdHkKICAgIHB1YiBmbiBpZCgmc2VsZikgLT4gRW50aXR5IHsKICAgICAgICBzZWxmLmlkCiAgICB9CgogICAgLy8vIEFkZHMgYSBjb21wb25lbnQgdG8gYW4gZW50aXR5LiBUaGlzIG9wZXJhdGlvbiBpcyBkZWZlcnJlZCB1bnRpbCB0aGUgZW5kIG9mIHRoZSBzeXN0ZW0uCiAgICBwdWIgZm4gYW5kX3NldDxBOiBFbnRpdHlTZXRBcmc8Qj4+KG11dCBzZWxmLCBhcmc6IEEpIC0+IEVudGl0eUNvbW1hbmRzPCdmLCAncSwgJ2MsIEI+IHsKICAgICAgICBzZWxmLnNldChhcmcpOwogICAgICAgIHNlbGYKICAgIH0KCiAgICAvLy8gTWF5YmUgYWRkcyBhIGNvbXBvbmVudCB0byBhbiBlbnRpdHkuIFRoaXMgb3BlcmF0aW9uIGlzIGRlZmVycmVkIHVudGlsIHRoZSBlbmQgb2YgdGhlIHN5c3RlbS4KICAgIHB1YiBmbiBhbmRfc2V0X3NvbWU8QTogRW50aXR5U2V0QXJnPEI+PigKICAgICAgICBtdXQgc2VsZiwKICAgICAgICBtYXliZV9hcmc6IE9wdGlvbjxBPiwKICAgICkgLT4gRW50aXR5Q29tbWFuZHM8J2YsICdxLCAnYywgQj4gewogICAgICAgIGlmIGxldCBTb21lKGFyZykgPSBtYXliZV9hcmcgewogICAgICAgICAgICBzZWxmLnNldChhcmcpOwogICAgICAgIH0KICAgICAgICBzZWxmCiAgICB9CgogICAgLy8vIEFkZHMgYSBjb21wb25lbnQgdG8gYW4gZW50aXR5LiBUaGlzIG9wZXJhdGlvbiBpcyBkZWZlcnJlZCB1bnRpbCB0aGUgZW5kIG9mIHRoZSBzeXN0ZW0uCiAgICBwdWIgZm4gc2V0PEE6IEVudGl0eVNldEFyZzxCPj4oJm11dCBzZWxmLCBhcmc6IEEpIHsKICAgICAgICBsZXQgaWQgPSBzZWxmLmlkOwogICAgICAgIHNlbGYuY29tbWFuZHMKICAgICAgICAgICAgLnF1ZXVlCiAgICAgICAgICAgIC5wdXNoKG1vdmUgfHdvcmxkOiAmbXV0IFdvcmxkPEI+fCBtYXRjaCB3b3JsZC5nZXRfZW50aXR5KGlkKSB7CiAgICAgICAgICAgICAgICBOb25lID0+IHsKICAgICAgICAgICAgICAgICAgICBlcHJpbnRsbiEoImNvdWxkIG5vdCBzZXQgZW50aXR5OiB7aWQ6P30iLCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBTb21lKG11dCBlbnRpdHkpID0+IGFyZy5lbnRpdHlfc2V0X2FyZ19hcHBseSgmbXV0IGVudGl0eSksCiAgICAgICAgICAgIH0pOwogICAgfQoKICAgIC8vLyBBZGRzIG11bHRpcGxlIGNvbXBvbmVudHMgdG8gYW4gZW50aXR5IGF0IG9uY2UuIFRoaXMgb3BlcmF0aW9uIGlzIGRlZmVycmVkIHVudGlsIHRoZSBlbmQKICAgIC8vLyBvZiB0aGUgc3lzdGVtLgogICAgcHViIGZuIGFuZF9zZXRfbWFueTxDQzogJ3N0YXRpYyArIFNlbmQgKyBTeW5jICsgRW50aXR5Q29tbWFuZHNTZXRNYW55PEI+PigKICAgICAgICBtdXQgc2VsZiwKICAgICAgICB2YWx1ZXM6IENDLAogICAgKSAtPiBFbnRpdHlDb21tYW5kczwnZiwgJ3EsICdjLCBCPiB7CiAgICAgICAgc2VsZi5zZXRfbWFueSh2YWx1ZXMpOwogICAgICAgIHNlbGYKICAgIH0KCiAgICAvLy8gQWRkcyBtdWx0aXBsZSBjb21wb25lbnRzIHRvIGFuIGVudGl0eSBhdCBvbmNlLiBUaGlzIG9wZXJhdGlvbiBpcyBkZWZlcnJlZCB1bnRpbCB0aGUgZW5kCiAgICAvLy8gb2YgdGhlIHN5c3RlbS4KICAgIHB1YiBmbiBzZXRfbWFueTxDQzogJ3N0YXRpYyArIFNlbmQgKyBTeW5jICsgRW50aXR5Q29tbWFuZHNTZXRNYW55PEI+PigmbXV0IHNlbGYsIHZhbHVlczogQ0MpIHsKICAgICAgICBsZXQgaWQgPSBzZWxmLmlkOwogICAgICAgIHNlbGYuY29tbWFuZHMucXVldWUucHVzaChtb3ZlIHx3b3JsZDogJm11dCBXb3JsZDxCPnwgewogICAgICAgICAgICB2YWx1ZXMuYXBwbHkoaWQsIHdvcmxkKTsKICAgICAgICB9KTsKICAgIH0KCiAgICAvLy8gUmVtb3ZlcyBhIGNvbXBvbmVudCBmcm9tIGFuIGVudGl0eS4gVGhpcyBvcGVyYXRpb24gaXMgZGVmZXJyZWQgdW50aWwgdGhlIGVuZCBvZiB0aGUgc3lzdGVtLgogICAgcHViIGZuIGFuZF9yZW1vdmU8QzogU3RhdGljU2l6ZWRTZW5kU3luY0lkPihtdXQgc2VsZikgLT4gRW50aXR5Q29tbWFuZHM8J2YsICdxLCAnYywgQj4gewogICAgICAgIHNlbGYucmVtb3ZlOjo8Qz4oKTsKICAgICAgICBzZWxmCiAgICB9CgogICAgLy8vIFJlbW92ZXMgYSBjb21wb25lbnQgZnJvbSBhbiBlbnRpdHkuIFRoaXMgb3BlcmF0aW9uIGlzIGRlZmVycmVkIHVudGlsIHRoZSBlbmQgb2YgdGhlIHN5c3RlbS4KICAgIHB1YiBmbiByZW1vdmU8QzogU3RhdGljU2l6ZWRTZW5kU3luY0lkPigmbXV0IHNlbGYpIHsKICAgICAgICBsZXQgaWQgPSBzZWxmLmlkOwogICAgICAgIHNlbGYuY29tbWFuZHMucXVldWUucHVzaCgKICAgICAgICAgICAgbW92ZSB8d29ybGQ6ICZtdXQgV29ybGQ8Qj58IG1hdGNoIHdvcmxkLmltcGxfbG9jYXRlX2VudGl0eShpZCkgewogICAgICAgICAgICAgICAgTm9uZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgZXByaW50bG4hKCJjb3VsZCBub3QgcmVtb3ZlIGVudGl0eSBjb21wb25lbnQ6IHtpZDo/fSBpcyBub3QgYSB2YWxpZCBlbnRpdHkgSUQiLCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBTb21lKGVudGl0eSkgPT4gewogICAgICAgICAgICAgICAgICAgIHdvcmxkLmltcGxfcmVtb3ZlX2NvbXBvbmVudDo6PEM+KGVudGl0eSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgKTsKICAgIH0KCiAgICAvLy8gRGVzcGF3bnMgdGhlIGVudGl0eQogICAgcHViIGZuIGRlc3Bhd24oc2VsZikgewogICAgICAgIHNlbGYuY29tbWFuZHMKICAgICAgICAgICAgLnF1ZXVlCiAgICAgICAgICAgIC5wdXNoKG1vdmUgfHdvcmxkOiAmbXV0IFdvcmxkPEI+fCB3b3JsZC5kZXNwYXduKHNlbGYuaWQpKTsKICAgIH0KfQoKcHViIHRyYWl0IEVudGl0eUNvbW1hbmRzU2V0TWFueTxCPiB7CiAgICBmbiBhcHBseShzZWxmLCBpZDogRW50aXR5LCB3b3JsZDogJm11dCBXb3JsZDxCPik7Cn0KCm1hY3JvX3J1bGVzISB0YWJsZV9yb3cgewogICAgKCQoJGE6IGlkZW50KSwqKSA9PiB7CiAgICAgICAgI1thbGxvdyhub25fc25ha2VfY2FzZSldCiAgICAgICAgaW1wbDxCOiBGYWJyaWMsICQoJGE6IEVudGl0eVNldEFyZzxCPiksKj4gRW50aXR5Q29tbWFuZHNTZXRNYW55PEI+IGZvciAoJCgkYSwpKikgewogICAgICAgICAgICBmbiBhcHBseShzZWxmLCBpZDogRW50aXR5LCB3b3JsZDogJm11dCBXb3JsZDxCPikgewogICAgICAgICAgICAgICAgaWYgbGV0IFNvbWUobXV0IGVudGl0eSkgPSB3b3JsZC5nZXRfZW50aXR5KGlkKSB7CiAgICAgICAgICAgICAgICAgICAgbGV0ICgkKCRhLCkqKSA9IHNlbGY7CiAgICAgICAgICAgICAgICAgICAgJCgkYS5lbnRpdHlfc2V0X2FyZ19hcHBseSgmbXV0IGVudGl0eSk7KSoKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZXByaW50bG4hKCJjb3VsZCBub3Qgc2V0IGVudGl0eSBjb21wb25lbnQ6IHtpZDo/fSBpcyBub3QgYSB2YWxpZCBlbnRpdHkgSUQiLCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Owp9CgphbGxfdHVwbGVzISh0YWJsZV9yb3csIDEsIDE2LCBBKTsKAAAAAAAAAADtHgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5AAAAAAAAAPkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/pipeline_utils.rs",
			"settings":
			{
				"buffer_size": 5315,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADGFAAAdXNlIGNyYXRlOjp7CiAgICBNYW5hZ2VkTWVzaEJ1ZmZlciwgTWVzaEJ1ZmZlckxheW91dCwgTWVzaFByb3h5SWQsIE1lc2hQcm94eVN0b3JlVmlldywgVWJlckluc3RhbmNlUG9kLAp9Owp1c2UgY2FuZHlfcmVuZGVyX2VsZW1lbnRzOjp7QmluZEdyb3VwTGF5b3V0LCBTaGFkZXJSZXNvdXJjZX07CnVzZSBjYW5keV9yZW5kZXJfbm9kZXM6Okluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjsKdXNlIHN0ZDo6Y29sbGVjdGlvbnM6OkJUcmVlTWFwOwp1c2Ugd2dwdTo6ewogICAgQmxlbmRTdGF0ZSwgQ29sb3JUYXJnZXRTdGF0ZSwgQ29sb3JXcml0ZXMsIEZyYWdtZW50U3RhdGUsIE11bHRpc2FtcGxlU3RhdGUsCiAgICBQaXBlbGluZUNvbXBpbGF0aW9uT3B0aW9ucywgUG9seWdvbk1vZGUsIFByaW1pdGl2ZVN0YXRlLCBQcmltaXRpdmVUb3BvbG9neSwKICAgIFJlbmRlclBpcGVsaW5lRGVzY3JpcHRvciwgVmVydGV4U3RhdGUsCn07CgpwdWIgZm4gY3JlYXRlX3dncHVfcGlwZWxpbmUoCiAgICBsYWJlbDogJnN0ciwKICAgIHNoYWRlcjogJlNoYWRlclJlc291cmNlLAogICAgdG9wb2xvZ3k6IFByaW1pdGl2ZVRvcG9sb2d5LAogICAgcG9seWdvbl9tb2RlOiBQb2x5Z29uTW9kZSwKICAgIGJpbmRfZ3JvdXBfbGF5b3V0czogJlsmQmluZEdyb3VwTGF5b3V0XSwKICAgIGRldmljZTogJndncHU6OkRldmljZSwKICAgIGNvbG9yX2Zvcm1hdDogd2dwdTo6VGV4dHVyZUZvcm1hdCwKICAgIGRlcHRoX3N0ZW5jaWxfZm9ybWF0OiB3Z3B1OjpUZXh0dXJlRm9ybWF0LAogICAgZGVwdGhfd3JpdGVfZW5hYmxlZDogYm9vbCwKKSAtPiB3Z3B1OjpSZW5kZXJQaXBlbGluZSB7CiAgICAvLyBDcmVhdGUgcGlwZWxpbmUgbGF5b3V0CiAgICBsZXQgYmluZF9ncm91cF9sYXlvdXRzOiBWZWM8Xz4gPSBiaW5kX2dyb3VwX2xheW91dHMuaXRlcigpLm1hcCh8YmdsfCBiZ2wucmVzKCkpLmNvbGxlY3QoKTsKICAgIGxldCBwaXBlbGluZV9sYXlvdXQgPSBkZXZpY2UuY3JlYXRlX3BpcGVsaW5lX2xheW91dCgmd2dwdTo6UGlwZWxpbmVMYXlvdXREZXNjcmlwdG9yIHsKICAgICAgICBsYWJlbDogU29tZSgmZm9ybWF0ISgie30gTGF5b3V0IiwgbGFiZWwpKSwKICAgICAgICBiaW5kX2dyb3VwX2xheW91dHM6ICZiaW5kX2dyb3VwX2xheW91dHMsCiAgICAgICAgcHVzaF9jb25zdGFudF9yYW5nZXM6ICZbXSwKICAgIH0pOwoKICAgIC8vIENyZWF0ZSByZW5kZXIgcGlwZWxpbmUKICAgIGxldCBwaXBlbGluZSA9IGRldmljZS5jcmVhdGVfcmVuZGVyX3BpcGVsaW5lKCZSZW5kZXJQaXBlbGluZURlc2NyaXB0b3IgewogICAgICAgIGxhYmVsOiBTb21lKCZmb3JtYXQhKCJ7fSBQaXBlbGluZSIsIGxhYmVsKSksCiAgICAgICAgbGF5b3V0OiBTb21lKCZwaXBlbGluZV9sYXlvdXQpLAogICAgICAgIHZlcnRleDogVmVydGV4U3RhdGUgewogICAgICAgICAgICBtb2R1bGU6ICZzaGFkZXIudmVydGV4X21vZHVsZSwKICAgICAgICAgICAgZW50cnlfcG9pbnQ6IFNvbWUoJnNoYWRlci52ZXJ0ZXhfZW50cnlfcG9pbnQpLAogICAgICAgICAgICBjb21waWxhdGlvbl9vcHRpb25zOiBQaXBlbGluZUNvbXBpbGF0aW9uT3B0aW9ucyB7CiAgICAgICAgICAgICAgICBjb25zdGFudHM6ICZbXSwKICAgICAgICAgICAgICAgIHplcm9faW5pdGlhbGl6ZV93b3JrZ3JvdXBfbWVtb3J5OiB0cnVlLAogICAgICAgICAgICB9LAogICAgICAgICAgICBidWZmZXJzOiAmW10sCiAgICAgICAgfSwKICAgICAgICBmcmFnbWVudDogU29tZShGcmFnbWVudFN0YXRlIHsKICAgICAgICAgICAgbW9kdWxlOiAmc2hhZGVyLmZyYWdtZW50X21vZHVsZSwKICAgICAgICAgICAgZW50cnlfcG9pbnQ6IFNvbWUoJnNoYWRlci5mcmFnbWVudF9lbnRyeV9wb2ludCksCiAgICAgICAgICAgIGNvbXBpbGF0aW9uX29wdGlvbnM6IFBpcGVsaW5lQ29tcGlsYXRpb25PcHRpb25zIHsKICAgICAgICAgICAgICAgIGNvbnN0YW50czogJltdLAogICAgICAgICAgICAgICAgemVyb19pbml0aWFsaXplX3dvcmtncm91cF9tZW1vcnk6IHRydWUsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRhcmdldHM6ICZbU29tZShDb2xvclRhcmdldFN0YXRlIHsKICAgICAgICAgICAgICAgIGZvcm1hdDogY29sb3JfZm9ybWF0LAogICAgICAgICAgICAgICAgYmxlbmQ6IFNvbWUoQmxlbmRTdGF0ZTo6UkVQTEFDRSksCiAgICAgICAgICAgICAgICB3cml0ZV9tYXNrOiBDb2xvcldyaXRlczo6QUxMLAogICAgICAgICAgICB9KV0sCiAgICAgICAgfSksCiAgICAgICAgcHJpbWl0aXZlOiBQcmltaXRpdmVTdGF0ZSB7CiAgICAgICAgICAgIHRvcG9sb2d5LAogICAgICAgICAgICBzdHJpcF9pbmRleF9mb3JtYXQ6IE5vbmUsCiAgICAgICAgICAgIGZyb250X2ZhY2U6IHdncHU6OkZyb250RmFjZTo6Q2N3LAogICAgICAgICAgICBjdWxsX21vZGU6IE5vbmUsCiAgICAgICAgICAgIHVuY2xpcHBlZF9kZXB0aDogZmFsc2UsCiAgICAgICAgICAgIHBvbHlnb25fbW9kZSwKICAgICAgICAgICAgY29uc2VydmF0aXZlOiBmYWxzZSwKICAgICAgICB9LAogICAgICAgIGRlcHRoX3N0ZW5jaWw6IFNvbWUod2dwdTo6RGVwdGhTdGVuY2lsU3RhdGUgewogICAgICAgICAgICBmb3JtYXQ6IGRlcHRoX3N0ZW5jaWxfZm9ybWF0LAogICAgICAgICAgICBkZXB0aF93cml0ZV9lbmFibGVkLAogICAgICAgICAgICBkZXB0aF9jb21wYXJlOiB3Z3B1OjpDb21wYXJlRnVuY3Rpb246Okxlc3MsCiAgICAgICAgICAgIHN0ZW5jaWw6IHdncHU6OlN0ZW5jaWxTdGF0ZTo6ZGVmYXVsdCgpLAogICAgICAgICAgICBiaWFzOiB3Z3B1OjpEZXB0aEJpYXNTdGF0ZTo6ZGVmYXVsdCgpLAogICAgICAgIH0pLAogICAgICAgIG11bHRpc2FtcGxlOiBNdWx0aXNhbXBsZVN0YXRlOjpkZWZhdWx0KCksCiAgICAgICAgbXVsdGl2aWV3OiBOb25lLAogICAgICAgIGNhY2hlOiBOb25lLAogICAgfSk7CgogICAgcGlwZWxpbmUKfQoKcHViIGZuIGVuY29kZV9tZXNoX2luc3RhbmNlczxMSSwgTFgsIExWPigKICAgIG1lc2hfcHJveHlfc3RvcmVfdmlldzogJk1lc2hQcm94eVN0b3JlVmlldywKICAgIGluZGV4X2J1ZjogJk1hbmFnZWRNZXNoQnVmZmVyPExYPiwKICAgIHZlcnRleF9idWY6ICZNYW5hZ2VkTWVzaEJ1ZmZlcjxMVj4sCiAgICBpbnN0X3NldHM6IEJUcmVlTWFwPE1lc2hQcm94eUlkLCBWZWM8TEk+PiwKICAgIGluc3RfcnBhc3NfYnVmOiAmbXV0IEluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjxMST4sCikgd2hlcmUKICAgIExJOiBieXRlbXVjazo6UG9kLAogICAgTFg6IE1lc2hCdWZmZXJMYXlvdXQsCiAgICBMVjogTWVzaEJ1ZmZlckxheW91dCwKewogICAgZm9yIChtZXNoX2lkLCBpbnN0YW5jZXMpIGluIGluc3Rfc2V0cyB7CiAgICAgICAgLy8gRmluZCBtZXNoIGluIGluZGV4IGJ1ZmZlcgogICAgICAgIGxldCBTb21lKG1lc2gpID0gbWVzaF9wcm94eV9zdG9yZV92aWV3LmdldChtZXNoX2lkKSBlbHNlIHsKICAgICAgICAgICAgbG9nOjp0cmFjZSEoIm1lc2ggbm90IGZvdW5kOiB7bWVzaF9pZDo/fSIpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9OwogICAgICAgIGxldCBpbmRleF9jb3VudCA9IG1lc2guYWNjZXNzb3JfbWVzaC5pbmRleF9jb3VudCgpOwogICAgICAgIGxldCBTb21lKGZpcnN0X2luZGV4KSA9IGluZGV4X2J1Zi5sb2NhdGVfdW5pdChtZXNoX2lkKSBlbHNlIHsKICAgICAgICAgICAgbG9nOjp0cmFjZSEoIm1lc2ggbm90IGZvdW5kIGluIGluZGV4IGJ1ZmZlcjoge21lc2hfaWQ6P30iKTsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfTsKICAgICAgICBpZiBpbmRleF9jb3VudCA9PSAwIHsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICAvLyBGaW5kIG1lc2ggaW4gdmVydGV4IGJ1ZmZlcgogICAgICAgIGxldCBTb21lKGJhc2VfdmVydGV4KSA9IHZlcnRleF9idWYubG9jYXRlX3VuaXQobWVzaF9pZCkgZWxzZSB7CiAgICAgICAgICAgIGxvZzo6dHJhY2UhKCJtZXNoIG5vdCBmb3VuZCBpbiB2ZXJ0ZXggYnVmZmVyOiB7bWVzaF9pZDo/fSIpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9OwoKICAgICAgICAvLyBBZGQgaW5zdGFuY2VzIHRvIGluc3RhbmNlIGJ1ZmZlcgogICAgICAgIGluc3RfcnBhc3NfYnVmLnB1c2goCiAgICAgICAgICAgIEdlb21ldHJ5QXJncyB7CiAgICAgICAgICAgICAgICBmaXJzdF9pbmRleCwKICAgICAgICAgICAgICAgIGluZGV4X2NvdW50OiBpbmRleF9jb3VudCBhcyB1MzIsCiAgICAgICAgICAgICAgICBiYXNlX3ZlcnRleDogYmFzZV92ZXJ0ZXggYXMgaTMyLAogICAgICAgICAgICB9LAogICAgICAgICAgICAmaW5zdGFuY2VzLAogICAgICAgICk7CiAgICB9CgogICAgLy8gZGVidWdfcHJpbnRfaW5zdGFuY2VfYnVmZmVyKGluc3RhbmNlX2J1Zi5zdGFnZS5hc19zbGljZSgpKTsKfQoKcHViIGZuIGRlYnVnX3ByaW50X2luc3RhbmNlX2J1ZmZlcihzdGFnZTogJltVYmVySW5zdGFuY2VQb2RdKSB7CiAgICBsb2c6OnRyYWNlISgiaW5zdGFuY2UgYnVmZmVyIHdpdGgge30gaW5zdGFuY2VzOiIsIHN0YWdlLmxlbigpKTsKICAgIGZvciAoaSwgaW5zdGFuY2UpIGluIHN0YWdlLml0ZXIoKS5lbnVtZXJhdGUoKSB7CiAgICAgICAgbG9nOjp0cmFjZSEoIlt7aTowM31dOiB0Zjogezo/fSIsIGluc3RhbmNlLndvcmxkX3RfaW5zdCk7CiAgICB9Cn0KCnB1YiBmbiBkZWJ1Z19wcmludF9kcmF3X2luZGV4ZWRfaW5kaXJlY3Rfc3RhZ2Uoc3RhZ2U6ICZbd2dwdTo6dXRpbDo6RHJhd0luZGV4ZWRJbmRpcmVjdEFyZ3NdKSB7CiAgICBsb2c6OnRyYWNlISgibXVsdGlfZHJhd19pbmRleGVkX2luZGlyZWN0IHdpdGgge30gY29tbWFuZHM6Iiwgc3RhZ2UubGVuKCkpOwogICAgZm9yIChpLCBhcmdzKSBpbiBzdGFnZS5pdGVyKCkuZW51bWVyYXRlKCkgewogICAgICAgIC8vIGxldCBhcmdzX2J5dGVzID0gYnl0ZW11Y2s6OmJ5dGVzX29mKGFyZ3MpOwogICAgICAgIC8vIGxvZzo6dHJhY2UhKCJ7aTowM306IGJ5dGVzOiB7Oj99IiwgYXJnc19ieXRlcyk7CiAgICAgICAgbG9nOjp0cmFjZSEoCiAgICAgICAgICAgICIgIFt7aTowM31dOiBpbmRpY2VzOiB7OjV9Li57OjV9LCBiYXNlX3ZlcnRleDogezo1fSwgaW5zdGFuY2VzOiB7OjN9Li57OjN9IiwKICAgICAgICAgICAgYXJncy5maXJzdF9pbmRleCwKICAgICAgICAgICAgYXJncy5maXJzdF9pbmRleCArIGFyZ3MuaW5kZXhfY291bnQsCiAgICAgICAgICAgIGFyZ3MuYmFzZV92ZXJ0ZXgsCiAgICAgICAgICAgIGFyZ3MuZmlyc3RfaW5zdGFuY2UsCiAgICAgICAgICAgIGFyZ3MuZmlyc3RfaW5zdGFuY2UgKyBhcmdzLmluc3RhbmNlX2NvdW50CiAgICAgICAgKTsKICAgIH0KfQoAAAAAAAAAAMMUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQIAAAAAAABBAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/renderer.rs",
			"settings":
			{
				"buffer_size": 19584,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					158,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASBAAAAAAAABIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASBAAAAAAAABIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASBAAAAAAAABIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASBAAAAAAAABIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"rust_fmt_format_buffer",
					null,
					"BwAAABEAAAAAAAAAVAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAACtAAAAAAAAAK0AAAAAAAAABAAAAAogICDHAAAAAAAAAMsAAAAAAAAAAAAAAP0AAAAAAAAA/QAAAAAAAABBAAAALAogICAgU0hBRE9XX0NBU0NBREVfQ09VTlQsIFNIQURPV19ERVBUSF9GT1JNQVQsIFNIQURPV19NQVBfU0hBUEXWAgAAAAAAANYCAAAAAAAAQQAAAGNvcHlfc2hhZG93X2RlcHRoX3JlbmRlcl90YXJnZXRfdG9fdGV4dHVyZSwgZW5jb2RlX21lc2hfaW5zdGFuY2Vz1gIAAAAAAAARAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wcAAAAAAADbBwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"right_delete",
					null,
					"AgAAABEAAAAAAAAAEQAAAAAAAAAqAAAAY29weV9zaGFkb3dfZGVwdGhfcmVuZGVyX3RhcmdldF90b190ZXh0dXJlEQAAAAAAAAARAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAEQAAAAAAAAA7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"right_delete",
					null,
					"AgAAAEYAAAAAAAAARgAAAAAAAAAVAAAARGVwdGhSZW5kZXJBdHRhY2htZW50RgAAAAAAAABGAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAARgAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"right_delete",
					null,
					"AgAAAF8AAAAAAAAAXwAAAAAAAAAMAAAAR2VvbWV0cnlBcmdzXwAAAAAAAABfAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAXwAAAAAAAABrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"right_delete",
					null,
					"AgAAAGAAAAAAAAAAYAAAAAAAAAAYAAAASW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyYAAAAAAAAABgAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAYAAAAAAAAAB4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					2,
					"right_delete",
					null,
					"AgAAAJgAAAAAAAAAmAAAAAAAAAANAAAAU2hhZG93Q2FzY2FkZZgAAAAAAAAAmAAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAmAAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					2,
					"right_delete",
					null,
					"AgAAAJkAAAAAAAAAmQAAAAAAAAARAAAAU2hhZG93Q2FzY2FkZVJPSXOZAAAAAAAAAJkAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAmQAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					2,
					"right_delete",
					null,
					"AgAAAJ4AAAAAAAAAngAAAAAAAAAXAAAAU2hhZG93RGVwdGhUZXh0dXJlQXJyYXmeAAAAAAAAAJ4AAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAngAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					2,
					"right_delete",
					null,
					"AgAAADcCAAAAAAAANwIAAAAAAAAUAAAAU0hBRE9XX0NBU0NBREVfQ09VTlQ3AgAAAAAAADcCAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAANwIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					2,
					"right_delete",
					null,
					"AgAAADgCAAAAAAAAOAIAAAAAAAATAAAAU0hBRE9XX0RFUFRIX0ZPUk1BVDgCAAAAAAAAOAIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAOAIAAAAAAABLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					2,
					"right_delete",
					null,
					"AgAAADkCAAAAAAAAOQIAAAAAAAAQAAAAU0hBRE9XX01BUF9TSEFQRTkCAAAAAAAAOQIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAOQIAAAAAAABJAgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"rust_fmt_format_buffer",
					null,
					"BwAAABEAAAAAAAAAEQAAAAAAAAABAAAAIEAAAAAAAAAAQAAAAAAAAAAFAAAACiAgICBYAAAAAAAAAFgAAAAAAAAABgAAACAgCiAgIGsAAAAAAAAAbwAAAAAAAAAAAAAAjwAAAAAAAACPAAAAAAAAAAcAAAAgIAogICAg1QEAAAAAAADVAQAAAAAAAAAAAAAjAgAAAAAAACMCAAAAAAAABwAAAAogICAgICA",
					"AQAAAAAAAAABAAAAOQIAAAAAAAA5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::ShadowCascade;\n"
					},
					"AQAAAAAAAAAAAAAAJwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwIAAAAAAAAjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							39,
							39
						],
						"replacement": "use candy_render_nodes::DepthRenderAttachment;\n"
					},
					"AQAAACcAAAAAAAAAVgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgIAAAAAAABKAgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							86,
							86
						],
						"replacement": "use candy_render_nodes::ShadowDepthTextureArray;\n"
					},
					"AQAAAFYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQIAAAAAAAB5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							135,
							135
						],
						"replacement": "use candy_render_nodes::ShadowCascadeROIs;\n"
					},
					"AQAAAIcAAAAAAAAAsgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqgIAAAAAAACqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACyAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U2hhZG93Q2FzY2FkZTsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6RGVwdGhSZW5kZXJBdHRhY2htZW50Owp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpTaGFkb3dEZXB0aFRleHR1cmVBcnJheTsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U2hhZG93Q2FzY2FkZVJPSXM7Cg0AAAAAAAAADQAAAAAAAAAAAAAAIgIAAAAAAACVAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QIAAAAAAADVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAAAAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgIAAAAAAACWAgAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6SW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyOwoNAAAAAAAAAA0AAAAAAAAAAAAAAFwCAAAAAAAAdgIAAAAAAAAAAAAAlwIAAAAAAACbAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::SHADOW_DEPTH_FORMAT;\n"
					},
					"AQAAAAAAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAIAAAAAAAC0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							45,
							45
						],
						"replacement": "use candy_render_nodes::SHADOW_MAP_SHAPE;\n"
					},
					"AQAAAC0AAAAAAAAAVwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QIAAAAAAADhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABXAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U0hBRE9XX0RFUFRIX0ZPUk1BVDsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U0hBRE9XX01BUF9TSEFQRTsKDQAAAAAAAAANAAAAAAAAAAAAAACzAgAAAAAAANoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwMAAAAAAAALAwAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::SHADOW_CASCADE_COUNT;\n"
					},
					"AQAAAAAAAAAAAAAALgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wIAAAAAAADbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U0hBRE9XX0NBU0NBREVfQ09VTlQ7Cg0AAAAAAAAADQAAAAAAAAAAAAAAswIAAAAAAADJAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::copy_shadow_depth_render_target_to_texture;\n"
					},
					"AQAAAAAAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAADxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							68,
							68
						],
						"replacement": "use candy_render_nodes::GeometryArgs;\n"
					},
					"AQAAAEQAAAAAAAAAagAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQMAAAAAAAA1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"rust_fmt_format_buffer",
					null,
					"BgAAAAAAAAAAAAAAAAAAAAAAAABqAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6Y29weV9zaGFkb3dfZGVwdGhfcmVuZGVyX3RhcmdldF90b190ZXh0dXJlOwp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpHZW9tZXRyeUFyZ3M7Cg0AAAAAAAAADQAAAAAAAAAAAAAARQIAAAAAAABxAgAAAAAAAAAAAACIAgAAAAAAAJoCAAAAAAAAAAAAANUCAAAAAAAA1QIAAAAAAAAEAAAACiAgIO4CAAAAAAAA8gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwMAAAAAAABbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAALwMAAAAAAAAvAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/sky_pipeline.rs",
			"settings":
			{
				"buffer_size": 2112,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					2,
					"right_delete",
					null,
					"AgAAAFcAAAAAAAAAVwAAAAAAAAAMAAAAU2hhZGVyTW9kdWxlVwAAAAAAAABXAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAVwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAABEAAAAAAAAAUQAAAAAAAAAAAAAAZgAAAAAAAABqAAAAAAAAAAAAAACRAAAAAAAAAJEAAAAAAAAARQAAACwgU2hhZGVyLCAKICAgIFNoYWRlclJlc291cmNlLCBTdGFuZGFyZEJpbmRpbmdzLCBjcmVhdGVfd2dwdV9waXBlbGluZQ",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"right_delete",
					null,
					"AgAAACcAAAAAAAAAJwAAAAAAAAAXAAAAU2hhZGVyLCBTaGFkZXJSZXNvdXJjZSwnAAAAAAAAACcAAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAE4AAAAAAAAATgAAAAAAAAAEAAAACiAgIGMAAAAAAAAAZwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::Shader;\n"
					},
					"AQAAAAAAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							35,
							35
						],
						"replacement": "use candy_render_elements::ShaderModule;\n"
					},
					"AQAAACMAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABMAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6U2hhZGVyOwp1c2UgY2FuZHlfcmVuZGVyX2VsZW1lbnRzOjpTaGFkZXJNb2R1bGU7Cg0AAAAAAAAADQAAAAAAAAAAAAAAewAAAAAAAACuAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwAAAAAAAABzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::ShaderResource;\n"
					},
					"AQAAAAAAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAArAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6U2hhZGVyUmVzb3VyY2U7Cg0AAAAAAAAADQAAAAAAAAAAAAAArQAAAAAAAAC9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABACAAAdXNlIGNyYXRlOjp7CiAgICBjcmVhdGVfd2dwdV9waXBlbGluZSwgU3RhbmRhcmRCaW5kaW5ncywgREVQVEhfU1RFTkNJTF9GT1JNQVQsIFJFTkRFUl9DT0xPUl9GT1JNQVQsCiAgICBTSEFERVJfQVNTRVRfUEFUSCwKfTsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6e1NoYWRlciwgU2hhZGVyTW9kdWxlLCBTaGFkZXJSZXNvdXJjZX07CnVzZSBzdGQ6OnBhdGg6OlBhdGhCdWY7CgpwdWIgc3RydWN0IFNreVBpcGVsaW5lIHsKICAgIHBpcGVsaW5lOiB3Z3B1OjpSZW5kZXJQaXBlbGluZSwKfQoKaW1wbCBTa3lQaXBlbGluZSB7CiAgICBwdWIgZm4gbmV3KHdncHVfZGV2aWNlOiAmd2dwdTo6RGV2aWNlLCBiaW5kaW5nczogJlN0YW5kYXJkQmluZGluZ3MpIC0+IFNlbGYgewogICAgICAgIGxldCBzaGFkZXJfYXNzZXRfcGF0aCA9IFBhdGhCdWY6OmZyb20oU0hBREVSX0FTU0VUX1BBVEgpOwoKICAgICAgICBsZXQgc2hhZGVyID0gU2hhZGVyIHsKICAgICAgICAgICAgbGFiZWw6ICJTa3kgU2hhZGVyIi5pbnRvKCksCiAgICAgICAgICAgIHZlcnRleF9zaGFkZXI6IFNoYWRlck1vZHVsZSB7CiAgICAgICAgICAgICAgICBwYXRoOiBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJza3lfcGlwZWxpbmUud2dzbCIpLAogICAgICAgICAgICAgICAgZGVwczogdmVjIVsKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bmlmb3Jtcy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic3RhbmRhcmRfYmluZGluZ3Mud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInNreS53Z3NsIiksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgZW50cnlfcG9pbnQ6ICJ2c19tYWluIi5pbnRvKCksCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZyYWdtZW50X3NoYWRlcjogU2hhZGVyTW9kdWxlIHsKICAgICAgICAgICAgICAgIHBhdGg6IHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInNreV9waXBlbGluZS53Z3NsIiksCiAgICAgICAgICAgICAgICBkZXBzOiB2ZWMhWwogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVuaWZvcm1zLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJzdGFuZGFyZF9iaW5kaW5ncy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic2t5Lndnc2wiKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBlbnRyeV9wb2ludDogImZzX21haW4iLmludG8oKSwKICAgICAgICAgICAgfSwKICAgICAgICB9OwoKICAgICAgICBsZXQgc2hhZGVyX3JlcyA9IFNoYWRlclJlc291cmNlOjpuZXcoJnNoYWRlciwgd2dwdV9kZXZpY2UpLnVud3JhcCgpOwoKICAgICAgICBsZXQgcGlwZWxpbmUgPSBjcmVhdGVfd2dwdV9waXBlbGluZSgKICAgICAgICAgICAgInNreSIsCiAgICAgICAgICAgICZzaGFkZXJfcmVzLAogICAgICAgICAgICB3Z3B1OjpQcmltaXRpdmVUb3BvbG9neTo6VHJpYW5nbGVMaXN0LAogICAgICAgICAgICB3Z3B1OjpQb2x5Z29uTW9kZTo6RmlsbCwKICAgICAgICAgICAgJltiaW5kaW5ncy5jYW1lcmFfbGF5b3V0KCksIGJpbmRpbmdzLnNreV9sYXlvdXQoKV0sCiAgICAgICAgICAgIHdncHVfZGV2aWNlLAogICAgICAgICAgICBSRU5ERVJfQ09MT1JfRk9STUFULAogICAgICAgICAgICBERVBUSF9TVEVOQ0lMX0ZPUk1BVCwKICAgICAgICAgICAgZmFsc2UsCiAgICAgICAgKTsKCiAgICAgICAgU2VsZiB7IHBpcGVsaW5lIH0KICAgIH0KCiAgICBwdWIgZm4gZW5jb2RlX3JwYXNzKCZzZWxmLCBycGFzczogJm11dCB3Z3B1OjpSZW5kZXJQYXNzLCBiaW5kaW5nczogJlN0YW5kYXJkQmluZGluZ3MpIHsKICAgICAgICBycGFzcy5zZXRfcGlwZWxpbmUoJnNlbGYucGlwZWxpbmUpOwogICAgICAgIHJwYXNzLnNldF9iaW5kX2dyb3VwKDAsIGJpbmRpbmdzLmNhbWVyYV9iZygpLCAmW10pOwogICAgICAgIHJwYXNzLnNldF9iaW5kX2dyb3VwKDEsIGJpbmRpbmdzLnNreV9iZygpLCAmW10pOwogICAgICAgIHJwYXNzLmRyYXcoMC4uNCwgMC4uMSk7CiAgICB9Cn0KAAAAAAAAAABACAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/standard_bindings.rs",
			"settings":
			{
				"buffer_size": 5712,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::UniformGroup;\n"
					},
					"AQAAAAAAAAAAAAAAKQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"rust_fmt_format_buffer",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAAApAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6VW5pZm9ybUdyb3VwOwoFAAAAAAAAAAUAAAAAAAAAAAAAAHAAAAAAAAAAcAAAAAAAAAAVAAAAQlJfREZHX0FCX0xVVF9TSVpFLCBQrQAAAAAAAACtAAAAAAAAAAQAAAAKICAgxgAAAAAAAADKAAAAAAAAAAAAAADpAAAAAAAAAP4AAAAAAAAAAAAAACIBAAAAAAAASwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"right_delete",
					null,
					"AQAAAG8AAAAAAAAAbwAAAAAAAABJAAAAUGJyRGZnQWJMdXQsIFJnYmFGMTZDdWJlTWFwVGV4dHVyZSwgU2hhZG93Q2FzY2FkZVVuaWZvcm1Hcm91cCwgU2hhZG93RGVwdA",
					"AQAAAAAAAAABAAAAbwAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					2,
					"right_delete",
					null,
					"AgAAAG8AAAAAAAAAbwAAAAAAAAANAAAAaFRleHR1cmVBcnJheW8AAAAAAAAAbwAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAbwAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"right_delete",
					null,
					"AgAAAIUAAAAAAAAAhQAAAAAAAAAMAAAAVW5pZm9ybUdyb3VwhQAAAAAAAACFAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAhQAAAAAAAACRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					2,
					"right_delete",
					null,
					"AgAAAIYAAAAAAAAAhgAAAAAAAAATAAAAUEJSX0RGR19BQl9MVVRfU0laRYYAAAAAAAAAhgAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAhgAAAAAAAACZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAG8AAAAAAAAAbwAAAAAAAAAFAAAACiAgICB/AAAAAAAAAH8AAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAhgAAAAAAAACGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::PbrDfgAbLut;\n"
					},
					"AQAAAAAAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							37,
							37
						],
						"replacement": "use candy_render_nodes::RgbaF16CubeMapTexture;\n"
					},
					"AQAAACUAAAAAAAAAVAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							84,
							84
						],
						"replacement": "use candy_render_nodes::ShadowDepthTextureArray;\n"
					},
					"AQAAAFQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wAAAAAAAADTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							133,
							133
						],
						"replacement": "use candy_render_nodes::PbrDfgAbLut;\n"
					},
					"AQAAAIUAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACqAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6UGJyRGZnQWJMdXQ7CnVzZSBjYW5keV9yZW5kZXJfbm9kZXM6OlJnYmFGMTZDdWJlTWFwVGV4dHVyZTsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U2hhZG93RGVwdGhUZXh0dXJlQXJyYXk7CnVzZSBjYW5keV9yZW5kZXJfbm9kZXM6OlBickRmZ0FiTHV0OwoNAAAAAAAAAA0AAAAAAAAAAAAAAMwAAAAAAAAAIwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::PBR_DFG_AB_LUT_SIZE;\n"
					},
					"AQAAAAAAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							45,
							45
						],
						"replacement": "use candy_render_nodes::ShadowCascadeUniformGroup;\n"
					},
					"AQAAAC0AAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAABgAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6UEJSX0RGR19BQl9MVVRfU0laRTsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U2hhZG93Q2FzY2FkZVVuaWZvcm1Hcm91cDsKDQAAAAAAAAANAAAAAAAAAAAAAADnAAAAAAAAAOwAAAAAAAAAAAAAABYBAAAAAAAAMQEAAAAAAAAAAAAAQgEAAAAAAABdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wAAAAAAAADfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"cut",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAABFAAAAQmluZEdyb3VwLCBCaW5kR3JvdXBCdWlsZGVyLCBCaW5kR3JvdXBMYXlvdXQsIEJpbmRHcm91cExheW91dEJ1aWxkZXIs",
					"AQAAAAAAAAABAAAAEQAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAHsAAAAAAAAAfAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAIkAAAAAAAAAzgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiQAAAAAAAACJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAM4AAAAAAAAAzwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"rust_fmt_format_buffer",
					null,
					"BgAAAAwAAAAAAAAADAAAAAAAAAAGAAAACiAgICAgHwAAAAAAAAAfAAAAAAAAAAQAAAAKICAgLwAAAAAAAAAvAAAAAAAAAAIAAAAsCnAAAAAAAAAAcAAAAAAAAAANAAAAVW5pZm9ybUdyb3VwLHAAAAAAAAAAdQAAAAAAAAAAAAAAugAAAAAAAADJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABQFgAAdXNlIGNyYXRlOjp7Q2FtZXJhVW5pZm9ybUdyb3VwLCBTa3lVbmlmb3JtR3JvdXB9Owp1c2UgY2FuZHlfY2FtZXJhOjpDYW1lcmFNYXRyaWNlczsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6ewogICAgQmluZEdyb3VwLCBCaW5kR3JvdXBCdWlsZGVyLCBCaW5kR3JvdXBMYXlvdXQsIEJpbmRHcm91cExheW91dEJ1aWxkZXIsIFVuaWZvcm1Hcm91cCwKfTsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6ewogICAgUGJyRGZnQWJMdXQsIFJnYmFGMTZDdWJlTWFwVGV4dHVyZSwgU2hhZG93Q2FzY2FkZVVuaWZvcm1Hcm91cCwgU2hhZG93RGVwdGhUZXh0dXJlQXJyYXksCiAgICBQQlJfREZHX0FCX0xVVF9TSVpFLAp9Owp1c2UgY2FuZHlfc2t5Ojp7CiAgICBTS1lfRElGRlVTRV9JUlJBRElBTkNFX0NVQkVfTUFQX1NJWkUsIFNLWV9SQURJQU5DRV9DVUJFX01BUF9TSVpFLAogICAgU0tZX1NQRUNVTEFSX1JBRElBTkNFX0NVQkVfTUFQX01JUF9MRVZFTF9DT1VOVCwgU0tZX1NQRUNVTEFSX1JBRElBTkNFX0NVQkVfTUFQX1NJWkUsCn07CnVzZSBjYW5keV91dGlsczo6e0Jha2VkU2t5LCBJbWFnZVNoYXBlLCBTa3l9Owp1c2UgbWFnaV9ic2RmOjpTcGxpdFN1bUx1dDsKCnB1YiBjb25zdCBTS1lfTFVUX0ZPUk1BVDogd2dwdTo6VGV4dHVyZUZvcm1hdCA9IHdncHU6OlRleHR1cmVGb3JtYXQ6OlJnYmExNkZsb2F0OwoKcHViIHN0cnVjdCBTdGFuZGFyZEJpbmRpbmdzIHsKICAgIGNhbWVyYV9idWY6IHdncHU6OkJ1ZmZlciwKICAgIHBicl9kZmdfYWJfbHV0OiBQYnJEZmdBYkx1dCwKICAgIGNhbWVyYV9sYXlvdXQ6IEJpbmRHcm91cExheW91dCwKICAgIGNhbWVyYV9iZzogQmluZEdyb3VwLAoKICAgIHNreV9idWY6IHdncHU6OkJ1ZmZlciwKICAgIHNoYWRvd19jYXNjYWRlX2J1Zjogd2dwdTo6QnVmZmVyLAogICAgc2t5X3JhZGlhbmNlOiBSZ2JhRjE2Q3ViZU1hcFRleHR1cmUsCiAgICBza3lfZGlmZnVzZV9pcnJhZGlhbmNlOiBSZ2JhRjE2Q3ViZU1hcFRleHR1cmUsCiAgICBza3lfc3BlY3VsYXJfcmFkaWFuY2U6IFJnYmFGMTZDdWJlTWFwVGV4dHVyZSwKICAgIHNreV9sYXlvdXQ6IEJpbmRHcm91cExheW91dCwKICAgIHNreV9iZzogQmluZEdyb3VwLAp9CgppbXBsIFN0YW5kYXJkQmluZGluZ3MgewogICAgcHViIGZuIG5ldygKICAgICAgICB3Z3B1X2RldmljZTogJndncHU6OkRldmljZSwKICAgICAgICB3Z3B1X3F1ZXVlOiAmd2dwdTo6UXVldWUsCiAgICAgICAgc2hhZG93X2Nhc2NhZGVfdGV4OiAmU2hhZG93RGVwdGhUZXh0dXJlQXJyYXksCiAgICApIC0+IFNlbGYgewogICAgICAgIGxldCBjYW1lcmFfYnVmID0gQ2FtZXJhVW5pZm9ybUdyb3VwOjpjcmVhdGVfYnVmZmVyKHdncHVfZGV2aWNlKTsKCiAgICAgICAgbGV0IHBicl9kZmdfYWJfbHV0ID0gUGJyRGZnQWJMdXQ6Om5ldyh3Z3B1X2RldmljZSwgU29tZSgicGJyIGRmZyBhYiBsdXQiKSk7CgogICAgICAgIGxldCBzcGxpdF9zdW1fbHV0ID0gU3BsaXRTdW1MdXQ6Om5ldyhQQlJfREZHX0FCX0xVVF9TSVpFLCAxMDApOwogICAgICAgIHBicl9kZmdfYWJfbHV0LnVwbG9hZCh3Z3B1X3F1ZXVlLCAmc3BsaXRfc3VtX2x1dCk7CgogICAgICAgIGxldCBjYW1lcmFfbGF5b3V0ID0gQmluZEdyb3VwTGF5b3V0QnVpbGRlcjo6bmV3KCkKICAgICAgICAgICAgLndpdGhfbGFiZWwoImRlZmF1bHQgY2FtZXJhIHVuaWZvcm0gbGF5b3V0IikKICAgICAgICAgICAgLndpdGhfYmluZGluZyhDYW1lcmFVbmlmb3JtR3JvdXA6OmJpbmRpbmdfdHlwZSgpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhwYnJfZGZnX2FiX2x1dC5iaW5kaW5nX3R5cGVzKCkpCiAgICAgICAgICAgIC5maW5hbGl6ZSh3Z3B1X2RldmljZSk7CgogICAgICAgIGxldCBjYW1lcmFfYmcgPSBCaW5kR3JvdXBCdWlsZGVyOjpuZXcoY2FtZXJhX2xheW91dC5jbG9uZSgpKQogICAgICAgICAgICAud2l0aF9sYWJlbCgiZGVmYXVsdCBjYW1lcmEgdW5pZm9ybSIpCiAgICAgICAgICAgIC53aXRoX2JpbmRpbmcoY2FtZXJhX2J1Zi5hc19lbnRpcmVfYmluZGluZygpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhwYnJfZGZnX2FiX2x1dC5iaW5kaW5nX3Jlc291cmNlcygpKQogICAgICAgICAgICAuZmluYWxpemUod2dwdV9kZXZpY2UpOwoKICAgICAgICBsZXQgc2t5X2J1ZiA9IFNreVVuaWZvcm1Hcm91cDo6Y3JlYXRlX2J1ZmZlcih3Z3B1X2RldmljZSk7CgogICAgICAgIGxldCBzaGFkb3dfY2FzY2FkZV9idWYgPSBTaGFkb3dDYXNjYWRlVW5pZm9ybUdyb3VwOjpjcmVhdGVfYnVmZmVyKHdncHVfZGV2aWNlKTsKCiAgICAgICAgbGV0IHNreV9yYWRpYW5jZSA9IFJnYmFGMTZDdWJlTWFwVGV4dHVyZTo6bmV3KAogICAgICAgICAgICB3Z3B1X2RldmljZSwKICAgICAgICAgICAgU0tZX1JBRElBTkNFX0NVQkVfTUFQX1NJWkUgYXMgdTMyLAogICAgICAgICAgICAxLAogICAgICAgICAgICBTb21lKCJza3kgcmFkaWFuY2UiKSwKICAgICAgICApOwoKICAgICAgICBsZXQgc2t5X2RpZmZ1c2VfaXJyYWRpYW5jZSA9IFJnYmFGMTZDdWJlTWFwVGV4dHVyZTo6bmV3KAogICAgICAgICAgICB3Z3B1X2RldmljZSwKICAgICAgICAgICAgU0tZX0RJRkZVU0VfSVJSQURJQU5DRV9DVUJFX01BUF9TSVpFIGFzIHUzMiwKICAgICAgICAgICAgMSwKICAgICAgICAgICAgU29tZSgic2t5IGRpZmZ1c2UgaXJyYWRpYW5jZSIpLAogICAgICAgICk7CgogICAgICAgIGxldCBza3lfc3BlY3VsYXJfcmFkaWFuY2UgPSBSZ2JhRjE2Q3ViZU1hcFRleHR1cmU6Om5ldygKICAgICAgICAgICAgd2dwdV9kZXZpY2UsCiAgICAgICAgICAgIFNLWV9TUEVDVUxBUl9SQURJQU5DRV9DVUJFX01BUF9TSVpFIGFzIHUzMiwKICAgICAgICAgICAgU0tZX1NQRUNVTEFSX1JBRElBTkNFX0NVQkVfTUFQX01JUF9MRVZFTF9DT1VOVCBhcyB1MzIsCiAgICAgICAgICAgIFNvbWUoInNreSBzcGVjdWxhciByYWRpYW5jZSIpLAogICAgICAgICk7CgogICAgICAgIGxldCBza3lfbGF5b3V0ID0gQmluZEdyb3VwTGF5b3V0QnVpbGRlcjo6bmV3KCkKICAgICAgICAgICAgLndpdGhfbGFiZWwoImRlZmF1bHQgc2t5IHVuaWZvcm0gbGF5b3V0IikKICAgICAgICAgICAgLndpdGhfYmluZGluZyhTa3lVbmlmb3JtR3JvdXA6OmJpbmRpbmdfdHlwZSgpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5nKFNoYWRvd0Nhc2NhZGVVbmlmb3JtR3JvdXA6OmJpbmRpbmdfdHlwZSgpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhzaGFkb3dfY2FzY2FkZV90ZXguYmluZGluZ190eXBlcygpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhza3lfcmFkaWFuY2UuYmluZGluZ190eXBlcygpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhza3lfZGlmZnVzZV9pcnJhZGlhbmNlLmJpbmRpbmdfdHlwZXMoKSkKICAgICAgICAgICAgLndpdGhfYmluZGluZ3Moc2t5X3NwZWN1bGFyX3JhZGlhbmNlLmJpbmRpbmdfdHlwZXMoKSkKICAgICAgICAgICAgLmZpbmFsaXplKHdncHVfZGV2aWNlKTsKCiAgICAgICAgbGV0IHNreV9iZyA9IEJpbmRHcm91cEJ1aWxkZXI6Om5ldyhza3lfbGF5b3V0LmNsb25lKCkpCiAgICAgICAgICAgIC53aXRoX2xhYmVsKCJkZWZhdWx0IHNreSB1bmlmb3JtIikKICAgICAgICAgICAgLndpdGhfYmluZGluZyhza3lfYnVmLmFzX2VudGlyZV9iaW5kaW5nKCkpCiAgICAgICAgICAgIC53aXRoX2JpbmRpbmcoc2hhZG93X2Nhc2NhZGVfYnVmLmFzX2VudGlyZV9iaW5kaW5nKCkpCiAgICAgICAgICAgIC53aXRoX2JpbmRpbmdzKHNoYWRvd19jYXNjYWRlX3RleC5iaW5kaW5nX3Jlc291cmNlcygpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhza3lfcmFkaWFuY2UuYmluZGluZ19yZXNvdXJjZXMoKSkKICAgICAgICAgICAgLndpdGhfYmluZGluZ3Moc2t5X2RpZmZ1c2VfaXJyYWRpYW5jZS5iaW5kaW5nX3Jlc291cmNlcygpKQogICAgICAgICAgICAud2l0aF9iaW5kaW5ncyhza3lfc3BlY3VsYXJfcmFkaWFuY2UuYmluZGluZ19yZXNvdXJjZXMoKSkKICAgICAgICAgICAgLmZpbmFsaXplKHdncHVfZGV2aWNlKTsKCiAgICAgICAgU2VsZiB7CiAgICAgICAgICAgIGNhbWVyYV9idWYsCiAgICAgICAgICAgIHBicl9kZmdfYWJfbHV0LAogICAgICAgICAgICBjYW1lcmFfbGF5b3V0LAogICAgICAgICAgICBjYW1lcmFfYmcsCiAgICAgICAgICAgIHNreV9idWYsCiAgICAgICAgICAgIHNoYWRvd19jYXNjYWRlX2J1ZiwKICAgICAgICAgICAgc2t5X3JhZGlhbmNlLAogICAgICAgICAgICBza3lfZGlmZnVzZV9pcnJhZGlhbmNlLAogICAgICAgICAgICBza3lfc3BlY3VsYXJfcmFkaWFuY2UsCiAgICAgICAgICAgIHNreV9sYXlvdXQsCiAgICAgICAgICAgIHNreV9iZywKICAgICAgICB9CiAgICB9CgogICAgcHViIGZuIGNhbWVyYV9sYXlvdXQoJnNlbGYpIC0+ICZCaW5kR3JvdXBMYXlvdXQgewogICAgICAgICZzZWxmLmNhbWVyYV9sYXlvdXQKICAgIH0KCiAgICBwdWIgZm4gc2t5X2xheW91dCgmc2VsZikgLT4gJkJpbmRHcm91cExheW91dCB7CiAgICAgICAgJnNlbGYuc2t5X2xheW91dAogICAgfQoKICAgIHB1YiBmbiBjYW1lcmFfYmcoJnNlbGYpIC0+ICZ3Z3B1OjpCaW5kR3JvdXAgewogICAgICAgICZzZWxmLmNhbWVyYV9iZwogICAgfQoKICAgIHB1YiBmbiBza3lfYmcoJnNlbGYpIC0+ICZ3Z3B1OjpCaW5kR3JvdXAgewogICAgICAgICZzZWxmLnNreV9iZwogICAgfQoKICAgIHB1YiBmbiB3cml0ZV9jYW1lcmFfYnVmZmVyKAogICAgICAgICZzZWxmLAogICAgICAgIGNhbWVyYTogJkNhbWVyYU1hdHJpY2VzLAogICAgICAgIHNjcmVlbl9zaXplOiBJbWFnZVNoYXBlLAogICAgICAgIHF1ZXVlOiAmd2dwdTo6UXVldWUsCiAgICApIHsKICAgICAgICBsZXQgdW5pZm9ybSA9IENhbWVyYVVuaWZvcm1Hcm91cDo6ZnJvbV9jYW1lcmEoY2FtZXJhLCBzY3JlZW5fc2l6ZSk7CiAgICAgICAgdW5pZm9ybS53cml0ZV9idWZmZXIoJnNlbGYuY2FtZXJhX2J1ZiwgcXVldWUpOwogICAgfQoKICAgIHB1YiBmbiB3cml0ZV9za3lfYnVmZmVyKCZzZWxmLCBza3k6ICZTa3ksIHF1ZXVlOiAmd2dwdTo6UXVldWUpIHsKICAgICAgICBsZXQgdW5pZm9ybSA9IFNreVVuaWZvcm1Hcm91cDo6ZnJvbV9za3koc2t5KTsKICAgICAgICB1bmlmb3JtLndyaXRlX2J1ZmZlcigmc2VsZi5za3lfYnVmLCBxdWV1ZSk7CiAgICB9CgogICAgcHViIGZuIHdyaXRlX2Jha2VkX3NreSgmc2VsZiwgYmFrZWRfc2t5OiBCYWtlZFNreSwgcXVldWU6ICZ3Z3B1OjpRdWV1ZSkgewogICAgICAgIHNlbGYuc2t5X3JhZGlhbmNlLndyaXRlKCZiYWtlZF9za3kucmFkaWFuY2UsIHF1ZXVlKTsKCiAgICAgICAgc2VsZi5za3lfZGlmZnVzZV9pcnJhZGlhbmNlCiAgICAgICAgICAgIC53cml0ZSgmYmFrZWRfc2t5LmRpZmZ1c2VfaXJyYWRpYW5jZSwgcXVldWUpOwoKICAgICAgICBzZWxmLnNreV9zcGVjdWxhcl9yYWRpYW5jZQogICAgICAgICAgICAud3JpdGVfbWlwX21hcHMoYmFrZWRfc2t5LnNwZWN1bGFyX3JhZGlhbmNlLmN1YmVfbWFwcygpLCBxdWV1ZSk7CiAgICB9CgogICAgcHViIGZuIHdyaXRlX3NoYWRvd19jYXNjYWRlX2J1ZmZlcigKICAgICAgICAmc2VsZiwKICAgICAgICB1bmlmb3JtOiAmU2hhZG93Q2FzY2FkZVVuaWZvcm1Hcm91cCwKICAgICAgICBxdWV1ZTogJndncHU6OlF1ZXVlLAogICAgKSB7CiAgICAgICAgdW5pZm9ybS53cml0ZV9idWZmZXIoJnNlbGYuc2hhZG93X2Nhc2NhZGVfYnVmLCBxdWV1ZSk7CiAgICB9Cn0KAAAAAAAAAABQFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/terrain_pipeline.rs",
			"settings":
			{
				"buffer_size": 4155,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"cut",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAA7AAAAQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCA",
					"AQAAAAAAAAABAAAAEQAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"rust_fmt_format_buffer",
					null,
					"BwAAABEAAAAAAAAAJwAAAAAAAAAAAAAAPwAAAAAAAAA/AAAAAAAAABoAAAAKICAgIERFUFRIX1NURU5DSUxfRk9STUFULGwAAAAAAAAAbAAAAAAAAAAVAAAAIFJFTkRFUl9DT0xPUl9GT1JNQVQscgAAAAAAAAByAAAAAAAAABMAAABIQURFUl9BU1NFVF9QQVRILCBTvAAAAAAAAAC8AAAAAAAAAAQAAAAKICAg0AAAAAAAAADQAAAAAAAAABUAAAAgY3JlYXRlX3dncHVfcGlwZWxpbmXQAAAAAAAAABEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use wgpu::BindGroupLayout;\n"
					},
					"AQAAAAAAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwAAAAAAAAAnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAdXNlIHdncHU6OkJpbmRHcm91cExheW91dDsK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupLayout;\n"
					},
					"AQAAAAAAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwAAAAAAAAArAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACwAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"paste",
					null,
					"AQAAAC0AAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABrAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6e0JpbmRHcm91cExheW91dCwgQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCB9OwoNAAAAAAAAAA0AAAAAAAAAAAAAABMBAAAAAAAAawEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"right_delete",
					null,
					"AgAAAEAAAAAAAAAAQAAAAAAAAAAYAAAASW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyQAAAAAAAAABAAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAQAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"cut",
					null,
					"AQAAAFgAAAAAAAAAWAAAAAAAAAAlAAAAU2hhZGVyLCBTaGFkZXJNb2R1bGUsIFNoYWRlclJlc291cmNlLA",
					"AQAAAAAAAAABAAAAWAAAAAAAAAB9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAEAAAAAAAAAAQAAAAAAAAAABAAAAIFIAAAAAAAAAUgAAAAAAAAAFAAAACiAgICBkAAAAAAAAAGgAAAAAAAAAAAAAAJAAAAAAAAAAkAAAAAAAAAAEAAAACiAgILsAAAAAAAAAvwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAPIAAAAAAAAAFwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gAAAAAAAADyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAPIAAAAAAAAA8gAAAAAAAAAlAAAAU2hhZGVyLCBTaGFkZXJNb2R1bGUsIFNoYWRlclJlc291cmNlLPIAAAAAAAAA9wAAAAAAAAAAAAAAMAEAAAAAAABYAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAAAAAAAAAAAAAMgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAyAAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6SW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyOwoNAAAAAAAAAA0AAAAAAAAAAAAAAFkBAAAAAAAAiwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABPEAAAdXNlIGNyYXRlOjp7CiAgICBjcmVhdGVfd2dwdV9waXBlbGluZSwgQ29tcHJlc3NlZFRlcnJhaW5WZXJ0ZXgsIE1hbmFnZWRNZXNoQnVmZmVyLCBTdGFuZGFyZEJpbmRpbmdzLAogICAgVGVycmFpbkluZGV4QnVmZmVyLCBUZXJyYWluSW5zdGFuY2VQb2QsIERFUFRIX1NURU5DSUxfRk9STUFULCBSRU5ERVJfQ09MT1JfRk9STUFULAogICAgU0hBREVSX0FTU0VUX1BBVEgsCn07CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OnsKICAgIEJpbmRHcm91cEJ1aWxkZXIsIEJpbmRHcm91cExheW91dCwgQmluZEdyb3VwTGF5b3V0QnVpbGRlciwgU2hhZGVyLCBTaGFkZXJNb2R1bGUsIFNoYWRlclJlc291cmNlLAp9Owp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXI7CnVzZSBzdGQ6OnBhdGg6OlBhdGhCdWY7Cgpjb25zdCBURVJSQUlOX0lOU1RBTkNFX0NPVU5UOiB1c2l6ZSA9IDFfMDAwOwoKcHViIHN0cnVjdCBUZXJyYWluUGlwZWxpbmUgewogICAgdmVydGV4X2JnbDogQmluZEdyb3VwTGF5b3V0LAogICAgcGlwZWxpbmU6IHdncHU6OlJlbmRlclBpcGVsaW5lLAp9CgppbXBsIFRlcnJhaW5QaXBlbGluZSB7CiAgICBwdWIgZm4gbmV3KAogICAgICAgIHdncHVfZGV2aWNlOiAmd2dwdTo6RGV2aWNlLAogICAgICAgIGJpbmRpbmdzOiAmU3RhbmRhcmRCaW5kaW5ncywKICAgICAgICBpbnN0X3JwYXNzX2J1ZjogJkluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjxUZXJyYWluSW5zdGFuY2VQb2Q+LAogICAgKSAtPiBTZWxmIHsKICAgICAgICBsZXQgc2hhZGVyX2Fzc2V0X3BhdGggPSBQYXRoQnVmOjpmcm9tKFNIQURFUl9BU1NFVF9QQVRIKTsKCiAgICAgICAgbGV0IHNoYWRlciA9IFNoYWRlciB7CiAgICAgICAgICAgIGxhYmVsOiAiVGVycmFpbiBTaGFkZXIiLmludG8oKSwKICAgICAgICAgICAgdmVydGV4X3NoYWRlcjogU2hhZGVyTW9kdWxlIHsKICAgICAgICAgICAgICAgIHBhdGg6IHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInRlcnJhaW4ud2dzbCIpLAogICAgICAgICAgICAgICAgZGVwczogdmVjIVsKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bmlmb3Jtcy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic3RhbmRhcmRfYmluZGluZ3Mud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVucGFjay53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic2hhZG93Lndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJza3kud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInBici53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidGVycmFpbl9sYXlvdXQud2dzbCIpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGVudHJ5X3BvaW50OiAidnNfbWFpbiIuaW50bygpLAogICAgICAgICAgICB9LAogICAgICAgICAgICBmcmFnbWVudF9zaGFkZXI6IFNoYWRlck1vZHVsZSB7CiAgICAgICAgICAgICAgICBwYXRoOiBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ0ZXJyYWluLndnc2wiKSwKICAgICAgICAgICAgICAgIGRlcHM6IHZlYyFbCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidW5pZm9ybXMud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInN0YW5kYXJkX2JpbmRpbmdzLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bnBhY2sud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInNoYWRvdy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic2t5Lndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJwYnIud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInRlcnJhaW5fbGF5b3V0Lndnc2wiKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBlbnRyeV9wb2ludDogImZzX21haW4iLmludG8oKSwKICAgICAgICAgICAgfSwKICAgICAgICB9OwoKICAgICAgICBsZXQgc2hhZGVyX3JlcyA9IFNoYWRlclJlc291cmNlOjpuZXcoJnNoYWRlciwgd2dwdV9kZXZpY2UpLnVud3JhcCgpOwoKICAgICAgICBsZXQgdmVydGV4X2JnbCA9IEJpbmRHcm91cExheW91dEJ1aWxkZXI6Om5ldygpCiAgICAgICAgICAgIC53aXRoX2xhYmVsKCJ0ZXJyYWluIHZlcnRleCBidWZmZXIgbGF5b3V0IikKICAgICAgICAgICAgLndpdGhfYmluZGluZyh3Z3B1OjpCaW5kaW5nVHlwZTo6QnVmZmVyIHsKICAgICAgICAgICAgICAgIHR5OiB3Z3B1OjpCdWZmZXJCaW5kaW5nVHlwZTo6U3RvcmFnZSB7IHJlYWRfb25seTogdHJ1ZSB9LAogICAgICAgICAgICAgICAgaGFzX2R5bmFtaWNfb2Zmc2V0OiBmYWxzZSwKICAgICAgICAgICAgICAgIG1pbl9iaW5kaW5nX3NpemU6IE5vbmUsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5maW5hbGl6ZSh3Z3B1X2RldmljZSk7CgogICAgICAgIGxldCBwaXBlbGluZSA9IGNyZWF0ZV93Z3B1X3BpcGVsaW5lKAogICAgICAgICAgICAidGVycmFpbiIsCiAgICAgICAgICAgICZzaGFkZXJfcmVzLAogICAgICAgICAgICB3Z3B1OjpQcmltaXRpdmVUb3BvbG9neTo6VHJpYW5nbGVMaXN0LAogICAgICAgICAgICB3Z3B1OjpQb2x5Z29uTW9kZTo6RmlsbCwKICAgICAgICAgICAgJlsKICAgICAgICAgICAgICAgIGJpbmRpbmdzLmNhbWVyYV9sYXlvdXQoKSwKICAgICAgICAgICAgICAgIGJpbmRpbmdzLnNreV9sYXlvdXQoKSwKICAgICAgICAgICAgICAgIGluc3RfcnBhc3NfYnVmLmJpbmRfZ3JvdXBfbGF5b3V0KCksCiAgICAgICAgICAgICAgICAmdmVydGV4X2JnbCwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgd2dwdV9kZXZpY2UsCiAgICAgICAgICAgIFJFTkRFUl9DT0xPUl9GT1JNQVQsCiAgICAgICAgICAgIERFUFRIX1NURU5DSUxfRk9STUFULAogICAgICAgICAgICB0cnVlLAogICAgICAgICk7CgogICAgICAgIFNlbGYgewogICAgICAgICAgICB2ZXJ0ZXhfYmdsLAogICAgICAgICAgICBwaXBlbGluZSwKICAgICAgICB9CiAgICB9CgogICAgcHViIGZuIGVuY29kZV9ycGFzcygKICAgICAgICAmc2VsZiwKICAgICAgICBycGFzczogJm11dCB3Z3B1OjpSZW5kZXJQYXNzLAogICAgICAgIHdncHVfZGV2aWNlOiAmd2dwdTo6RGV2aWNlLAogICAgICAgIGluZGV4X2J1ZjogJlRlcnJhaW5JbmRleEJ1ZmZlciwKICAgICAgICB2ZXJ0ZXhfYnVmOiAmTWFuYWdlZE1lc2hCdWZmZXI8Q29tcHJlc3NlZFRlcnJhaW5WZXJ0ZXg+LAogICAgICAgIGJpbmRpbmdzOiAmU3RhbmRhcmRCaW5kaW5ncywKICAgICAgICBpbnN0X3JwYXNzX2J1ZjogJkluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjxUZXJyYWluSW5zdGFuY2VQb2Q+LAogICAgKSB7CiAgICAgICAgbGV0IHZlcnRleF9iZyA9IEJpbmRHcm91cEJ1aWxkZXI6Om5ldyhzZWxmLnZlcnRleF9iZ2wuY2xvbmUoKSkKICAgICAgICAgICAgLndpdGhfbGFiZWwoInRlcnJhaW4gdmVydGV4IGJ1ZmZlciIpCiAgICAgICAgICAgIC53aXRoX2JpbmRpbmcodmVydGV4X2J1Zi5hc193Z3B1X2JpbmRpbmdfcmVzb3VyY2UoKSkKICAgICAgICAgICAgLmZpbmFsaXplKHdncHVfZGV2aWNlKTsKCiAgICAgICAgcnBhc3Muc2V0X3BpcGVsaW5lKCZzZWxmLnBpcGVsaW5lKTsKCiAgICAgICAgaW5kZXhfYnVmLnNldF9pbmRleF9idWZmZXIocnBhc3MpOwoKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgwLCBiaW5kaW5ncy5jYW1lcmFfYmcoKSwgJltdKTsKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgxLCBiaW5kaW5ncy5za3lfYmcoKSwgJltdKTsKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgyLCBpbnN0X3JwYXNzX2J1Zi5iaW5kX2dyb3VwKCkucmVzKCksICZbXSk7CiAgICAgICAgcnBhc3Muc2V0X2JpbmRfZ3JvdXAoMywgdmVydGV4X2JnLnJlcygpLCAmW10pOwoKICAgICAgICBpbnN0X3JwYXNzX2J1Zi5wdXNoX3RvX3JwYXNzKHJwYXNzKTsKICAgIH0KfQoAAAAAAAAAADsQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/terrain_shadow_pipeline.rs",
			"settings":
			{
				"buffer_size": 5514,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"right_delete",
					null,
					"AQAAABIAAAAAAAAAEgAAAAAAAAA6AAAAaW5kR3JvdXBCdWlsZGVyLCBCaW5kR3JvdXBMYXlvdXQsIEJpbmRHcm91cExheW91dEJ1aWxkZXIsIA",
					"AQAAAAAAAAABAAAAEgAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"right_delete",
					null,
					"AQAAAC8AAAAAAAAALwAAAAAAAAArAAAAREVQVEhfQklBU19TVEFURSwgSW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyLA",
					"AQAAAAAAAAABAAAALwAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"right_delete",
					null,
					"AQAAAFkAAAAAAAAAWQAAAAAAAABOAAAAIFNIQURPV19ERVBUSF9GT1JNQVQsIFNoYWRlciwgU2hhZGVyTW9kdWxlLCBTaGFkZXJSZXNvdXJjZSwgU2hhZG93Q2FzY2FkZVJPSXMs",
					"AQAAAAAAAAABAAAAWQAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAACoAAAAAAAAAKgAAAAAAAAAFAAAACiAgICA+AAAAAAAAAD4AAAAAAAAAGwAAAFNIQURFUl9BU1NFVF9QQVRILAogICAKICAgIGQAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupLayout;\n"
					},
					"AQAAAAAAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							44,
							44
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAACwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagAAAAAAAABqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAABeAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6QmluZEdyb3VwTGF5b3V0Owp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXI7Cg0AAAAAAAAADQAAAAAAAAAAAAAAfgAAAAAAAADcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_nodes::ShadowCascadeROIs;\n"
					},
					"AQAAAAAAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							43,
							43
						],
						"replacement": "use candy_render_elements::Shader;\n"
					},
					"AQAAACsAAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							78,
							78
						],
						"replacement": "use candy_render_elements::ShaderModule;\n"
					},
					"AQAAAE4AAAAAAAAAdwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAAB3AAAAdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U2hhZG93Q2FzY2FkZVJPSXM7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OlNoYWRlcjsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6U2hhZGVyTW9kdWxlOwqbAAAAAAAAAJwAAAAAAAAAAAAAAKsAAAAAAAAAwgAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAAD1AAAAAAAAAAkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::ShaderResource;\n"
					},
					"AQAAAAAAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							43,
							43
						],
						"replacement": "use candy_render_elements::BindGroupLayoutBuilder;\n"
					},
					"AQAAACsAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							94,
							94
						],
						"replacement": "use candy_render_nodes::SHADOW_DEPTH_FORMAT;\n"
					},
					"AQAAAF4AAAAAAAAAiwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							139,
							139
						],
						"replacement": "use candy_render_nodes::DEPTH_BIAS_STATE;\n"
					},
					"AQAAAIsAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							181,
							181
						],
						"replacement": "use crate::CompressedTerrainVertex;\n"
					},
					"AQAAALUAAAAAAAAA2QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"rust_fmt_format_buffer",
					null,
					"EAAAAAUAAAAAAAAABQAAAAAAAAAFAAAAYW5keV8GAAAAAAAAAAYAAAAAAAAAEgAAAGVuZGVyX2VsZW1lbnRzOjpTaAcAAAAAAAAABwAAAAAAAAAkAAAAZGVyUmVzb3VyY2U7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVuCAAAAAAAAAAIAAAAAAAAABcAAABzOjpCaW5kR3JvdXBMYXlvdXRCdWlsZAkAAAAAAAAACQAAAAAAAAAZAAAAcjsKdXNlIGNhbmR5X3JlbmRlcl9ub2RlcwsAAAAAAAAACwAAAAAAAABKAAAAU0hBRE9XX0RFUFRIX0ZPUk1BVDsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6REVQVEhfQklBU19TVEFURTsKdXNlIGNyYXRlOjoLAAAAAAAAABIAAAAAAAAAAAAAACkAAAAAAAAAKQAAAAAAAAAUAAAAOwp1c2UgY3JhdGU6OnsKICAgIEIpAAAAAAAAACsAAAAAAAAAAAAAAGoAAAAAAAAAbgAAAAAAAAAAAAAAggAAAAAAAACCAAAAAAAAAAQAAAAKICAgtQAAAAAAAAC6AAAAAAAAAAAAAADLAAAAAAAAAOMAAAAAAAAAAAAAAPcAAAAAAAAACQEAAAAAAAAAAAAAJQEAAAAAAAAqAQAAAAAAAAAAAABVAQAAAAAAAH4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"right_delete",
					null,
					"AgAAABEAAAAAAAAAEQAAAAAAAAAYAAAAQkNvbXByZXNzZWRUZXJyYWluVmVydGV4EQAAAAAAAAARAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAEQAAAAAAAAApAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAABEAAAAAAAAAEQAAAAAAAAABAAAAIFAAAAAAAAAAUAAAAAAAAAAEAAAACiAgIGQAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupBuilder;\n"
					},
					"AQAAAAAAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6QmluZEdyb3VwQnVpbGRlcjsKDQAAAAAAAAANAAAAAAAAAAAAAACfAAAAAAAAALEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgAAAAAAAAA+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACNFQAAdXNlIGNyYXRlOjp7CiAgICBDb21wcmVzc2VkVGVycmFpblZlcnRleCwgTWFuYWdlZE1lc2hCdWZmZXIsIFRlcnJhaW5JbmRleEJ1ZmZlciwgVGVycmFpbkluc3RhbmNlUG9kLAogICAgU0hBREVSX0FTU0VUX1BBVEgsCn07CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OnsKICAgIEJpbmRHcm91cEJ1aWxkZXIsIEJpbmRHcm91cExheW91dCwgQmluZEdyb3VwTGF5b3V0QnVpbGRlciwgU2hhZGVyLCBTaGFkZXJNb2R1bGUsIFNoYWRlclJlc291cmNlLAp9Owp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjp7CiAgICBJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXIsIFNoYWRvd0Nhc2NhZGVST0lzLCBERVBUSF9CSUFTX1NUQVRFLCBTSEFET1dfREVQVEhfRk9STUFULAp9Owp1c2Ugc3RkOjpwYXRoOjpQYXRoQnVmOwoKLy8vIFBpcGVsaW5lIGZvciByZW5kZXJpbmcgc3RhbmRhcmQgb3BhcXVlIG1lc2hlcyBmcm9tIHRoZSBVYmVyIGJ1ZmZlciBpbnRvIGEgZGVwdGggdGV4dHVyZSB0bwovLy8gZ2VuZXJhdGUgYSBzaGFkb3cgbWFwLgpwdWIgc3RydWN0IFRlcnJhaW5TaGFkb3dQaXBlbGluZSB7CiAgICB2ZXJ0ZXhfYmdsOiBCaW5kR3JvdXBMYXlvdXQsCiAgICBwaXBlbGluZTogd2dwdTo6UmVuZGVyUGlwZWxpbmUsCn0KCmltcGwgVGVycmFpblNoYWRvd1BpcGVsaW5lIHsKICAgIHB1YiBmbiBuZXcoCiAgICAgICAgZGV2aWNlOiAmd2dwdTo6RGV2aWNlLAogICAgICAgIGluc3RfcnBhc3NfYnVmOiAmSW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyPFRlcnJhaW5JbnN0YW5jZVBvZD4sCiAgICAgICAgc2hhZG93X3JvaXM6ICZTaGFkb3dDYXNjYWRlUk9JcywKICAgICkgLT4gU2VsZiB7CiAgICAgICAgbGV0IHNoYWRlcl9hc3NldF9wYXRoID0gUGF0aEJ1Zjo6ZnJvbShTSEFERVJfQVNTRVRfUEFUSCk7CgogICAgICAgIGxldCBzaGFkZXIgPSBTaGFkZXIgewogICAgICAgICAgICBsYWJlbDogIlRlcnJhaW4gU2hhZG93IFNoYWRlciIuaW50bygpLAogICAgICAgICAgICB2ZXJ0ZXhfc2hhZGVyOiBTaGFkZXJNb2R1bGUgewogICAgICAgICAgICAgICAgcGF0aDogc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidGVycmFpbl9zaGFkb3cud2dzbCIpLAogICAgICAgICAgICAgICAgZGVwczogdmVjIVsKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bmlmb3Jtcy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidW5wYWNrLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ0ZXJyYWluX2xheW91dC53Z3NsIiksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgZW50cnlfcG9pbnQ6ICJ2c19tYWluIi5pbnRvKCksCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZyYWdtZW50X3NoYWRlcjogU2hhZGVyTW9kdWxlIHsKICAgICAgICAgICAgICAgIHBhdGg6IHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInRlcnJhaW5fc2hhZG93Lndnc2wiKSwKICAgICAgICAgICAgICAgIGRlcHM6IHZlYyFbCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidW5pZm9ybXMud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVucGFjay53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidGVycmFpbl9sYXlvdXQud2dzbCIpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGVudHJ5X3BvaW50OiAiZnNfbWFpbiIuaW50bygpLAogICAgICAgICAgICB9LAogICAgICAgIH07CgogICAgICAgIGxldCBzaGFkZXJfcmVzID0gU2hhZGVyUmVzb3VyY2U6Om5ldygmc2hhZGVyLCBkZXZpY2UpLnVud3JhcCgpOwoKICAgICAgICBsZXQgdmVydGV4X2JnbCA9IEJpbmRHcm91cExheW91dEJ1aWxkZXI6Om5ldygpCiAgICAgICAgICAgIC53aXRoX2xhYmVsKCJ1YmVyIHZlcnRleCBidWZmZXIgbGF5b3V0IikKICAgICAgICAgICAgLndpdGhfYmluZGluZyh3Z3B1OjpCaW5kaW5nVHlwZTo6QnVmZmVyIHsKICAgICAgICAgICAgICAgIHR5OiB3Z3B1OjpCdWZmZXJCaW5kaW5nVHlwZTo6U3RvcmFnZSB7IHJlYWRfb25seTogdHJ1ZSB9LAogICAgICAgICAgICAgICAgaGFzX2R5bmFtaWNfb2Zmc2V0OiBmYWxzZSwKICAgICAgICAgICAgICAgIG1pbl9iaW5kaW5nX3NpemU6IE5vbmUsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5maW5hbGl6ZShkZXZpY2UpOwoKICAgICAgICBsZXQgcGlwZWxpbmVfbGF5b3V0ID0gZGV2aWNlLmNyZWF0ZV9waXBlbGluZV9sYXlvdXQoJndncHU6OlBpcGVsaW5lTGF5b3V0RGVzY3JpcHRvciB7CiAgICAgICAgICAgIGxhYmVsOiBTb21lKCJUZXJyYWluU2hhZG93UGlwZWxpbmUgUGlwZWxpbmVMYXlvdXQiKSwKICAgICAgICAgICAgYmluZF9ncm91cF9sYXlvdXRzOiAmWwogICAgICAgICAgICAgICAgc2hhZG93X3JvaXMuYmluZF9ncm91cF9sYXlvdXQoKS5yZXMoKSwKICAgICAgICAgICAgICAgIGluc3RfcnBhc3NfYnVmLmJpbmRfZ3JvdXBfbGF5b3V0KCkucmVzKCksCiAgICAgICAgICAgICAgICB2ZXJ0ZXhfYmdsLnJlcygpLAogICAgICAgICAgICBdLAogICAgICAgICAgICBwdXNoX2NvbnN0YW50X3JhbmdlczogJltdLAogICAgICAgIH0pOwoKICAgICAgICBsZXQgcGlwZWxpbmUgPSBkZXZpY2UuY3JlYXRlX3JlbmRlcl9waXBlbGluZSgmd2dwdTo6UmVuZGVyUGlwZWxpbmVEZXNjcmlwdG9yIHsKICAgICAgICAgICAgbGFiZWw6IFNvbWUoIlRlcnJhaW5TaGFkb3dQaXBlbGluZSIpLAogICAgICAgICAgICBsYXlvdXQ6IFNvbWUoJnBpcGVsaW5lX2xheW91dCksCiAgICAgICAgICAgIHZlcnRleDogd2dwdTo6VmVydGV4U3RhdGUgewogICAgICAgICAgICAgICAgbW9kdWxlOiAmc2hhZGVyX3Jlcy52ZXJ0ZXhfbW9kdWxlLAogICAgICAgICAgICAgICAgZW50cnlfcG9pbnQ6IFNvbWUoJnNoYWRlcl9yZXMudmVydGV4X2VudHJ5X3BvaW50KSwKICAgICAgICAgICAgICAgIGNvbXBpbGF0aW9uX29wdGlvbnM6IHdncHU6OlBpcGVsaW5lQ29tcGlsYXRpb25PcHRpb25zIHsKICAgICAgICAgICAgICAgICAgICBjb25zdGFudHM6ICZbXSwKICAgICAgICAgICAgICAgICAgICB6ZXJvX2luaXRpYWxpemVfd29ya2dyb3VwX21lbW9yeTogdHJ1ZSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBidWZmZXJzOiAmW10sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZyYWdtZW50OiBTb21lKHdncHU6OkZyYWdtZW50U3RhdGUgewogICAgICAgICAgICAgICAgbW9kdWxlOiAmc2hhZGVyX3Jlcy5mcmFnbWVudF9tb2R1bGUsCiAgICAgICAgICAgICAgICBlbnRyeV9wb2ludDogU29tZSgmc2hhZGVyX3Jlcy5mcmFnbWVudF9lbnRyeV9wb2ludCksCiAgICAgICAgICAgICAgICBjb21waWxhdGlvbl9vcHRpb25zOiB3Z3B1OjpQaXBlbGluZUNvbXBpbGF0aW9uT3B0aW9ucyB7CiAgICAgICAgICAgICAgICAgICAgY29uc3RhbnRzOiAmW10sCiAgICAgICAgICAgICAgICAgICAgemVyb19pbml0aWFsaXplX3dvcmtncm91cF9tZW1vcnk6IHRydWUsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdGFyZ2V0czogJltdLCAvLyBubyBjb2xvciB0YXJnZXQKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIHByaW1pdGl2ZTogd2dwdTo6UHJpbWl0aXZlU3RhdGUgewogICAgICAgICAgICAgICAgdG9wb2xvZ3k6IHdncHU6OlByaW1pdGl2ZVRvcG9sb2d5OjpUcmlhbmdsZUxpc3QsCiAgICAgICAgICAgICAgICBzdHJpcF9pbmRleF9mb3JtYXQ6IE5vbmUsCiAgICAgICAgICAgICAgICBmcm9udF9mYWNlOiB3Z3B1OjpGcm9udEZhY2U6OkNjdywKICAgICAgICAgICAgICAgIGN1bGxfbW9kZTogTm9uZSwKICAgICAgICAgICAgICAgIHVuY2xpcHBlZF9kZXB0aDogZmFsc2UsCiAgICAgICAgICAgICAgICBwb2x5Z29uX21vZGU6IHdncHU6OlBvbHlnb25Nb2RlOjpGaWxsLAogICAgICAgICAgICAgICAgY29uc2VydmF0aXZlOiBmYWxzZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVwdGhfc3RlbmNpbDogU29tZSh3Z3B1OjpEZXB0aFN0ZW5jaWxTdGF0ZSB7CiAgICAgICAgICAgICAgICBmb3JtYXQ6IFNIQURPV19ERVBUSF9GT1JNQVQsCiAgICAgICAgICAgICAgICBkZXB0aF93cml0ZV9lbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgICAgZGVwdGhfY29tcGFyZTogd2dwdTo6Q29tcGFyZUZ1bmN0aW9uOjpMZXNzLAogICAgICAgICAgICAgICAgc3RlbmNpbDogd2dwdTo6U3RlbmNpbFN0YXRlOjpkZWZhdWx0KCksCiAgICAgICAgICAgICAgICBiaWFzOiBERVBUSF9CSUFTX1NUQVRFLAogICAgICAgICAgICB9KSwKICAgICAgICAgICAgbXVsdGlzYW1wbGU6IHdncHU6Ok11bHRpc2FtcGxlU3RhdGU6OmRlZmF1bHQoKSwKICAgICAgICAgICAgbXVsdGl2aWV3OiBOb25lLAogICAgICAgICAgICBjYWNoZTogTm9uZSwKICAgICAgICB9KTsKCiAgICAgICAgU2VsZiB7CiAgICAgICAgICAgIHZlcnRleF9iZ2wsCiAgICAgICAgICAgIHBpcGVsaW5lLAogICAgICAgIH0KICAgIH0KCiAgICBwdWIgZm4gZW5jb2RlX3JwYXNzKAogICAgICAgICZzZWxmLAogICAgICAgIHJwYXNzOiAmbXV0IHdncHU6OlJlbmRlclBhc3MsCiAgICAgICAgZGV2aWNlOiAmd2dwdTo6RGV2aWNlLAogICAgICAgIGluZGV4X2J1ZjogJlRlcnJhaW5JbmRleEJ1ZmZlciwKICAgICAgICB2ZXJ0ZXhfYnVmOiAmTWFuYWdlZE1lc2hCdWZmZXI8Q29tcHJlc3NlZFRlcnJhaW5WZXJ0ZXg+LAogICAgICAgIGluc3RfcnBhc3NfYnVmOiAmSW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyPFRlcnJhaW5JbnN0YW5jZVBvZD4sCiAgICAgICAgc2hhZG93X3JvaXM6ICZTaGFkb3dDYXNjYWRlUk9JcywKICAgICAgICBjYXNjYWRlX2luZGV4OiB1c2l6ZSwKICAgICkgewogICAgICAgIC8vIENvbGxlY3QgaW5zdGFuY2VzIHBlciBtZXNoCgogICAgICAgIGxldCB2ZXJ0ZXhfYmcgPSBCaW5kR3JvdXBCdWlsZGVyOjpuZXcoc2VsZi52ZXJ0ZXhfYmdsLmNsb25lKCkpCiAgICAgICAgICAgIC53aXRoX2xhYmVsKCJ0ZXJyYWluIHNoYWRvdyB2ZXJ0ZXggYnVmZmVyIikKICAgICAgICAgICAgLndpdGhfYmluZGluZyh2ZXJ0ZXhfYnVmLmFzX3dncHVfYmluZGluZ19yZXNvdXJjZSgpKQogICAgICAgICAgICAuZmluYWxpemUoZGV2aWNlKTsKCiAgICAgICAgcnBhc3Muc2V0X3BpcGVsaW5lKCZzZWxmLnBpcGVsaW5lKTsKCiAgICAgICAgaW5kZXhfYnVmLnNldF9pbmRleF9idWZmZXIocnBhc3MpOwoKICAgICAgICBzaGFkb3dfcm9pcy5zZXRfYmluZF9ncm91cChycGFzcywgMCwgY2FzY2FkZV9pbmRleCk7CiAgICAgICAgcnBhc3Muc2V0X2JpbmRfZ3JvdXAoMSwgaW5zdF9ycGFzc19idWYuYmluZF9ncm91cCgpLnJlcygpLCAmW10pOwogICAgICAgIHJwYXNzLnNldF9iaW5kX2dyb3VwKDIsIHZlcnRleF9iZy5yZXMoKSwgJltdKTsKCiAgICAgICAgaW5zdF9ycGFzc19idWYucHVzaF90b19ycGFzcyhycGFzcyk7CiAgICB9Cn0KAAAAAAAAAACKFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/tonemap_pipeline.rs",
			"settings":
			{
				"buffer_size": 3688,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					5,
					"delete_word",
					{
						"forward": true
					},
					"BQAAADUAAAAAAAAANQAAAAAAAAAGAAAAU2hhZGVyNQAAAAAAAAA1AAAAAAAAAAEAAAAsNQAAAAAAAAA1AAAAAAAAAA0AAAAgU2hhZGVyTW9kdWxlNQAAAAAAAAA1AAAAAAAAAAEAAAAsNQAAAAAAAAA1AAAAAAAAAA8AAAAgU2hhZGVyUmVzb3VyY2U",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"rust_fmt_format_buffer",
					null,
					"AQAAADMAAAAAAAAAMwAAAAAAAAACAAAALCA",
					"AQAAAAAAAAABAAAANQAAAAAAAAA1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::Shader;\n"
					},
					"AQAAAAAAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwAAAAAAAAAzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							35,
							35
						],
						"replacement": "use candy_render_elements::ShaderModule;\n"
					},
					"AQAAACMAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							76,
							76
						],
						"replacement": "use candy_render_elements::ShaderResource;\n"
					},
					"AQAAAEwAAAAAAAAAdwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"rust_fmt_format_buffer",
					null,
					"BgAAAAUAAAAAAAAABQAAAAAAAAAcAAAAYW5keV9yZW5kZXJfZWxlbWVudHM6OlNoYWRlcgUAAAAAAAAANAAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAABYAAAAAAAAAFgAAAAAAAAAIwAAAE1vZHVsZTsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6WAAAAAAAAABoAAAAAAAAAAAAAAB2AAAAAAAAAHYAAAAAAAAANQAAADsKdXNlIGNyYXRlOjp7UFJFU0VOVF9DT0xPUl9GT1JNQVQsIFNIQURFUl9BU1NFVF9QQVRI",
					"AQAAAAAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/uber_pipeline.rs",
			"settings":
			{
				"buffer_size": 4113,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					2,
					"left_delete",
					null,
					"AgAAABIAAAAAAAAAEgAAAAAAAAA6AAAAaW5kR3JvdXBCdWlsZGVyLCBCaW5kR3JvdXBMYXlvdXQsIEJpbmRHcm91cExheW91dEJ1aWxkZXIsIBEAAAAAAAAAEQAAAAAAAAABAAAAQg",
					"AQAAAAAAAAABAAAAEgAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"right_delete",
					null,
					"AgAAAEEAAAAAAAAAQQAAAAAAAAAYAAAASW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyQQAAAAAAAABBAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAQQAAAAAAAABZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"right_delete",
					null,
					"AQAAAIEAAAAAAAAAgQAAAAAAAAAmAAAAU2hhZGVyLCBTaGFkZXJNb2R1bGUsIFNoYWRlclJlc291cmNlLCA",
					"AQAAAAAAAAABAAAAgQAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAABEAAAAAAAAAJwAAAAAAAAAAAAAAPAAAAAAAAAA8AAAAAAAAABsAAAAKICAgIERFUFRIX1NURU5DSUxfRk9STUFULCBQAAAAAAAAAFAAAAAAAAAALAAAAFJFTkRFUl9DT0xPUl9GT1JNQVQsCiAgICBTSEFERVJfQVNTRVRfUEFUSCwgggAAAAAAAACCAAAAAAAAABQAAABjcmVhdGVfd2dwdV9waXBlbGluZYIAAAAAAAAAvgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupLayout;\n"
					},
					"AQAAAAAAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							44,
							44
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAACwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							94,
							94
						],
						"replacement": "use candy_render_elements::Shader;\n"
					},
					"AQAAAF4AAAAAAAAAgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							129,
							129
						],
						"replacement": "use candy_render_elements::ShaderModule;\n"
					},
					"AQAAAIEAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACqAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6QmluZEdyb3VwTGF5b3V0Owp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXI7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OlNoYWRlcjsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6U2hhZGVyTW9kdWxlOwoNAAAAAAAAAA0AAAAAAAAAAAAAAMEAAAAAAAAANwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::ShaderResource;\n"
					},
					"AQAAAAAAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							43,
							43
						],
						"replacement": "use candy_render_elements::BindGroupLayoutBuilder;\n"
					},
					"AQAAACsAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewAAAAAAAAB7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							94,
							94
						],
						"replacement": "use candy_render_elements::BindGroupBuilder;\n"
					},
					"AQAAAF4AAAAAAAAAiwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAACLAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6U2hhZGVyUmVzb3VyY2U7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OkJpbmRHcm91cExheW91dEJ1aWxkZXI7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OkJpbmRHcm91cEJ1aWxkZXI7Cg0AAAAAAAAADQAAAAAAAAAAAAAA3wAAAAAAAAD2AAAAAAAAAAAAAAAHAQAAAAAAAB8BAAAAAAAAAAAAADMBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAlEAAAdXNlIGNyYXRlOjp7CiAgICBjcmVhdGVfd2dwdV9waXBlbGluZSwgQ29tcHJlc3NlZFViZXJWZXJ0ZXgsIE1hbmFnZWRNZXNoQnVmZmVyLCBTdGFuZGFyZEJpbmRpbmdzLCBVYmVySW5kZXgsCiAgICBVYmVySW5zdGFuY2VQb2QsIERFUFRIX1NURU5DSUxfRk9STUFULCBSRU5ERVJfQ09MT1JfRk9STUFULCBTSEFERVJfQVNTRVRfUEFUSCwKfTsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6ewogICAgQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCBTaGFkZXIsIFNoYWRlck1vZHVsZSwgU2hhZGVyUmVzb3VyY2UsCn07CnVzZSBjYW5keV9yZW5kZXJfbm9kZXM6Okluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjsKdXNlIHN0ZDo6cGF0aDo6UGF0aEJ1ZjsKCi8vLyBQaXBlbGluZSBmb3IgcmVuZGVyaW5nIHN0YW5kYXJkIG9wYXF1ZSBtZXNoZXMgZnJvbSB0aGUgVWJlciBidWZmZXIgdXNpbmcgUEJSIG1hdGVyaWFscy4KcHViIHN0cnVjdCBVYmVyUGlwZWxpbmUgewogICAgdmVydGV4X2JnbDogQmluZEdyb3VwTGF5b3V0LAogICAgcGlwZWxpbmU6IHdncHU6OlJlbmRlclBpcGVsaW5lLAp9CgppbXBsIFViZXJQaXBlbGluZSB7CiAgICBwdWIgZm4gbmV3KAogICAgICAgIHdncHVfZGV2aWNlOiAmd2dwdTo6RGV2aWNlLAogICAgICAgIGJpbmRpbmdzOiAmU3RhbmRhcmRCaW5kaW5ncywKICAgICAgICBpbnN0X3JwYXNzX2J1ZjogJkluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjxVYmVySW5zdGFuY2VQb2Q+LAogICAgKSAtPiBTZWxmIHsKICAgICAgICBsZXQgc2hhZGVyX2Fzc2V0X3BhdGggPSBQYXRoQnVmOjpmcm9tKFNIQURFUl9BU1NFVF9QQVRIKTsKCiAgICAgICAgbGV0IHNoYWRlciA9IFNoYWRlciB7CiAgICAgICAgICAgIGxhYmVsOiAiVWJlciBTaGFkZXIiLmludG8oKSwKICAgICAgICAgICAgdmVydGV4X3NoYWRlcjogU2hhZGVyTW9kdWxlIHsKICAgICAgICAgICAgICAgIHBhdGg6IHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInViZXIud2dzbCIpLAogICAgICAgICAgICAgICAgZGVwczogdmVjIVsKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bmlmb3Jtcy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic3RhbmRhcmRfYmluZGluZ3Mud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVucGFjay53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic2hhZG93Lndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJza3kud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInBici53Z3NsIiksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgZW50cnlfcG9pbnQ6ICJ2c19tYWluIi5pbnRvKCksCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZyYWdtZW50X3NoYWRlcjogU2hhZGVyTW9kdWxlIHsKICAgICAgICAgICAgICAgIHBhdGg6IHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInViZXIud2dzbCIpLAogICAgICAgICAgICAgICAgZGVwczogdmVjIVsKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bmlmb3Jtcy53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic3RhbmRhcmRfYmluZGluZ3Mud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVucGFjay53Z3NsIiksCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigic2hhZG93Lndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJza3kud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInBici53Z3NsIiksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgZW50cnlfcG9pbnQ6ICJmc19tYWluIi5pbnRvKCksCiAgICAgICAgICAgIH0sCiAgICAgICAgfTsKCiAgICAgICAgbGV0IHNoYWRlcl9yZXMgPSBTaGFkZXJSZXNvdXJjZTo6bmV3KCZzaGFkZXIsIHdncHVfZGV2aWNlKS51bndyYXAoKTsKCiAgICAgICAgbGV0IHZlcnRleF9iZ2wgPSBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyOjpuZXcoKQogICAgICAgICAgICAud2l0aF9sYWJlbCgidWJlciB2ZXJ0ZXggYnVmZmVyIGxheW91dCIpCiAgICAgICAgICAgIC53aXRoX2JpbmRpbmcod2dwdTo6QmluZGluZ1R5cGU6OkJ1ZmZlciB7CiAgICAgICAgICAgICAgICB0eTogd2dwdTo6QnVmZmVyQmluZGluZ1R5cGU6OlN0b3JhZ2UgeyByZWFkX29ubHk6IHRydWUgfSwKICAgICAgICAgICAgICAgIGhhc19keW5hbWljX29mZnNldDogZmFsc2UsCiAgICAgICAgICAgICAgICBtaW5fYmluZGluZ19zaXplOiBOb25lLAogICAgICAgICAgICB9KQogICAgICAgICAgICAuZmluYWxpemUod2dwdV9kZXZpY2UpOwoKICAgICAgICBsZXQgcGlwZWxpbmUgPSBjcmVhdGVfd2dwdV9waXBlbGluZSgKICAgICAgICAgICAgInViZXIiLAogICAgICAgICAgICAmc2hhZGVyX3JlcywKICAgICAgICAgICAgd2dwdTo6UHJpbWl0aXZlVG9wb2xvZ3k6OlRyaWFuZ2xlTGlzdCwKICAgICAgICAgICAgd2dwdTo6UG9seWdvbk1vZGU6OkZpbGwsCiAgICAgICAgICAgICZbCiAgICAgICAgICAgICAgICBiaW5kaW5ncy5jYW1lcmFfbGF5b3V0KCksCiAgICAgICAgICAgICAgICBiaW5kaW5ncy5za3lfbGF5b3V0KCksCiAgICAgICAgICAgICAgICBpbnN0X3JwYXNzX2J1Zi5iaW5kX2dyb3VwX2xheW91dCgpLAogICAgICAgICAgICAgICAgJnZlcnRleF9iZ2wsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHdncHVfZGV2aWNlLAogICAgICAgICAgICBSRU5ERVJfQ09MT1JfRk9STUFULAogICAgICAgICAgICBERVBUSF9TVEVOQ0lMX0ZPUk1BVCwKICAgICAgICAgICAgdHJ1ZSwKICAgICAgICApOwoKICAgICAgICBTZWxmIHsKICAgICAgICAgICAgdmVydGV4X2JnbCwKICAgICAgICAgICAgcGlwZWxpbmUsCiAgICAgICAgfQogICAgfQoKICAgIHB1YiBmbiBlbmNvZGVfcnBhc3MoCiAgICAgICAgJnNlbGYsCiAgICAgICAgcnBhc3M6ICZtdXQgd2dwdTo6UmVuZGVyUGFzcywKICAgICAgICB3Z3B1X2RldmljZTogJndncHU6OkRldmljZSwKICAgICAgICBpbmRleF9idWY6ICZNYW5hZ2VkTWVzaEJ1ZmZlcjxVYmVySW5kZXg+LAogICAgICAgIHZlcnRleF9idWY6ICZNYW5hZ2VkTWVzaEJ1ZmZlcjxDb21wcmVzc2VkVWJlclZlcnRleD4sCiAgICAgICAgYmluZGluZ3M6ICZTdGFuZGFyZEJpbmRpbmdzLAogICAgICAgIGluc3RfcnBhc3NfYnVmOiAmSW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyPFViZXJJbnN0YW5jZVBvZD4sCiAgICApIHsKICAgICAgICAvLyBDb2xsZWN0IGluc3RhbmNlcyBwZXIgbWVzaAoKICAgICAgICBsZXQgdmVydGV4X2JnID0gQmluZEdyb3VwQnVpbGRlcjo6bmV3KHNlbGYudmVydGV4X2JnbC5jbG9uZSgpKQogICAgICAgICAgICAud2l0aF9sYWJlbCgidWJlciB2ZXJ0ZXggYnVmZmVyIikKICAgICAgICAgICAgLndpdGhfYmluZGluZyh2ZXJ0ZXhfYnVmLmFzX3dncHVfYmluZGluZ19yZXNvdXJjZSgpKQogICAgICAgICAgICAuZmluYWxpemUod2dwdV9kZXZpY2UpOwoKICAgICAgICBycGFzcy5zZXRfcGlwZWxpbmUoJnNlbGYucGlwZWxpbmUpOwoKICAgICAgICBycGFzcy5zZXRfaW5kZXhfYnVmZmVyKGluZGV4X2J1Zi5kZXZpY2VfYnVmZmVyX3NsaWNlKCksIHdncHU6OkluZGV4Rm9ybWF0OjpVaW50MzIpOwoKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgwLCBiaW5kaW5ncy5jYW1lcmFfYmcoKSwgJltdKTsKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgxLCBiaW5kaW5ncy5za3lfYmcoKSwgJltdKTsKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgyLCBpbnN0X3JwYXNzX2J1Zi5iaW5kX2dyb3VwKCkucmVzKCksICZbXSk7CiAgICAgICAgcnBhc3Muc2V0X2JpbmRfZ3JvdXAoMywgdmVydGV4X2JnLnJlcygpLCAmW10pOwoKICAgICAgICBpbnN0X3JwYXNzX2J1Zi5wdXNoX3RvX3JwYXNzKHJwYXNzKTsKICAgIH0KfQoAAAAAAAAAABEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/uber_shadow_pipeline.rs",
			"settings":
			{
				"buffer_size": 5387,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"right_delete",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAA7AAAAQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCA",
					"AQAAAAAAAAABAAAAEQAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					2,
					"right_delete",
					null,
					"AgAAACsAAAAAAAAAKwAAAAAAAAAQAAAAREVQVEhfQklBU19TVEFURSsAAAAAAAAAKwAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAKwAAAAAAAAA7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					2,
					"right_delete",
					null,
					"AgAAACwAAAAAAAAALAAAAAAAAAAYAAAASW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyLAAAAAAAAAAsAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAALAAAAAAAAABEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"right_delete",
					null,
					"AQAAAFcAAAAAAAAAVwAAAAAAAABNAAAAU0hBRE9XX0RFUFRIX0ZPUk1BVCwgU2hhZGVyLCBTaGFkZXJNb2R1bGUsIFNoYWRlclJlc291cmNlLCBTaGFkb3dDYXNjYWRlUk9Jcyw",
					"AQAAAAAAAAABAAAAVwAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"rust_fmt_format_buffer",
					null,
					"BAAAACYAAAAAAAAAJgAAAAAAAAAGAAAACiAgICAgOgAAAAAAAAA6AAAAAAAAABgAAABTSEFERVJfQVNTRVRfUEFUSCwKICAgICBEAAAAAAAAAEQAAAAAAAAABAAAAAogICBUAAAAAAAAAGcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupLayout;\n"
					},
					"AQAAAAAAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgAAAAAAAAA6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							44,
							44
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAACwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZgAAAAAAAABmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							94,
							94
						],
						"replacement": "use candy_render_nodes::ShadowCascadeROIs;\n"
					},
					"AQAAAF4AAAAAAAAAiQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							137,
							137
						],
						"replacement": "use candy_render_elements::Shader;\n"
					},
					"AQAAAIkAAAAAAAAArAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwAAAAAAAADDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							172,
							172
						],
						"replacement": "use candy_render_elements::ShaderModule;\n"
					},
					"AQAAAKwAAAAAAAAA1QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							213,
							213
						],
						"replacement": "use candy_render_elements::ShaderResource;\n"
					},
					"AQAAANUAAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							256,
							256
						],
						"replacement": "use candy_render_elements::BindGroupLayoutBuilder;\n"
					},
					"AQAAAAABAAAAAAAAMwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							307,
							307
						],
						"replacement": "use candy_render_nodes::SHADOW_DEPTH_FORMAT;\n"
					},
					"AQAAADMBAAAAAAAAYAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQEAAAAAAABtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							352,
							352
						],
						"replacement": "use candy_render_nodes::DEPTH_BIAS_STATE;\n"
					},
					"AQAAAGABAAAAAAAAigEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmgEAAAAAAACaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							394,
							394
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAAIoBAAAAAAAAvAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAEAAAAAAADEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							444,
							444
						],
						"replacement": "use candy_render_nodes::ShadowCascadeROIs;\n"
					},
					"AQAAALwBAAAAAAAA5wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9gEAAAAAAAD2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"rust_fmt_format_buffer",
					null,
					"EQAAAAUAAAAAAAAABQAAAAAAAABRAAAAYW5keV9yZW5kZXJfZWxlbWVudHM6OkJpbmRHcm91cExheW91dDsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6SW5zdGFuY2VSZW5kZXJwYXNzBQAAAAAAAAAyAAAAAAAAAAAAAAA4AAAAAAAAADgAAAAAAAAATgAAADsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6U2hhZG93Q2FzY2FkZVJPSXM7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OlNoYWRlcjgAAAAAAAAAagAAAAAAAAAAAAAAhwAAAAAAAACHAAAAAAAAAFQAAABTaGFkZXJNb2R1bGU7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OlNoYWRlclJlc291cmNlOwp1c2UgY2FuZHlfcmVuZGVyX2VsZW1lbnRzOjqHAAAAAAAAAJ4AAAAAAAAAAAAAALQAAAAAAAAAtAAAAAAAAABXAAAAOwp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpTSEFET1dfREVQVEhfRk9STUFUOwp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpERVBUSF9CSUFTX1NUQVRFtAAAAAAAAADdAAAAAAAAAAAAAAD3AAAAAAAAAP0AAAAAAAAAAAAAABUBAAAAAAAAFQEAAAAAAAAaAAAAOwp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjoVAQAAAAAAABcBAAAAAAAAAAAAACgBAAAAAAAAKAEAAAAAAAAnAAAAOwp1c2UgY3JhdGU6OnsKICAgIENvbXByZXNzZWRVYmVyVmVydGV4KgEAAAAAAAAqAQAAAAAAAC0AAABNYW5hZ2VkTWVzaEJ1ZmZlciwgVWJlckluZGV4LCBVYmVySW5zdGFuY2VQb2QqAQAAAAAAADoBAAAAAAAAAAAAAEABAAAAAAAAQAEAAAAAAAAKAAAARVJfQVNTRVRfUEABAAAAAAAATQEAAAAAAAAAAAAATwEAAAAAAABPAQAAAAAAAAEAAABI",
					"AQAAAAAAAAABAAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupBuilder;\n"
					},
					"AQAAAAAAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOgEAAAAAAAA6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"rust_fmt_format_buffer",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6QmluZEdyb3VwQnVpbGRlcjsKDQAAAAAAAAANAAAAAAAAAAAAAACMAAAAAAAAAJ4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwEAAAAAAABnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAOFQAAdXNlIGNyYXRlOjp7CiAgICBDb21wcmVzc2VkVWJlclZlcnRleCwgTWFuYWdlZE1lc2hCdWZmZXIsIFViZXJJbmRleCwgVWJlckluc3RhbmNlUG9kLCBTSEFERVJfQVNTRVRfUEFUSCwKfTsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6ewogICAgQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCBTaGFkZXIsIFNoYWRlck1vZHVsZSwgU2hhZGVyUmVzb3VyY2UsCn07CnVzZSBjYW5keV9yZW5kZXJfbm9kZXM6OnsKICAgIEluc3RhbmNlUmVuZGVycGFzc0J1ZmZlciwgU2hhZG93Q2FzY2FkZVJPSXMsIERFUFRIX0JJQVNfU1RBVEUsIFNIQURPV19ERVBUSF9GT1JNQVQsCn07CnVzZSBzdGQ6OnBhdGg6OlBhdGhCdWY7CgovLy8gUGlwZWxpbmUgZm9yIHJlbmRlcmluZyBzdGFuZGFyZCBvcGFxdWUgbWVzaGVzIGZyb20gdGhlIFViZXIgYnVmZmVyIGludG8gYSBkZXB0aCB0ZXh0dXJlIHRvCi8vLyBnZW5lcmF0ZSBhIHNoYWRvdyBtYXAuCnB1YiBzdHJ1Y3QgVWJlclNoYWRvd1BpcGVsaW5lIHsKICAgIHZlcnRleF9iZ2w6IEJpbmRHcm91cExheW91dCwKICAgIHBpcGVsaW5lOiB3Z3B1OjpSZW5kZXJQaXBlbGluZSwKfQoKaW1wbCBVYmVyU2hhZG93UGlwZWxpbmUgewogICAgcHViIGZuIG5ldygKICAgICAgICBkZXZpY2U6ICZ3Z3B1OjpEZXZpY2UsCiAgICAgICAgaW5zdF9ycGFzc19idWY6ICZJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXI8VWJlckluc3RhbmNlUG9kPiwKICAgICAgICBzaGFkb3dfcm9pczogJlNoYWRvd0Nhc2NhZGVST0lzLAogICAgKSAtPiBTZWxmIHsKICAgICAgICBsZXQgc2hhZGVyX2Fzc2V0X3BhdGggPSBQYXRoQnVmOjpmcm9tKFNIQURFUl9BU1NFVF9QQVRIKTsKCiAgICAgICAgbGV0IHNoYWRlciA9IFNoYWRlciB7CiAgICAgICAgICAgIGxhYmVsOiAiVWJlciBTaGFkb3cgU2hhZGVyIi5pbnRvKCksCiAgICAgICAgICAgIHZlcnRleF9zaGFkZXI6IFNoYWRlck1vZHVsZSB7CiAgICAgICAgICAgICAgICBwYXRoOiBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1YmVyX3NoYWRvdy53Z3NsIiksCiAgICAgICAgICAgICAgICBkZXBzOiB2ZWMhWwogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVuaWZvcm1zLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bnBhY2sud2dzbCIpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGVudHJ5X3BvaW50OiAidnNfbWFpbiIuaW50bygpLAogICAgICAgICAgICB9LAogICAgICAgICAgICBmcmFnbWVudF9zaGFkZXI6IFNoYWRlck1vZHVsZSB7CiAgICAgICAgICAgICAgICBwYXRoOiBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1YmVyX3NoYWRvdy53Z3NsIiksCiAgICAgICAgICAgICAgICBkZXBzOiB2ZWMhWwogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInVuaWZvcm1zLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bnBhY2sud2dzbCIpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGVudHJ5X3BvaW50OiAiZnNfbWFpbiIuaW50bygpLAogICAgICAgICAgICB9LAogICAgICAgIH07CgogICAgICAgIGxldCBzaGFkZXJfcmVzID0gU2hhZGVyUmVzb3VyY2U6Om5ldygmc2hhZGVyLCBkZXZpY2UpLnVud3JhcCgpOwoKICAgICAgICBsZXQgdmVydGV4X2JnbCA9IEJpbmRHcm91cExheW91dEJ1aWxkZXI6Om5ldygpCiAgICAgICAgICAgIC53aXRoX2xhYmVsKCJ1YmVyIHZlcnRleCBidWZmZXIgbGF5b3V0IikKICAgICAgICAgICAgLndpdGhfYmluZGluZyh3Z3B1OjpCaW5kaW5nVHlwZTo6QnVmZmVyIHsKICAgICAgICAgICAgICAgIHR5OiB3Z3B1OjpCdWZmZXJCaW5kaW5nVHlwZTo6U3RvcmFnZSB7IHJlYWRfb25seTogdHJ1ZSB9LAogICAgICAgICAgICAgICAgaGFzX2R5bmFtaWNfb2Zmc2V0OiBmYWxzZSwKICAgICAgICAgICAgICAgIG1pbl9iaW5kaW5nX3NpemU6IE5vbmUsCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5maW5hbGl6ZShkZXZpY2UpOwoKICAgICAgICBsZXQgcGlwZWxpbmVfbGF5b3V0ID0gZGV2aWNlLmNyZWF0ZV9waXBlbGluZV9sYXlvdXQoJndncHU6OlBpcGVsaW5lTGF5b3V0RGVzY3JpcHRvciB7CiAgICAgICAgICAgIGxhYmVsOiBTb21lKCJVYmVyU2hhZG93UGlwZWxpbmUgUGlwZWxpbmVMYXlvdXQiKSwKICAgICAgICAgICAgYmluZF9ncm91cF9sYXlvdXRzOiAmWwogICAgICAgICAgICAgICAgc2hhZG93X3JvaXMuYmluZF9ncm91cF9sYXlvdXQoKS5yZXMoKSwKICAgICAgICAgICAgICAgIGluc3RfcnBhc3NfYnVmLmJpbmRfZ3JvdXBfbGF5b3V0KCkucmVzKCksCiAgICAgICAgICAgICAgICB2ZXJ0ZXhfYmdsLnJlcygpLAogICAgICAgICAgICBdLAogICAgICAgICAgICBwdXNoX2NvbnN0YW50X3JhbmdlczogJltdLAogICAgICAgIH0pOwoKICAgICAgICBsZXQgcGlwZWxpbmUgPSBkZXZpY2UuY3JlYXRlX3JlbmRlcl9waXBlbGluZSgmd2dwdTo6UmVuZGVyUGlwZWxpbmVEZXNjcmlwdG9yIHsKICAgICAgICAgICAgbGFiZWw6IFNvbWUoIlViZXJTaGFkb3dQaXBlbGluZSIpLAogICAgICAgICAgICBsYXlvdXQ6IFNvbWUoJnBpcGVsaW5lX2xheW91dCksCiAgICAgICAgICAgIHZlcnRleDogd2dwdTo6VmVydGV4U3RhdGUgewogICAgICAgICAgICAgICAgbW9kdWxlOiAmc2hhZGVyX3Jlcy52ZXJ0ZXhfbW9kdWxlLAogICAgICAgICAgICAgICAgZW50cnlfcG9pbnQ6IFNvbWUoJnNoYWRlcl9yZXMudmVydGV4X2VudHJ5X3BvaW50KSwKICAgICAgICAgICAgICAgIGNvbXBpbGF0aW9uX29wdGlvbnM6IHdncHU6OlBpcGVsaW5lQ29tcGlsYXRpb25PcHRpb25zIHsKICAgICAgICAgICAgICAgICAgICBjb25zdGFudHM6ICZbXSwKICAgICAgICAgICAgICAgICAgICB6ZXJvX2luaXRpYWxpemVfd29ya2dyb3VwX21lbW9yeTogdHJ1ZSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBidWZmZXJzOiAmW10sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZyYWdtZW50OiBTb21lKHdncHU6OkZyYWdtZW50U3RhdGUgewogICAgICAgICAgICAgICAgbW9kdWxlOiAmc2hhZGVyX3Jlcy5mcmFnbWVudF9tb2R1bGUsCiAgICAgICAgICAgICAgICBlbnRyeV9wb2ludDogU29tZSgmc2hhZGVyX3Jlcy5mcmFnbWVudF9lbnRyeV9wb2ludCksCiAgICAgICAgICAgICAgICBjb21waWxhdGlvbl9vcHRpb25zOiB3Z3B1OjpQaXBlbGluZUNvbXBpbGF0aW9uT3B0aW9ucyB7CiAgICAgICAgICAgICAgICAgICAgY29uc3RhbnRzOiAmW10sCiAgICAgICAgICAgICAgICAgICAgemVyb19pbml0aWFsaXplX3dvcmtncm91cF9tZW1vcnk6IHRydWUsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdGFyZ2V0czogJltdLCAvLyBubyBjb2xvciB0YXJnZXQKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIHByaW1pdGl2ZTogd2dwdTo6UHJpbWl0aXZlU3RhdGUgewogICAgICAgICAgICAgICAgdG9wb2xvZ3k6IHdncHU6OlByaW1pdGl2ZVRvcG9sb2d5OjpUcmlhbmdsZUxpc3QsCiAgICAgICAgICAgICAgICBzdHJpcF9pbmRleF9mb3JtYXQ6IE5vbmUsCiAgICAgICAgICAgICAgICBmcm9udF9mYWNlOiB3Z3B1OjpGcm9udEZhY2U6OkNjdywKICAgICAgICAgICAgICAgIGN1bGxfbW9kZTogTm9uZSwKICAgICAgICAgICAgICAgIHVuY2xpcHBlZF9kZXB0aDogZmFsc2UsCiAgICAgICAgICAgICAgICBwb2x5Z29uX21vZGU6IHdncHU6OlBvbHlnb25Nb2RlOjpGaWxsLAogICAgICAgICAgICAgICAgY29uc2VydmF0aXZlOiBmYWxzZSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVwdGhfc3RlbmNpbDogU29tZSh3Z3B1OjpEZXB0aFN0ZW5jaWxTdGF0ZSB7CiAgICAgICAgICAgICAgICBmb3JtYXQ6IFNIQURPV19ERVBUSF9GT1JNQVQsCiAgICAgICAgICAgICAgICBkZXB0aF93cml0ZV9lbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgICAgZGVwdGhfY29tcGFyZTogd2dwdTo6Q29tcGFyZUZ1bmN0aW9uOjpMZXNzLAogICAgICAgICAgICAgICAgc3RlbmNpbDogd2dwdTo6U3RlbmNpbFN0YXRlOjpkZWZhdWx0KCksCiAgICAgICAgICAgICAgICBiaWFzOiBERVBUSF9CSUFTX1NUQVRFLAogICAgICAgICAgICB9KSwKICAgICAgICAgICAgbXVsdGlzYW1wbGU6IHdncHU6Ok11bHRpc2FtcGxlU3RhdGU6OmRlZmF1bHQoKSwKICAgICAgICAgICAgbXVsdGl2aWV3OiBOb25lLAogICAgICAgICAgICBjYWNoZTogTm9uZSwKICAgICAgICB9KTsKCiAgICAgICAgU2VsZiB7CiAgICAgICAgICAgIHZlcnRleF9iZ2wsCiAgICAgICAgICAgIHBpcGVsaW5lLAogICAgICAgIH0KICAgIH0KCiAgICBwdWIgZm4gZW5jb2RlX3JwYXNzKAogICAgICAgICZzZWxmLAogICAgICAgIHJwYXNzOiAmbXV0IHdncHU6OlJlbmRlclBhc3MsCiAgICAgICAgZGV2aWNlOiAmd2dwdTo6RGV2aWNlLAogICAgICAgIGluZGV4X2J1ZjogJk1hbmFnZWRNZXNoQnVmZmVyPFViZXJJbmRleD4sCiAgICAgICAgdmVydGV4X2J1ZjogJk1hbmFnZWRNZXNoQnVmZmVyPENvbXByZXNzZWRVYmVyVmVydGV4PiwKICAgICAgICBpbnN0X3JwYXNzX2J1ZjogJkluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjxVYmVySW5zdGFuY2VQb2Q+LAogICAgICAgIHNoYWRvd19yb2lzOiAmU2hhZG93Q2FzY2FkZVJPSXMsCiAgICAgICAgY2FzY2FkZV9pbmRleDogdXNpemUsCiAgICApIHsKICAgICAgICAvLyBDb2xsZWN0IGluc3RhbmNlcyBwZXIgbWVzaAoKICAgICAgICBsZXQgdmVydGV4X2JnID0gQmluZEdyb3VwQnVpbGRlcjo6bmV3KHNlbGYudmVydGV4X2JnbC5jbG9uZSgpKQogICAgICAgICAgICAud2l0aF9sYWJlbCgidWJlciBzaGFkb3cgdmVydGV4IGJ1ZmZlciIpCiAgICAgICAgICAgIC53aXRoX2JpbmRpbmcodmVydGV4X2J1Zi5hc193Z3B1X2JpbmRpbmdfcmVzb3VyY2UoKSkKICAgICAgICAgICAgLmZpbmFsaXplKGRldmljZSk7CgogICAgICAgIHJwYXNzLnNldF9waXBlbGluZSgmc2VsZi5waXBlbGluZSk7CgogICAgICAgIHJwYXNzLnNldF9pbmRleF9idWZmZXIoaW5kZXhfYnVmLmRldmljZV9idWZmZXJfc2xpY2UoKSwgd2dwdTo6SW5kZXhGb3JtYXQ6OlVpbnQzMik7CgogICAgICAgIHNoYWRvd19yb2lzLnNldF9iaW5kX2dyb3VwKHJwYXNzLCAwLCBjYXNjYWRlX2luZGV4KTsKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgxLCBpbnN0X3JwYXNzX2J1Zi5iaW5kX2dyb3VwKCkucmVzKCksICZbXSk7CiAgICAgICAgcnBhc3Muc2V0X2JpbmRfZ3JvdXAoMiwgdmVydGV4X2JnLnJlcygpLCAmW10pOwoKICAgICAgICBpbnN0X3JwYXNzX2J1Zi5wdXNoX3RvX3JwYXNzKHJwYXNzKTsKICAgIH0KfQoAAAAAAAAAAAsVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAEAAAAAAABMAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/I/Ikabur/candy/crates/candy/src/renderer/wire_pipeline.rs",
			"settings":
			{
				"buffer_size": 3647,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"right_delete",
					null,
					"AQAAABEAAAAAAAAAEQAAAAAAAAA7AAAAQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCA",
					"AQAAAAAAAAABAAAAEQAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"right_delete",
					null,
					"AQAAAFEAAAAAAAAAUQAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAUQAAAAAAAABRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"right_delete",
					null,
					"AgAAAEEAAAAAAAAAQQAAAAAAAAAXAAAASW5zdGFuY2VSZW5kZXJwYXNCdWZmZXJBAAAAAAAAAEEAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAQQAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"right_delete",
					null,
					"AQAAAIAAAAAAAAAAgAAAAAAAAAAnAAAAIFNoYWRlciwgU2hhZGVyTW9kdWxlLCBTaGFkZXJSZXNvdXJjZSwg",
					"AQAAAAAAAAABAAAAgAAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"rust_fmt_format_buffer",
					null,
					"BQAAABEAAAAAAAAAJwAAAAAAAAAAAAAAPAAAAAAAAAA8AAAAAAAAABsAAAAKICAgIERFUFRIX1NURU5DSUxfRk9STUFULCBQAAAAAAAAAFAAAAAAAAAAKwAAAFJFTkRFUl9DT0xPUl9GT1JNQVQsCiAgICBTSEFERVJfQVNTRVRfUEFUSCyCAAAAAAAAAIIAAAAAAAAAFAAAAGNyZWF0ZV93Z3B1X3BpcGVsaW5lggAAAAAAAAC+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							0,
							0
						],
						"replacement": "use candy_render_elements::BindGroupLayout;\n"
					},
					"AQAAAAAAAAAAAAAALAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							44,
							44
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAACwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							94,
							94
						],
						"replacement": "use candy_render_elements::Shader;\n"
					},
					"AQAAAF4AAAAAAAAAgQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgAAAAAAAACuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							129,
							129
						],
						"replacement": "use candy_render_elements::ShaderModule;\n"
					},
					"AQAAAIEAAAAAAAAAqgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QAAAAAAAADRAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							170,
							170
						],
						"replacement": "use candy_render_elements::ShaderResource;\n"
					},
					"AQAAAKoAAAAAAAAA1QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							213,
							213
						],
						"replacement": "use candy_render_elements::BindGroupLayoutBuilder;\n"
					},
					"AQAAANUAAAAAAAAACAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQEAAAAAAAAlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							264,
							264
						],
						"replacement": "use candy_render_nodes::InstanceRenderpassBuffer;\n"
					},
					"AQAAAAgBAAAAAAAAOgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							314,
							314
						],
						"replacement": "use candy_render_elements::BindGroupBuilder;\n"
					},
					"AQAAADoBAAAAAAAAZwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigEAAAAAAACKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"rust_fmt_format_buffer",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABnAQAAdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6QmluZEdyb3VwTGF5b3V0Owp1c2UgY2FuZHlfcmVuZGVyX25vZGVzOjpJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXI7CnVzZSBjYW5keV9yZW5kZXJfZWxlbWVudHM6OlNoYWRlcjsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6U2hhZGVyTW9kdWxlOwp1c2UgY2FuZHlfcmVuZGVyX2VsZW1lbnRzOjpTaGFkZXJSZXNvdXJjZTsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6QmluZEdyb3VwTGF5b3V0QnVpbGRlcjsKdXNlIGNhbmR5X3JlbmRlcl9ub2Rlczo6SW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyOwp1c2UgY2FuZHlfcmVuZGVyX2VsZW1lbnRzOjpCaW5kR3JvdXBCdWlsZGVyOwrBAAAAAAAAAHgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwEAAAAAAAC3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABTDgAAdXNlIGNyYXRlOjp7CiAgICBjcmVhdGVfd2dwdV9waXBlbGluZSwgQ29tcHJlc3NlZFdpcmVWZXJ0ZXgsIE1hbmFnZWRNZXNoQnVmZmVyLCBTdGFuZGFyZEJpbmRpbmdzLCBVYmVySW5kZXgsCiAgICBXaXJlSW5zdGFuY2VQb2QsIERFUFRIX1NURU5DSUxfRk9STUFULCBSRU5ERVJfQ09MT1JfRk9STUFULCBTSEFERVJfQVNTRVRfUEFUSCwKfTsKdXNlIGNhbmR5X3JlbmRlcl9lbGVtZW50czo6ewogICAgQmluZEdyb3VwQnVpbGRlciwgQmluZEdyb3VwTGF5b3V0LCBCaW5kR3JvdXBMYXlvdXRCdWlsZGVyLCBTaGFkZXIsIFNoYWRlck1vZHVsZSwgU2hhZGVyUmVzb3VyY2UsCn07CnVzZSBjYW5keV9yZW5kZXJfbm9kZXM6Okluc3RhbmNlUmVuZGVycGFzc0J1ZmZlcjsKdXNlIHN0ZDo6cGF0aDo6UGF0aEJ1ZjsKCnB1YiBzdHJ1Y3QgV2lyZVBpcGVsaW5lIHsKICAgIHZlcnRleF9iZ2w6IEJpbmRHcm91cExheW91dCwKICAgIHBpcGVsaW5lOiB3Z3B1OjpSZW5kZXJQaXBlbGluZSwKfQoKaW1wbCBXaXJlUGlwZWxpbmUgewogICAgcHViIGZuIG5ldygKICAgICAgICB3Z3B1X2RldmljZTogJndncHU6OkRldmljZSwKICAgICAgICBiaW5kaW5nczogJlN0YW5kYXJkQmluZGluZ3MsCiAgICAgICAgaW5zdF9ycGFzc19idWY6ICZJbnN0YW5jZVJlbmRlcnBhc3NCdWZmZXI8V2lyZUluc3RhbmNlUG9kPiwKICAgICkgLT4gU2VsZiB7CiAgICAgICAgbGV0IHNoYWRlcl9hc3NldF9wYXRoID0gUGF0aEJ1Zjo6ZnJvbShTSEFERVJfQVNTRVRfUEFUSCk7CgogICAgICAgIGxldCBzaGFkZXIgPSBTaGFkZXIgewogICAgICAgICAgICBsYWJlbDogIldpcmUgU2hhZGVyIi5pbnRvKCksCiAgICAgICAgICAgIHZlcnRleF9zaGFkZXI6IFNoYWRlck1vZHVsZSB7CiAgICAgICAgICAgICAgICBwYXRoOiBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ3aXJlLndnc2wiKSwKICAgICAgICAgICAgICAgIGRlcHM6IHZlYyFbCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidW5pZm9ybXMud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInN0YW5kYXJkX2JpbmRpbmdzLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bnBhY2sud2dzbCIpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGVudHJ5X3BvaW50OiAidnNfbWFpbiIuaW50bygpLAogICAgICAgICAgICB9LAogICAgICAgICAgICBmcmFnbWVudF9zaGFkZXI6IFNoYWRlck1vZHVsZSB7CiAgICAgICAgICAgICAgICBwYXRoOiBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ3aXJlLndnc2wiKSwKICAgICAgICAgICAgICAgIGRlcHM6IHZlYyFbCiAgICAgICAgICAgICAgICAgICAgc2hhZGVyX2Fzc2V0X3BhdGguam9pbigidW5pZm9ybXMud2dzbCIpLAogICAgICAgICAgICAgICAgICAgIHNoYWRlcl9hc3NldF9wYXRoLmpvaW4oInN0YW5kYXJkX2JpbmRpbmdzLndnc2wiKSwKICAgICAgICAgICAgICAgICAgICBzaGFkZXJfYXNzZXRfcGF0aC5qb2luKCJ1bnBhY2sud2dzbCIpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGVudHJ5X3BvaW50OiAiZnNfbWFpbiIuaW50bygpLAogICAgICAgICAgICB9LAogICAgICAgIH07CgogICAgICAgIGxldCBzaGFkZXJfcmVzID0gU2hhZGVyUmVzb3VyY2U6Om5ldygmc2hhZGVyLCB3Z3B1X2RldmljZSkudW53cmFwKCk7CgogICAgICAgIGxldCB2ZXJ0ZXhfYmdsID0gQmluZEdyb3VwTGF5b3V0QnVpbGRlcjo6bmV3KCkKICAgICAgICAgICAgLndpdGhfbGFiZWwoIndpcmUgdmVydGV4IGJ1ZmZlciBsYXlvdXQiKQogICAgICAgICAgICAud2l0aF9iaW5kaW5nKHdncHU6OkJpbmRpbmdUeXBlOjpCdWZmZXIgewogICAgICAgICAgICAgICAgdHk6IHdncHU6OkJ1ZmZlckJpbmRpbmdUeXBlOjpTdG9yYWdlIHsgcmVhZF9vbmx5OiB0cnVlIH0sCiAgICAgICAgICAgICAgICBoYXNfZHluYW1pY19vZmZzZXQ6IGZhbHNlLAogICAgICAgICAgICAgICAgbWluX2JpbmRpbmdfc2l6ZTogTm9uZSwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmZpbmFsaXplKHdncHVfZGV2aWNlKTsKCiAgICAgICAgbGV0IHBpcGVsaW5lID0gY3JlYXRlX3dncHVfcGlwZWxpbmUoCiAgICAgICAgICAgICJ3aXJlIiwKICAgICAgICAgICAgJnNoYWRlcl9yZXMsCiAgICAgICAgICAgIHdncHU6OlByaW1pdGl2ZVRvcG9sb2d5OjpMaW5lTGlzdCwKICAgICAgICAgICAgd2dwdTo6UG9seWdvbk1vZGU6OkxpbmUsCiAgICAgICAgICAgICZbCiAgICAgICAgICAgICAgICBiaW5kaW5ncy5jYW1lcmFfbGF5b3V0KCksCiAgICAgICAgICAgICAgICBiaW5kaW5ncy5za3lfbGF5b3V0KCksCiAgICAgICAgICAgICAgICBpbnN0X3JwYXNzX2J1Zi5iaW5kX2dyb3VwX2xheW91dCgpLAogICAgICAgICAgICAgICAgJnZlcnRleF9iZ2wsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHdncHVfZGV2aWNlLAogICAgICAgICAgICBSRU5ERVJfQ09MT1JfRk9STUFULAogICAgICAgICAgICBERVBUSF9TVEVOQ0lMX0ZPUk1BVCwKICAgICAgICAgICAgdHJ1ZSwKICAgICAgICApOwoKICAgICAgICBTZWxmIHsKICAgICAgICAgICAgdmVydGV4X2JnbCwKICAgICAgICAgICAgcGlwZWxpbmUsCiAgICAgICAgfQogICAgfQoKICAgIHB1YiBmbiBlbmNvZGVfcnBhc3MoCiAgICAgICAgJnNlbGYsCiAgICAgICAgcnBhc3M6ICZtdXQgd2dwdTo6UmVuZGVyUGFzcywKICAgICAgICB3Z3B1X2RldmljZTogJndncHU6OkRldmljZSwKICAgICAgICBpbmRleF9idWY6ICZNYW5hZ2VkTWVzaEJ1ZmZlcjxVYmVySW5kZXg+LAogICAgICAgIHZlcnRleF9idWY6ICZNYW5hZ2VkTWVzaEJ1ZmZlcjxDb21wcmVzc2VkV2lyZVZlcnRleD4sCiAgICAgICAgYmluZGluZ3M6ICZTdGFuZGFyZEJpbmRpbmdzLAogICAgICAgIGluc3RfcnBhc3NfYnVmOiAmSW5zdGFuY2VSZW5kZXJwYXNzQnVmZmVyPFdpcmVJbnN0YW5jZVBvZD4sCiAgICApIHsKICAgICAgICBsZXQgdmVydGV4X2JnID0gQmluZEdyb3VwQnVpbGRlcjo6bmV3KHNlbGYudmVydGV4X2JnbC5jbG9uZSgpKQogICAgICAgICAgICAud2l0aF9sYWJlbCgibGluZSB2ZXJ0ZXggYnVmZmVyIGJpbmQgZ3JvdXAiKQogICAgICAgICAgICAud2l0aF9iaW5kaW5nKHZlcnRleF9idWYuYXNfd2dwdV9iaW5kaW5nX3Jlc291cmNlKCkpCiAgICAgICAgICAgIC5maW5hbGl6ZSh3Z3B1X2RldmljZSk7CgogICAgICAgIHJwYXNzLnNldF9waXBlbGluZSgmc2VsZi5waXBlbGluZSk7CgogICAgICAgIHJwYXNzLnNldF9pbmRleF9idWZmZXIoaW5kZXhfYnVmLmRldmljZV9idWZmZXJfc2xpY2UoKSwgd2dwdTo6SW5kZXhGb3JtYXQ6OlVpbnQzMik7CgogICAgICAgIHJwYXNzLnNldF9iaW5kX2dyb3VwKDAsIGJpbmRpbmdzLmNhbWVyYV9iZygpLCAmW10pOwogICAgICAgIHJwYXNzLnNldF9iaW5kX2dyb3VwKDEsIGJpbmRpbmdzLnNreV9iZygpLCAmW10pOwogICAgICAgIHJwYXNzLnNldF9iaW5kX2dyb3VwKDIsIGluc3RfcnBhc3NfYnVmLmJpbmRfZ3JvdXAoKS5yZXMoKSwgJltdKTsKICAgICAgICBycGFzcy5zZXRfYmluZF9ncm91cCgzLCB2ZXJ0ZXhfYmcucmVzKCksICZbXSk7CgogICAgICAgIGluc3RfcnBhc3NfYnVmLnB1c2hfdG9fcnBhc3MocnBhc3MpOwogICAgfQp9CgAAAAAAAAAAPw4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 496 files for \"tracy\" (case sensitive, whole word)\n\n0 matches\n\nSearching 622 files for \"tracy\" (case sensitive, whole word)\n\nI:\\Ikabur\\candy\\justfile:\n   38  \n   39  tracy_install_win:\n   40:     powershell -ExecutionPolicy Bypass -File ./setup/tracy-win.ps1\n   41:     ./setup/tracy-win.ps1\n   42  \n   43  tracy_run_win:\n   44:     tools/tracy/tracy-profiler.exe\n   45  \n\n4 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 403,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/I/hand/fibs/setup/tracy-win.ps1",
			"settings":
			{
				"buffer_size": 622,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "crates/recola/src/recola_mocca.rs",
			"settings":
			{
				"buffer_size": 7242,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"cut",
					null,
					"AQAAADsAAAAAAAAAOwAAAAAAAAAOAAAAQmlndGFsa01vY2NhLCA",
					"AQAAAAAAAAABAAAAOwAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste",
					null,
					"AQAAAHEAAAAAAAAAfwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"right_delete",
					null,
					"AQAAAC0AAAAAAAAALQAAAAAAAAAcAAAAdXNlIGJpZ3RhbGs6OntzcGF3bl9hZ2VudH07Cg",
					"AQAAAAAAAAABAAAALQAAAAAAAABJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAdXNlIGNyYXRlOjplcGhfYXJjaGl0ZWN0OjpFcGhBcmNoaXRlY3RNb2NjYTsK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"rust_fmt_format_buffer",
					null,
					"FAAAAA4AAAAAAAAADgAAAAAAAAAQAAAAT3V0Ym94LCBSb3V0ZXIsIBgAAAAAAAAAJgAAAAAAAAAAAAAANAAAAAAAAAA0AAAAAAAAAAwAAAAgc3Bhd25fYWdlbnQ0AAAAAAAAAEIAAAAAAAAAAAAAAN4AAAAAAAAA8AAAAAAAAAAAAAAAbQEAAAAAAABtAQAAAAAAADMAAABjYW1lcmE6OntDYW1lcmFTdGF0ZSwgQ2FuZHlDYW1lcmFNb2NjYX07CnVzZSBjYW5keV9+AQAAAAAAAH4BAAAAAAAAIgAAAE1vY2NhOwp1c2UgY2FuZHlfaW5wdXQ6OkNhbmR5SW5wdXS8AQAAAAAAALwBAAAAAAAAIAAAAHVzZSBjYW5keV9tZXNoOjpDYW5keU1lc2hNb2NjYTsK5gEAAAAAAADmAQAAAAAAACsAAAB1c2UgY2FuZHlfc2NlbmVfdHJlZTo6Q2FuZHlTY2VuZVRyZWVNb2NjYTsKSQIAAAAAAABJAgAAAAAAACIAAAB1c2UgY2FuZHlfdGVycmE6OkNhbmR5VGVycmFNb2NjYTsKzAIAAAAAAADMAgAAAAAAACwAAAB1c2UgY2FuZHlfdGltZTo6e0NhbmR5VGltZU1vY2NhLCBTaW1DbG9ja307ChADAAAAAAAAFQMAAAAAAAAAAAAAPAMAAAAAAABTAwAAAAAAAAAAAABqAwAAAAAAAGoDAAAAAAAAKgAAAH07CnVzZSBjYW5keV91dGlsczo6e01hdGVyaWFsLCBQYnJNYXRlcmlhbGoDAAAAAAAAbAMAAAAAAAAAAAAAvwMAAAAAAAC/AwAAAAAAAA0AAABWb2x1bWVNb2RlbCwg6AMAAAAAAAD1AwAAAAAAAAAAAAAXBAAAAAAAABcEAAAAAAAAGAAAAHVzZSBnbGFtOjp7VmVjMiwgVmVjM307CmAEAAAAAAAAYAQAAAAAAAAaAAAAOwp1c2Ugc2ltcGxlY3M6OnByZWx1ZGU6OipgBAAAAAAAAGAEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"right_delete",
					null,
					"AQAAAIcDAAAAAAAAhwMAAAAAAAAtAAAAdXNlIGZsb3dzaW06OntQaXBlRGVmLCBQaXBlVmVzc2VsLCBQb3J0VGFnfTsK",
					"AQAAAAAAAAABAAAAhwMAAAAAAAC0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"right_delete",
					null,
					"AQAAAIoGAAAAAAAAigYAAAAAAAAxAAAAICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxFcGhNYWluV2luZG93TW9jY2E+KCk7Cg",
					"AQAAAAAAAAABAAAAigYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"right_delete",
					null,
					"AQAAAIoGAAAAAAAAigYAAAAAAAAwAAAAICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxFcGhBcmNoaXRlY3RNb2NjYT4oKTsK",
					"AQAAAAAAAAABAAAAigYAAAAAAAC6BgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAKUOAAAAAAAApQ4AAAAAAAAUAAAAICAgICAgICBNYWluV2luZG93LAo",
					"AQAAAAAAAAABAAAApQ4AAAAAAAC5DgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "RECOLA"
					},
					"BgAAAM0OAAAAAAAAzg4AAAAAAAAFAAAARUFSVEjODgAAAAAAAM8OAAAAAAAAAAAAAM8OAAAAAAAA0A4AAAAAAAAAAAAA0A4AAAAAAADRDgAAAAAAAAAAAADRDgAAAAAAANIOAAAAAAAAAAAAANIOAAAAAAAA0w4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQ4AAAAAAADSDgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					2,
					"delete_word",
					{
						"forward": true
					},
					"AgAAANMOAAAAAAAA0w4AAAAAAAAGAAAAIFBPV0VS0w4AAAAAAADTDgAAAAAAAAYAAAAgSE9VU0U",
					"AQAAAAAAAAABAAAA0w4AAAAAAADTDgAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "LUDUM"
					},
					"BQAAAM0OAAAAAAAAzg4AAAAAAAAAAAAAzg4AAAAAAADPDgAAAAAAAAAAAADPDgAAAAAAANAOAAAAAAAAAAAAANAOAAAAAAAA0Q4AAAAAAAAAAAAA0Q4AAAAAAADSDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQ4AAAAAAADNDgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " DARE"
					},
					"BQAAANIOAAAAAAAA0w4AAAAAAAAAAAAA0w4AAAAAAADUDgAAAAAAAAAAAADUDgAAAAAAANUOAAAAAAAAAAAAANUOAAAAAAAA1g4AAAAAAAAAAAAA1g4AAAAAAADXDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0g4AAAAAAADSDgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " 7"
					},
					"AgAAANcOAAAAAAAA2A4AAAAAAAAAAAAA2A4AAAAAAADZDgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1w4AAAAAAADXDgAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAANgOAAAAAAAA2A4AAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAA2Q4AAAAAAADZDgAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "57:"
					},
					"AwAAANgOAAAAAAAA2Q4AAAAAAAAAAAAA2Q4AAAAAAADaDgAAAAAAAAAAAADaDgAAAAAAANsOAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2A4AAAAAAADYDgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsOAAAAAAAA3A4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2w4AAAAAAADbDgAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"right_delete",
					null,
					"AQAAAHAzAAAAAAAAcDMAAAAAAACqDwAACmZuIHByaW50X3JlcG9ydCh3b3JsZDogJm11dCBXb3JsZCkgewogICAgLy8gd29ybGQKICAgIC8vICAgICAucXVlcnk6OjwoJkN1cnJlbnRCbG9vZE94eWdlbiwgJkJvZHlUb3gsICZDdXJyZW50QnJlYXRoaW5nT3JnYW4pPigpCiAgICAvLyAgICAgLmJ1aWxkKCkKICAgIC8vICAgICAuZWFjaF9lbnRpdHkofGUsIChveHksIHRveCwgb3JnYW4pfCB7CiAgICAvLyAgICAgICAgIHByaW50bG4hKAogICAgLy8gICAgICAgICAgICAgInt9OiBveHk6ezo2LjAzP30sIHRveDogezo2LjAzP30sIGFiczp7OjYuMDM/fSwgcG9sbDp7OjYuMDM/fSIsCiAgICAvLyAgICAgICAgICAgICBlLm5hbWUoKSwKICAgIC8vICAgICAgICAgICAgIG94eS52YWx1ZSwKICAgIC8vICAgICAgICAgICAgIHRveC5hbW91bnQsCiAgICAvLyAgICAgICAgICAgICBvcmdhbi5veHlnZW5fYWJzb3JwdGlvbiwKICAgIC8vICAgICAgICAgICAgIG9yZ2FuLnBvbGx1dGlvbl9hYnNvcnB0aW9uCiAgICAvLyAgICAgICAgICk7CiAgICAvLyAgICAgfSk7CgogICAgLy8gd29ybGQKICAgIC8vICAgICAucXVlcnk6OjwoKT4oKQogICAgLy8gICAgIC53aXRoKFBsYXllclRhZykKICAgIC8vICAgICAuYnVpbGQoKQogICAgLy8gICAgIC5lYWNoX2VudGl0eSh8ZSwgKCl8IHsKICAgIC8vICAgICAgICAgcHJpbnRsbiEoIns6P30iLCBlLm5hbWUoKSk7CiAgICAvLyAgICAgfSk7CgogICAgLy8gd29ybGQKICAgIC8vICAgICAucXVlcnk6OjwoJlBpcGU8Qmxvb2RQcm9wZXJ0aWVzPiwgJlBpcGVGbG93U3RhdGUpPigpCiAgICAvLyAgICAgLnJlbGF0ZWQoIiR0aGlzIiwgZmxlY3M6OkNoaWxkT2YsICIkcGxheWVyIikKICAgIC8vICAgICAudGFnZ2VkKCIkcGxheWVyIiwgUGxheWVyVGFnKQogICAgLy8gICAgIC5idWlsZCgpCiAgICAvLyAgICAgLmVhY2hfZW50aXR5KHxlLCAodiwgc3RhdGUpfCB7CiAgICAvLyAgICAgICAgIHByaW50bG4hKAogICAgLy8gICAgICAgICAgICAgIns6P306IFY6IHs6LjAzP30gbCwgZmxvdzogezouMDM/fSBtbC9zIiwKICAgIC8vICAgICAgICAgICAgIGUubmFtZSgpLAogICAgLy8gICAgICAgICAgICAgdi52b2x1bWUoKSwKICAgIC8vICAgICAgICAgICAgIHN0YXRlLmZsb3coKQogICAgLy8gICAgICAgICApOwogICAgLy8gICAgIH0pOwoKICAgIHdvcmxkCiAgICAgICAgLnF1ZXJ5Ojo8KCZIZWFydFJhdGVCcG0sICZIZWFydFN0YXRzLCBPcHRpb248Jk5hbWU+KT4oKQogICAgICAgIC5lYWNoKHwoYnBtLCBzdGF0cywgbmFtZSl8IHsKICAgICAgICAgICAgcHJpbnRsbiEoCiAgICAgICAgICAgICAgICAiezo/fToge30gQlBNLCBiZWF0OiB7fSwgc3RhZ2U6IHs6P30gW3s6NC4xfSVdIiwKICAgICAgICAgICAgICAgIG5hbWUsCiAgICAgICAgICAgICAgICAqKmJwbSwKICAgICAgICAgICAgICAgIHN0YXRzLmJlYXQsCiAgICAgICAgICAgICAgICBzdGF0cy5zdGFnZSwKICAgICAgICAgICAgICAgIHN0YXRzLnN0YWdlX3Byb2dyZXNzICogMTAwLgogICAgICAgICAgICApOwogICAgICAgIH0pOwoKICAgIHdvcmxkLnF1ZXJ5Ojo8KCZIZWFydFN0YXRzLCk+KCkuZWFjaCh8KHN0YXRzLCl8IHsKICAgICAgICBpZiBzdGF0cy5iZWF0IHsKICAgICAgICAgICAgcHJpbnRsbiEoIj4+Pj4+IEJVTSBCVU0gPDw8PDwiKTsKICAgICAgICB9CiAgICB9KTsKCiAgICAvLyB3b3JsZAogICAgLy8gICAgIC5xdWVyeTo6PCgmQmxvb2RTdGF0cywpPigpCiAgICAvLyAgICAgLndpdGgoQWx2ZW9saVRhZykKICAgIC8vICAgICAuYnVpbGQoKQogICAgLy8gICAgIC5lYWNoX2VudGl0eSh8ZSwgKGJsb29kLCl8IHsKICAgIC8vICAgICAgICAgcHJpbnRsbiEoIkFsdmVvbGkgezo/fTogU08yOiB7Oi4xfSUiLCBlLm5hbWUoKSwgMTAwLiAqIGJsb29kLnNvMik7CiAgICAvLyAgICAgfSk7CgogICAgLy8gd29ybGQKICAgIC8vICAgICAucXVlcnk6OjwoT3B0aW9uPCZCb2R5UGFydD4sICZCbG9vZFZlc3NlbCk+KCkKICAgIC8vICAgICAuYnVpbGQoKQogICAgLy8gICAgIC5lYWNoX2VudGl0eSh8ZSwgKHBhcnQsIHZlc3NlbCl8IHsKICAgIC8vICAgICAgICAgcHJpbnRsbiEoCiAgICAvLyAgICAgICAgICAgICAiVmVzc2VsIHs6P30gW3twYXJ0Oj99XTogZnJhZ3M6IHt9IiwKICAgIC8vICAgICAgICAgICAgIGUubmFtZSgpLAogICAgLy8gICAgICAgICAgICAgdmVzc2VsLmNodW5rcygpLmxlbigpCiAgICAvLyAgICAgICAgICk7CiAgICAvLyAgICAgfSk7CgogICAgcHJpbnRsbiEoIkNBUkRJT1ZBU0NVTEFSIFN1bW1hcnk6Iik7CiAgICBwcmludGxuISgie30iLCAiLSIucmVwZWF0KDEwOCkpOwogICAgcHJpbnRsbiEoCiAgICAgICAgInwgezo8MTZ9IFt7Oj4xMn1dIHwgezo+MTV9IHwgezo+MTV9IHwgezo+MTF9IHwgezo+N30gfCB7Oj4xMH0gfCIsCiAgICAgICAgIk5hbWUiLAogICAgICAgICJCb2R5IFBhcnQiLAogICAgICAgICJQcmVzc3VyZSBbbW1IZ10iLAogICAgICAgICJGbG93IFttTC9zXSIsCiAgICAgICAgIlZvbHVtZSBbbUxdIiwKICAgICAgICAiU08yIFslXSIsCiAgICAgICAgIlBPMiBbbW1IZ10iCiAgICApOwogICAgcHJpbnRsbiEoInt9IiwgIi0iLnJlcGVhdCgxMDgpKTsKICAgIHdvcmxkCiAgICAgICAgLnF1ZXJ5Ojo8KAogICAgICAgICAgICBPcHRpb248JkJvZHlQYXJ0PiwKICAgICAgICAgICAgJkJsb29kU3RhdHMsCiAgICAgICAgICAgICZQaXBlRGVmLAogICAgICAgICAgICAmUGlwZVZlc3NlbCwKICAgICAgICAgICAgJlBpcGVGbG93U3RhdGUsCiAgICAgICAgICAgIE9wdGlvbjwmTmFtZT4sCiAgICAgICAgKT4oKQogICAgICAgIC5lYWNoKHwocGFydCwgYmxvb2QsIGRlZiwgdmVzc2VsLCBzdGF0ZSwgbmFtZSl8IHsKICAgICAgICAgICAgcHJpbnRsbiEoCiAgICAgICAgICAgICAgICAifCB7OjwxNn0gW3s6PjEyfV0gfCB7OjcuMX0gezo3LjF9IHwgezo3LjF9IHs6Ny4xfSB8IHs6NS4xfSB7OjUuMX0gfCB7OjcuMX0gfCB7OjEwLjB9IHwiLAogICAgICAgICAgICAgICAgbmFtZS5tYXBfb3IoIiIsIHxufCBuLmFzX3N0cigpKSwKICAgICAgICAgICAgICAgIHBhcnQubWFwX29yX2Vsc2UofHwgU3RyaW5nOjpuZXcoKSwgfHh8IGZvcm1hdCEoInt4Oj99IikpLAogICAgICAgICAgICAgICAgcHJlc3N1cmVfdG9fbW1faGcoc3RhdGUucHJlc3N1cmUoUG9ydFRhZzo6QSkpLAogICAgICAgICAgICAgICAgcHJlc3N1cmVfdG9fbW1faGcoc3RhdGUucHJlc3N1cmUoUG9ydFRhZzo6QikpLAogICAgICAgICAgICAgICAgdm9sdW1lX3RvX21pbGxpX2xpdGVycyhzdGF0ZS5mbG93KFBvcnRUYWc6OkEpKSwKICAgICAgICAgICAgICAgIHZvbHVtZV90b19taWxsaV9saXRlcnMoc3RhdGUuZmxvdyhQb3J0VGFnOjpCKSksCiAgICAgICAgICAgICAgICB2b2x1bWVfdG9fbWlsbGlfbGl0ZXJzKHZlc3NlbC52b2x1bWUoKSksCiAgICAgICAgICAgICAgICB2b2x1bWVfdG9fbWlsbGlfbGl0ZXJzKGRlZi5zaGFwZS5ub21pbmFsX3ZvbHVtZSgpKSwKICAgICAgICAgICAgICAgIDEwMC4gKiBibG9vZC5zbzIsCiAgICAgICAgICAgICAgICBibG9vZC5wbzIKICAgICAgICAgICAgKTsKICAgICAgICB9KTsKICAgIHByaW50bG4hKCJ7fSIsICItIi5yZXBlYXQoMTA4KSk7CgogICAgLy8gd29ybGQKICAgIC8vICAgICAucXVlcnk6OjwoT3B0aW9uPCZCb2R5UGFydD4sICZUaXNzdWUsICZUaXNzdWVTdGF0cyk+KCkKICAgIC8vICAgICAuYnVpbGQoKQogICAgLy8gICAgIC5lYWNoX2VudGl0eSh8ZSwgKHBhcnQsIHRpc3N1ZSwgc3RhdHMpfCB7CiAgICAvLyAgICAgICAgIHByaW50bG4hKAogICAgLy8gICAgICAgICAgICAgIlRpc3N1ZSB7Oj99IFt7cGFydDo/fV06IFNPMjogezowLjB9JSwgTzIgY29udDogezowLjB9IG1ML2RMIiwKICAgIC8vICAgICAgICAgICAgIGUubmFtZSgpLAogICAgLy8gICAgICAgICAgICAgMTAwLiAqIHN0YXRzLm8yX3NhdHVyYXRpb24sCiAgICAvLyAgICAgICAgICAgICAxMDAuICogdGlzc3VlLm8yX2NvbnRlbnQKICAgIC8vICAgICAgICAgKTsKICAgIC8vICAgICB9KTsKfQo",
					"AQAAAAAAAAABAAAAGkMAAAAAAABwMwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAN0QAAAAAAAA3RAAAAAAAAD8AAAACmZuIGVuYWJsZV9mbG93X3NpbV9sb2dnaW5nKG11dCBjZmc6IFNpbmdsZXRvbk11dDxGbG93U2ltQ29uZmlnPikgewogICAgY2ZnLnBpcGVfc3RhdHNfY3N2X3BhdGggPSBTb21lKCJJOi9Ja2FidXIvZ29zL3RtcC9oZWFydC8iLmludG8oKSk7CiAgICBjZmcuZ3JhcGhfdG9wb2xvZ3lfcGF0aCA9IFNvbWUoIkk6L0lrYWJ1ci9nb3MvdG1wL2hlYXJ0LyIuaW50bygpKTsKICAgIGNmZy5kZWJ1Z19wcmludF9vZGVfc29sdXRpb24gPSB0cnVlOwp9",
					"AQAAAAAAAAABAAAA3RAAAAAAAADZEQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"right_delete",
					null,
					"AQAAAN0QAAAAAAAA3RAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA3RAAAAAAAADdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							903,
							971
						],
						"replacement": ""
					},
					"AQAAAIcDAAAAAAAAhwMAAAAAAABEAAAAdXNlIGdlbXM6OntwcmVzc3VyZV90b19tbV9oZywgdm9sdW1lX3RvX21pbGxpX2xpdGVycywgVm9sdW1lTW9kZWx9Owo",
					"AQAAAAAAAAABAAAA3RAAAAAAAADdEAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"rust_accept_suggested_replacement",
					{
						"region":
						[
							934,
							948
						],
						"replacement": ""
					},
					"AQAAAKYDAAAAAAAApgMAAAAAAAAOAAAAdXNlIGdvc2ltOjoqOwo",
					"AQAAAAAAAAABAAAAmRAAAAAAAACZEAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"AQAAAAUJAAAAAAAABQkAAAAAAAAgAAAAICAgICAgICAvLyBwcmludF9yZXBvcnQod29ybGQpOwo",
					"AQAAAAAAAAABAAAABQkAAAAAAAAlCQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAABQkAAAAAAAAFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAAFMUAAAAAAAAUxQAAAAAAAD4AQAAICAgIGFzbGkubG9hZF9nbHRmKAogICAgICAgICZBc3NldFVpZDo6bmV3KCJjYWN0dXMiKSwKICAgICAgICBHbHRmQXNzZXREZXNjcmlwdG9yIHsKICAgICAgICAgICAgcGF0aDogUGF0aEJ1Zjo6ZnJvbSgiSTovSWthYnVyL2VwaC9hc3NldHMvbW9kZWxzL2Zsb3JhL2NhY3R1cy5nbGIiKSwKICAgICAgICAgICAgc2NlbmU6IE5vbmUsCiAgICAgICAgICAgIG5vZGU6IE5vbmUsCiAgICAgICAgfSwKICAgICk7CiAgICBhc2xpLmxvYWRfZ2x0ZigKICAgICAgICAmQXNzZXRVaWQ6Om5ldygiY2hhci1yZWRfcHJpZXN0X2dlcm1hbmljdXMiKSwKICAgICAgICBHbHRmQXNzZXREZXNjcmlwdG9yIHsKICAgICAgICAgICAgcGF0aDogUGF0aEJ1Zjo6ZnJvbSgiSTovSWthYnVyL2VwaC9hc3NldHMvbW9kZWxzL2NoYXJhY3RlcnMvcmVkX3ByaWVzdF9nZXJtYW5pY3VzLmdsYiIpLAogICAgICAgICAgICBzY2VuZTogTm9uZSwKICAgICAgICAgICAgbm9kZTogTm9uZSwKICAgICAgICB9LAogICAgKTsK",
					"AQAAAAAAAAABAAAAUxQAAAAAAABLFgAAAAAAAAAAAAAAAAAA"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAAIoVAAAAAAAAihUAAAAAAADFBAAAICAgIGFzbGkubG9hZF9nbHRmKAogICAgICAgICZBc3NldFVpZDo6bmV3KCJidWlsZC1jb25jcmV0ZS53YWxsXzF4MiIpLAogICAgICAgIEdsdGZBc3NldERlc2NyaXB0b3IgewogICAgICAgICAgICBwYXRoOiBQYXRoQnVmOjpmcm9tKCJJOi9Ja2FidXIvZXBoL2Fzc2V0cy9tb2RlbHMvYnVpbGRpbmdzL2J1aWxkLWNvbmNyZXRlLmdsYiIpLAogICAgICAgICAgICBzY2VuZTogU29tZSgiU2NlbmUiLmludG8oKSksCiAgICAgICAgICAgIG5vZGU6IFNvbWUoImJ1aWxkLWNvbmNyZXRlLndhbGxfMXgyIi5pbnRvKCkpLAogICAgICAgIH0sCiAgICApOwogICAgYXNsaS5sb2FkX2dsdGYoCiAgICAgICAgJkFzc2V0VWlkOjpuZXcoImJ1aWxkLWNvbmNyZXRlLmNvcm5lciIpLAogICAgICAgIEdsdGZBc3NldERlc2NyaXB0b3IgewogICAgICAgICAgICBwYXRoOiBQYXRoQnVmOjpmcm9tKCJJOi9Ja2FidXIvZXBoL2Fzc2V0cy9tb2RlbHMvYnVpbGRpbmdzL2J1aWxkLWNvbmNyZXRlLmdsYiIpLAogICAgICAgICAgICBzY2VuZTogU29tZSgiU2NlbmUiLmludG8oKSksCiAgICAgICAgICAgIG5vZGU6IFNvbWUoImJ1aWxkLWNvbmNyZXRlLmNvcm5lciIuaW50bygpKSwKICAgICAgICB9LAogICAgKTsKICAgIGFzbGkubG9hZF9nbHRmKAogICAgICAgICZBc3NldFVpZDo6bmV3KCJwcm9wLWNyaW1zb25fYWx0YXIiKSwKICAgICAgICBHbHRmQXNzZXREZXNjcmlwdG9yIHsKICAgICAgICAgICAgcGF0aDogUGF0aEJ1Zjo6ZnJvbSgiSTovSWthYnVyL2VwaC9hc3NldHMvbW9kZWxzL3Byb3AvcHJvcC1jcmltc29uX2FsdGFyLmdsYiIpLAogICAgICAgICAgICBzY2VuZTogU29tZSgiU2NlbmUiLmludG8oKSksCiAgICAgICAgICAgIG5vZGU6IFNvbWUoInByb3AtY3JpbXNvbl9hbHRhciIuaW50bygpKSwKICAgICAgICB9LAogICAgKTsKICAgIGFzbGkubG9hZF9nbHRmKAogICAgICAgICZBc3NldFVpZDo6bmV3KCJwcm9wLWNyaW1zb25fYmVhY29uIiksCiAgICAgICAgR2x0ZkFzc2V0RGVzY3JpcHRvciB7CiAgICAgICAgICAgIHBhdGg6IFBhdGhCdWY6OmZyb20oIkk6L0lrYWJ1ci9lcGgvYXNzZXRzL21vZGVscy9wcm9wL3Byb3AtY3JpbXNvbl9iZWFjb24uZ2xiIiksCiAgICAgICAgICAgIHNjZW5lOiBTb21lKCJTY2VuZSIuaW50bygpKSwKICAgICAgICAgICAgbm9kZTogU29tZSgicHJvcC1jcmltc29uX2JlYWNvbiIuaW50bygpKSwKICAgICAgICB9LAogICAgKTsK",
					"AQAAAAAAAAABAAAAihUAAAAAAABPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"paste",
					null,
					"AQAAAAUVAAAAAAAAFhUAAAAAAAAIAAAAY29uY3JldGU",
					"AQAAAAAAAAABAAAABRUAAAAAAAANFQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					2,
					"right_delete",
					null,
					"AgAAAP8UAAAAAAAA/xQAAAAAAAAFAAAAYnVpbGT/FAAAAAAAAP8UAAAAAAAAAQAAAC0",
					"AQAAAAAAAAABAAAA/xQAAAAAAAAEFQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "recola"
					},
					"BgAAAPUUAAAAAAAA9hQAAAAAAAAJAAAAYnVpbGRpbmdz9hQAAAAAAAD3FAAAAAAAAAAAAAD3FAAAAAAAAPgUAAAAAAAAAAAAAPgUAAAAAAAA+RQAAAAAAAAAAAAA+RQAAAAAAAD6FAAAAAAAAAAAAAD6FAAAAAAAAPsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RQAAAAAAAD+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAFIUAAAAAAAAVxQAAAAAAAAAAAAAVxQAAAAAAABcFAAAAAAAAAAAAABTFAAAAAAAAFMUAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAAUhQAAAAAAABSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAFMUAAAAAAAAVBQAAAAAAAAAAAAAVRQAAAAAAABVFAAAAAAAAAQAAAAgICAgVBQAAAAAAABVFAAAAAAAAAAAAABVFAAAAAAAAFYUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxQAAAAAAABTFAAAAAAAAAAAAAAAgEJA"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYUAAAAAAAAVxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhQAAAAAAABWFAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAFMUAAAAAAAAVxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxQAAAAAAABTFAAAAAAAAAAAAAAAAAAA"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "assets"
					},
					"BgAAAFsUAAAAAAAAXBQAAAAAAAAAAAAAXBQAAAAAAABdFAAAAAAAAAAAAABdFAAAAAAAAF4UAAAAAAAAAAAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxQAAAAAAABbFAAAAAAAAP///////+9/"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAGAUAAAAAAAAYBQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAYRQAAAAAAABhFAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "_path"
					},
					"BQAAAGAUAAAAAAAAYRQAAAAAAAAAAAAAYRQAAAAAAABiFAAAAAAAAAAAAABiFAAAAAAAAGMUAAAAAAAAAAAAAGMUAAAAAAAAZBQAAAAAAAAAAAAAZBQAAAAAAABlFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYBQAAAAAAABgFAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGUUAAAAAAAAZhQAAAAAAAAAAAAAZhQAAAAAAABnFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRQAAAAAAABlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGcUAAAAAAAAaBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxQAAAAAAABnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"paste",
					null,
					"AQAAAGgUAAAAAAAAixQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaBQAAAAAAABoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\";"
					},
					"AgAAAIsUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACNFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixQAAAAAAACLFAAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " Path"
					},
					"BQAAAGcUAAAAAAAAaBQAAAAAAAAAAAAAaBQAAAAAAABpFAAAAAAAAAAAAABpFAAAAAAAAGoUAAAAAAAAAAAAAGoUAAAAAAAAaxQAAAAAAAAAAAAAaxQAAAAAAABsFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxQAAAAAAABnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert_completion",
					{
						"completion": "PathBuf",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "PathBuf"
					},
					"AgAAAGgUAAAAAAAAaBQAAAAAAAAEAAAAUGF0aGgUAAAAAAAAbxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBQAAAAAAABsFAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAG8UAAAAAAAAcBQAAAAAAAAAAAAAcBQAAAAAAABxFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxQAAAAAAABvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKKwAAdXNlIGJpZ3RhbGs6OntCaWd0YWxrTW9jY2EsIE91dGJveCwgUm91dGVyLCBhZGRfcm91dGUsIHNwYXduX2FnZW50fTsKdXNlIGNhbmR5Ojp7QXNzZXRJbnN0YW5jZSwgQXNzZXRMaWJyYXJ5LCBBc3NldFVpZCwgQ2FuZHlNb2NjYSwgR2x0ZkFzc2V0RGVzY3JpcHRvcn07CnVzZSBjYW5keV9jYW1lcmE6OnsKICAgIENhbWVyYUNvbW1hbmQsIENhbWVyYU1hdHJpY2VzLCBDYW1lcmFTdGF0ZSwgQ2FuZHlDYW1lcmFNb2NjYSwgR3JvdW5kRm9jdXNQb2ludENhbWVyYUNvbnRyb2xsZXIsCiAgICBHcm91bmRGb2N1c1BvaW50Q2FtZXJhQ29udHJvbGxlclNldHRpbmdzLCBQcm9qZWN0aW9uLCBXaW5kb3dSZXNpemVkRXZlbnQsCn07CnVzZSBjYW5keV9mb3JnZTo6Q2FuZHlGb3JnZU1vY2NhOwp1c2UgY2FuZHlfaW5wdXQ6OntDYW5keUlucHV0TW9jY2EsIElucHV0RXZlbnRNZXNzYWdlfTsKdXNlIGNhbmR5X21lc2g6OntDYW5keU1lc2hNb2NjYSwgQ3Vib2lkfTsKdXNlIGNhbmR5X3NjZW5lX3RyZWU6OntDYW5keVNjZW5lVHJlZU1vY2NhLCBUcmFuc2Zvcm0zfTsKdXNlIGNhbmR5X3NreTo6e0NhbmR5U2t5TW9jY2EsIFNreU1vZGVsfTsKdXNlIGNhbmR5X3RlcnJhOjp7CiAgICBDYW5keVRlcnJhTW9jY2EsIEdyb3VuZCwgTG9hZFRlcnJhaW5Db21tYW5kLCBUZXJyYUNodW5rU3RyZWFtaW5nU3RhdHVzTG9hZGVkLCBUZXJyYWluLAogICAgVGVycmFpbkNodW5rLAp9Owp1c2UgY2FuZHlfdGltZTo6e0NhbmR5VGltZU1vY2NhLCBTaW1DbG9jaywgVGlja307CnVzZSBjYW5keV91dGlsczo6ewogICAgQ2FtZXJhTGluaywgSW1hZ2VMb2NhdGlvbiwgSW1hZ2VTaGFwZSwgTWF0ZXJpYWwsIFBick1hdGVyaWFsLCBXaW5kb3dEZWYsIFdpbmRvd0xheW91dCwKfTsKdXNlIGV4Y2Vzczo6cHJlbHVkZTo6KjsKdXNlIGdsYW06OntVVmVjMiwgVmVjMiwgVmVjM307CnVzZSBtYWdpX2NvbG9yOjpMaW5lYXJDb2xvcjsKdXNlIG1hZ2lfcm5nOjp7UmFuZ2UyRjMyLCBSbmd9Owp1c2Ugc2ltcGxlY3M6OnByZWx1ZGU6Oio7CnVzZSBzdGQ6OnBhdGg6OlBhdGhCdWY7CgpwdWIgc3RydWN0IFJlY29sYU1vY2NhOwoKaW1wbCBNb2NjYSBmb3IgUmVjb2xhTW9jY2EgewogICAgZm4gbG9hZChtdXQgZGVwczogTW9jY2FEZXBzKSB7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uX3Jhdzo6PEJpZ3RhbGtNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keUNhbWVyYU1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5Rm9yZ2VNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keUlucHV0TW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlNZXNoTW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keVNjZW5lVHJlZU1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5U2t5TW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlUZXJyYU1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5VGltZU1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5SW5wdXRNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keU1lc2hNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keVNjZW5lVHJlZU1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5VGVycmFNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keVRpbWVNb2NjYT4oKTsKICAgIH0KCiAgICBmbiByZWdpc3Rlcl9jb21wb25lbnRzKHdvcmxkOiAmbXV0IFdvcmxkKSB7CiAgICAgICAgd29ybGQucmVnaXN0ZXJfY29tcG9uZW50Ojo8VGVycmFpblRpbGVGb2xpYWdlU3Bhd25lZD4oKTsKICAgIH0KCiAgICBmbiBzdGFydCh3b3JsZDogJm11dCBXb3JsZCkgLT4gU2VsZiB7CiAgICAgICAgd29ybGQucnVuKHNldHVwX3dpbmRvd19hbmRfY2FtZXJhKTsKICAgICAgICB3b3JsZC5ydW4obG9hZF9hc3NldHMpOwogICAgICAgIHdvcmxkLnJ1bihzZXR1cF9za3kpOwogICAgICAgIHdvcmxkLnJ1bihzcGF3bl90ZXJyYWluKTsKICAgICAgICB3b3JsZC5ydW4oc3Bhd25fY2hhcm4pOwogICAgICAgIHdvcmxkLnJ1bihzcGF3bl9jaHVyY2gpOwogICAgICAgIFNlbGYKICAgIH0KCiAgICBmbiBzdGVwKCZtdXQgc2VsZiwgd29ybGQ6ICZtdXQgV29ybGQpIHsKICAgICAgICB3b3JsZC5ydW4oc3Bhd25fdGVycmFpbl90aWxlX2ZvbGlhZ2UpOwogICAgfQoKICAgIGZuIGZpbmkoJm11dCBzZWxmLCBfd29ybGQ6ICZtdXQgV29ybGQpIHsKICAgICAgICBsb2c6OmluZm8hKCJ0ZXJtaW5hdGVkLiIpOwogICAgfQp9CgpmbiBzZXR1cF93aW5kb3dfYW5kX2NhbWVyYShjbG9jazogU2luZ2xldG9uPFNpbUNsb2NrPiwgbXV0IGNtZDogQ29tbWFuZHMpIHsKICAgIGxldCBjYW0gPSBzcGF3bl9hZ2VudCgKICAgICAgICAmbXV0IGNtZCwKICAgICAgICBDYW1lcmFTdGF0ZTo6ZnJvbV9leWVfdGFyZ2V0X3VwKAogICAgICAgICAgICBWZWMzOjpuZXcoMzAuLCAzMC4sIDEuNzApLAogICAgICAgICAgICBWZWMzOjpuZXcoMzUuLCAzNS4sIDIuMDApLAogICAgICAgICAgICBWZWMzOjpaLAogICAgICAgICAgICBQcm9qZWN0aW9uOjpQZXJzcGVjdGl2ZSB7CiAgICAgICAgICAgICAgICBmb3Y6IDQ1LjBfZjMyLnRvX3JhZGlhbnMoKSwKICAgICAgICAgICAgICAgIG5lYXI6IDAuMjUsCiAgICAgICAgICAgICAgICBmYXI6IDE1MDAuLAogICAgICAgICAgICB9LAogICAgICAgICksCiAgICApOwogICAgY21kLmVudGl0eShjYW0pLnNldChDYW1lcmFNYXRyaWNlczo6bmV3KCkpOwoKICAgIGxldCBjYW1fY3RybF9zZXR0aW5ncyA9IEdyb3VuZEZvY3VzUG9pbnRDYW1lcmFDb250cm9sbGVyU2V0dGluZ3MgewogICAgICAgIHRyYW5zbGF0aW9uX21heF9zcGVlZDogMS4yLAogICAgICAgIHRyYW5zbGF0aW9uX2FjY2VsZXJhdGlvbjogNS4wLAogICAgICAgIHRyYW5zbGF0aW9uX2RlYWNjZWxlcmF0aW9uOiAyMC4wLAogICAgICAgIHpvb21fcG93ZXI6IDEuMzAsCiAgICAgICAgYXppbXV0aF9zZW5zaXRpdml0eTogMi40LAogICAgICAgIHRpbHRfc2Vuc2l0aXZpdHk6IDEuMywKICAgICAgICB0aWx0X3JhbmdlOiA1LjBfZjMyLnRvX3JhZGlhbnMoKS4uNzAuMF9mMzIudG9fcmFkaWFucygpLAogICAgICAgIGV5ZV9kaXN0YW5jZV9yYW5nZTogMi4wLi43NS4wLAogICAgICAgIGhlaWdodF9zbW9vdGhpbmdfaGFsZmxpZmU6IDAuMTAsCiAgICAgICAgZXllX2hlaWdodF9jbGVhcmFuY2U6IDAuNSwKICAgIH07CiAgICBsZXQgbXV0IGNhbV9jdHJsID0gR3JvdW5kRm9jdXNQb2ludENhbWVyYUNvbnRyb2xsZXI6Om5ldyhjYW1fY3RybF9zZXR0aW5ncyk7CiAgICBjYW1fY3RybC5zZXRfZm9jdXNfcG9pbnQoVmVjMjo6bmV3KDMwLiwgMzAuKSk7CiAgICBsZXQgY2FtX2N0cmxfYWdlbnQgPSBzcGF3bl9hZ2VudCgmbXV0IGNtZCwgY2FtX2N0cmwpOwogICAgYWRkX3JvdXRlOjo8Q2FtZXJhQ29tbWFuZCwgXz4oJm11dCBjbWQsIGNhbV9jdHJsX2FnZW50LCBjYW0pOwoKICAgIGxldCB3aW4gPSBjbWQuc3Bhd24oKAogICAgICAgIFdpbmRvd0RlZiB7CiAgICAgICAgICAgIHRpdGxlOiAiTFVEVU0gREFSRSA1NzogUkVDT0xBIi50b19zdHJpbmcoKSwKICAgICAgICAgICAgbGF5b3V0OiBXaW5kb3dMYXlvdXQgewogICAgICAgICAgICAgICAgc2hhcGU6IEltYWdlU2hhcGU6OmZyb21fd2lkdGhfaGVpZ2h0KDE5MjAsIDEwODApLAogICAgICAgICAgICAgICAgcG9zaXRpb246IEltYWdlTG9jYXRpb246OmZyb21faG9yaXpvbnRhbF92ZXJ0aWNhbCgyMDAuLCAyMDAuKSwKICAgICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIE91dGJveDo6bmV3KCksCiAgICAgICAgUm91dGVyOjpuZXcoKSwKICAgICAgICAoQ2FtZXJhTGluaywgY2FtKSwKICAgICkpOwoKICAgIGFkZF9yb3V0ZTo6PFdpbmRvd1Jlc2l6ZWRFdmVudCwgXz4oJm11dCBjbWQsIHdpbiwgY2FtKTsKICAgIGFkZF9yb3V0ZTo6PElucHV0RXZlbnRNZXNzYWdlLCBfPigmbXV0IGNtZCwgd2luLCBjYW1fY3RybF9hZ2VudCk7CiAgICBhZGRfcm91dGU6OjxUaWNrLCBfPigmbXV0IGNtZCwgY2xvY2sudGlja19hZ2VudCgpLCBjYW1fY3RybF9hZ2VudCk7Cn0KCmZuIHNldHVwX3NreShtdXQgc2t5OiBTaW5nbGV0b25NdXQ8U2t5TW9kZWw+KSB7CiAgICBza3kuc2V0X3N1bl9yYXdfcmFkaWFuY2UoMTIuMCk7CiAgICBza3kuc2V0X21vb25fcmF3X3JhZGlhbmNlKDAuMTgpOwp9CgpmbiBzcGF3bl90ZXJyYWluKG11dCBjbWQ6IENvbW1hbmRzKSB7CiAgICBjbWQuc3Bhd24oTG9hZFRlcnJhaW5Db21tYW5kIHsKICAgICAgICBwYXRoOiBQYXRoQnVmOjpmcm9tKCJJOi9Ja2FidXIvZXBoL2Fzc2V0cy90ZXJyYWluL2VwaF93b3JsZC5qc29uIiksCiAgICB9KTsKCiAgICBjb25zdCBXQVRFUl9QTEFORV9TSVpFOiBmMzIgPSAxMDI0LjsKCiAgICBjbWQuc3Bhd24oKAogICAgICAgIE5hbWU6OmZyb21fc3RyKCJ3YXRlciBwbGFuZSIpLAogICAgICAgIFRyYW5zZm9ybTM6OmlkZW50aXR5KCkKICAgICAgICAgICAgLndpdGhfdHJhbnNsYXRpb24oVmVjMzo6bmV3KAogICAgICAgICAgICAgICAgMC41ICogV0FURVJfUExBTkVfU0laRSwKICAgICAgICAgICAgICAgIDAuNSAqIFdBVEVSX1BMQU5FX1NJWkUsCiAgICAgICAgICAgICAgICAtMC41LAogICAgICAgICAgICApKQogICAgICAgICAgICAud2l0aF9zY2FsZShWZWMzOjpuZXcoV0FURVJfUExBTkVfU0laRSwgV0FURVJfUExBTkVfU0laRSwgMS4pKSwKICAgICAgICBDdWJvaWQsCiAgICAgICAgTWF0ZXJpYWw6OlBicihQYnJNYXRlcmlhbCB7CiAgICAgICAgICAgIGJhc2VfY29sb3I6IExpbmVhckNvbG9yOjpmcm9tX3JnYigwLjAyLCAwLjEzLCAwLjM1KSwKICAgICAgICAgICAgbWV0YWxsaWM6IDAuLAogICAgICAgICAgICBwZXJjZXB0dWFsX3JvdWdobmVzczogMC4wNSwKICAgICAgICAgICAgcmVmbGVjdGFuY2U6IDAuMzUsCiAgICAgICAgICAgIGNvYXRfc3RyZW5ndGg6IDAuLAogICAgICAgICAgICBjb2F0X3JvdWdobmVzczogMC4sCiAgICAgICAgfSksCiAgICApKTsKfQoKZm4gbG9hZF9hc3NldHMobXV0IGFzbGk6IFNpbmdsZXRvbk11dDxBc3NldExpYnJhcnk+KSB7CiAgICBsZXQgYXNzZXRfcGF0aCA9IFBhdGhCdWY6OiAiSTovSWthYnVyL2VwaC9hc3NldHMvbW9kZWxzL3JlY29sYSI7CgogICAgYXNsaS5sb2FkX2dsdGYoCiAgICAgICAgJkFzc2V0VWlkOjpuZXcoImJ1aWxkLWNvbmNyZXRlLnNsYWJfMXgxIiksCiAgICAgICAgR2x0ZkFzc2V0RGVzY3JpcHRvciB7CiAgICAgICAgICAgIHBhdGg6IFBhdGhCdWY6OmZyb20oIkk6L0lrYWJ1ci9lcGgvYXNzZXRzL21vZGVscy9yZWNvbGEvcHJvcC1hcmNoaXRlY3R1cmUuZ2xiIiksCiAgICAgICAgICAgIHNjZW5lOiBTb21lKCJTY2VuZSIuaW50bygpKSwKICAgICAgICAgICAgbm9kZTogU29tZSgiYnVpbGQtY29uY3JldGUuc2xhYl8xeDEiLmludG8oKSksCiAgICAgICAgfSwKICAgICk7Cn0KCiNbZGVyaXZlKENvbXBvbmVudCldCnN0cnVjdCBUZXJyYWluVGlsZUZvbGlhZ2VTcGF3bmVkOwoKZm4gc3Bhd25fdGVycmFpbl90aWxlX2ZvbGlhZ2UoCiAgICB0ZXJyYWluOiBTaW5nbGV0b248VGVycmFpbj4sCiAgICBxdWVyeV90aWxlczogUXVlcnk8CiAgICAgICAgKEVudGl0eSwgJlRlcnJhaW5DaHVuayksCiAgICAgICAgKAogICAgICAgICAgICBXaXRoPFRlcnJhQ2h1bmtTdHJlYW1pbmdTdGF0dXNMb2FkZWQ+LAogICAgICAgICAgICBXaXRob3V0PFRlcnJhaW5UaWxlRm9saWFnZVNwYXduZWQ+LAogICAgICAgICksCiAgICA+LAogICAgbXV0IGNtZDogQ29tbWFuZHMsCikgewogICAgbGV0IGNhY3R1c19haWQgPSBBc3NldFVpZDo6bmV3KCJjYWN0dXMiKTsKCiAgICBsZXQgbXV0IHJuZyA9IFJuZzo6bmV3KCk7CgogICAgbGV0IHNwYWNpbmcgPSAzMC4wOwoKICAgIGxldCB0ZXJyYWluID0gdGVycmFpbi5pbm5lcigpOwoKICAgIGxldCBtdXQgY291bnQgPSAwOwoKICAgIGZvciAodGVycmFpbl9jaHVua19lbnRpdHksIHRlcnJhaW5fY2h1bmspIGluIHF1ZXJ5X3RpbGVzLml0ZXIoKSB7CiAgICAgICAgbGV0IGZvbGlhZ2Vfcm9vdF9lbnRpdHkgPSBjbWQuc3Bhd24oKAogICAgICAgICAgICBOYW1lOjpmcm9tX3N0cigiZm9saWFnZSIpLAogICAgICAgICAgICBUcmFuc2Zvcm0zOjppZGVudGl0eSgpLAogICAgICAgICAgICAoQ2hpbGRPZiwgdGVycmFpbl9jaHVua19lbnRpdHkpLAogICAgICAgICkpOwoKICAgICAgICBjbWQuZW50aXR5KHRlcnJhaW5fY2h1bmtfZW50aXR5KQogICAgICAgICAgICAuc2V0KFRlcnJhaW5UaWxlRm9saWFnZVNwYXduZWQpOwoKICAgICAgICBsZXQgY2h1bmtfaWQgPSAqKnRlcnJhaW5fY2h1bms7CiAgICAgICAgbGV0IGNodW5rX3BvcyA9IHRlcnJhaW4uY2h1bmtfcG9zaXRpb24oY2h1bmtfaWQpOwoKICAgICAgICBsZXQgYXJlYV9jb3VudCA9ICh0ZXJyYWluLmNodW5rX3NpemUoKSAvIHNwYWNpbmcpLmZsb29yKCkuYXNfdXZlYzIoKTsKICAgICAgICBsZXQgcm9pX3NpemUgPSB0ZXJyYWluLmNodW5rX3NpemUoKSAvIGFyZWFfY291bnQuYXNfdmVjMigpOwoKICAgICAgICBmb3IgaSBpbiAwLi5hcmVhX2NvdW50WzBdIHsKICAgICAgICAgICAgZm9yIGogaW4gMC4uYXJlYV9jb3VudFsxXSB7CiAgICAgICAgICAgICAgICBsZXQgcm9pX2NlbnRlciA9CiAgICAgICAgICAgICAgICAgICAgY2h1bmtfcG9zICsgKFVWZWMyOjpuZXcoaSwgaikuYXNfdmVjMigpICsgMC41ICogVmVjMjo6T05FKSAqIHJvaV9zaXplOwogICAgICAgICAgICAgICAgbGV0IHJvaSA9IFJhbmdlMkYzMjo6ZnJvbV9jZW50ZXJfc2l6ZShyb2lfY2VudGVyLCAwLjggKiByb2lfc2l6ZSk7CiAgICAgICAgICAgICAgICBsZXQgcG9zX3dvcmxkID0gcm5nLnVuaWZvcm1fcm9pMl9mMzIoJnJvaSk7CgogICAgICAgICAgICAgICAgbGV0IFNvbWUobG9jKSA9IHRlcnJhaW4ubG9jYXRlKHBvc193b3JsZCkgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgbGV0IGhlaWdodCA9IHRlcnJhaW4uaGVpZ2h0KGxvYyk7CgogICAgICAgICAgICAgICAgbGV0IHBvc19sb2NhbCA9IHBvc193b3JsZCAtIGNodW5rX3BvczsKCiAgICAgICAgICAgICAgICBjbWQuc3Bhd24oKAogICAgICAgICAgICAgICAgICAgIFRyYW5zZm9ybTM6OmZyb21fdHJhbnNsYXRpb25feHl6KHBvc19sb2NhbC54LCBwb3NfbG9jYWwueSwgaGVpZ2h0KSwKICAgICAgICAgICAgICAgICAgICBBc3NldEluc3RhbmNlKGNhY3R1c19haWQuY2xvbmUoKSksCiAgICAgICAgICAgICAgICAgICAgKENoaWxkT2YsIGZvbGlhZ2Vfcm9vdF9lbnRpdHkpLAogICAgICAgICAgICAgICAgKSk7CgogICAgICAgICAgICAgICAgY291bnQgKz0gMTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBsb2c6OmRlYnVnISgic3Bhd25lZCB7fSBjYWN0aSIsIGNvdW50KTsKfQoKZm4gc3Bhd25fY2hhcm4obXV0IGNtZDogQ29tbWFuZHMpIHsKICAgIGNtZC5zcGF3bigoCiAgICAgICAgVHJhbnNmb3JtMzo6ZnJvbV90cmFuc2xhdGlvbl94eXooMjUuLCAyNy4sIDAuKS53aXRoX3JvdGF0aW9uX3pfZGVnKC05MC4pLAogICAgICAgIEFzc2V0SW5zdGFuY2UoQXNzZXRVaWQ6Om5ldygiY2hhci1yZWRfcHJpZXN0X2dlcm1hbmljdXMiKSksCiAgICApKTsKfQoKZm4gc3Bhd25fY2h1cmNoKG11dCBjbWQ6IENvbW1hbmRzKSB7CiAgICBsZXQgcHJvcF9jcmltc29uX2FsdGFyX2FpZCA9IEFzc2V0VWlkOjpuZXcoInByb3AtY3JpbXNvbl9hbHRhciIpOwogICAgbGV0IHByb3BfY3JpbXNvbl9iZWFjb25fYWlkID0gQXNzZXRVaWQ6Om5ldygicHJvcC1jcmltc29uX2JlYWNvbiIpOwoKICAgIGxldCBjaHVyY2hfZW50aXR5ID0gY21kLnNwYXduKCgKICAgICAgICBOYW1lOjpmcm9tX3N0cigiY2h1cmNoIiksCiAgICAgICAgVHJhbnNmb3JtMzo6ZnJvbV90cmFuc2xhdGlvbl94eXooMjAuLCAyMC4sIDAuKSwKICAgICkpOwoKICAgIHNwYXduX2ZvdW5kYXRpb24oJm11dCBjbWQsIGNodXJjaF9lbnRpdHkpOwogICAgc3Bhd25fcm9vbSgmbXV0IGNtZCwgY2h1cmNoX2VudGl0eSk7CgogICAgY21kLnNwYXduKCgKICAgICAgICBUcmFuc2Zvcm0zOjpmcm9tX3RyYW5zbGF0aW9uX3h5eig1LiwgNS4sIDAuKSwKICAgICAgICBBc3NldEluc3RhbmNlKHByb3BfY3JpbXNvbl9hbHRhcl9haWQuY2xvbmUoKSksCiAgICAgICAgKENoaWxkT2YsIGNodXJjaF9lbnRpdHkpLAogICAgKSk7CgogICAgY21kLnNwYXduKCgKICAgICAgICBUcmFuc2Zvcm0zOjpmcm9tX3RyYW5zbGF0aW9uX3h5eig3LiwgNS4sIDAuKSwKICAgICAgICBBc3NldEluc3RhbmNlKHByb3BfY3JpbXNvbl9iZWFjb25fYWlkLmNsb25lKCkpLAogICAgICAgIChDaGlsZE9mLCBjaHVyY2hfZW50aXR5KSwKICAgICkpOwp9CgpmbiBzcGF3bl9mb3VuZGF0aW9uKGNtZDogJm11dCBDb21tYW5kcywgcGFyZW50OiBFbnRpdHkpIHsKICAgIGxldCBzbGFiX2FpZCA9IEFzc2V0VWlkOjpuZXcoImJ1aWxkLWNvbmNyZXRlLnNsYWJfMXgxIik7CgogICAgbGV0IGZvdW5kYXRpb25fZW50aXR5ID0gY21kLnNwYXduKCgKICAgICAgICBOYW1lOjpmcm9tX3N0cigiZm91bmRhdGlvbiIpLAogICAgICAgIFRyYW5zZm9ybTM6OmlkZW50aXR5KCksCiAgICAgICAgKENoaWxkT2YsIHBhcmVudCksCiAgICApKTsKCiAgICBsZXQgbnggPSA4ICsgNDsKICAgIGxldCBueSA9IDEwICsgNDsKCiAgICBmb3IgaSBpbiAwLi5ueCB7CiAgICAgICAgZm9yIGogaW4gMC4ubnkgewogICAgICAgICAgICBjbWQuc3Bhd24oKAogICAgICAgICAgICAgICAgVHJhbnNmb3JtMzo6ZnJvbV90cmFuc2xhdGlvbl94eXooaSBhcyBmMzIsIGogYXMgZjMyLCAwLiksCiAgICAgICAgICAgICAgICBBc3NldEluc3RhbmNlKHNsYWJfYWlkLmNsb25lKCkpLAogICAgICAgICAgICAgICAgKENoaWxkT2YsIGZvdW5kYXRpb25fZW50aXR5KSwKICAgICAgICAgICAgKSk7CiAgICAgICAgfQogICAgfQp9CgpmbiBzcGF3bl9yb29tKGNtZDogJm11dCBDb21tYW5kcywgcGFyZW50OiBFbnRpdHkpIHsKICAgIGxldCB3YWxsX2FpZCA9IEFzc2V0VWlkOjpuZXcoImJ1aWxkLWNvbmNyZXRlLndhbGxfMXgyIik7CiAgICBsZXQgY29ybmVyX2FpZCA9IEFzc2V0VWlkOjpuZXcoImJ1aWxkLWNvbmNyZXRlLmNvcm5lciIpOwoKICAgIGxldCByb29tX2VudGl0eSA9IGNtZC5zcGF3bigoCiAgICAgICAgTmFtZTo6ZnJvbV9zdHIoInJvb20iKSwKICAgICAgICBUcmFuc2Zvcm0zOjpmcm9tX3RyYW5zbGF0aW9uX3h5eigyLiwgMi4sIDAuKSwKICAgICAgICAoQ2hpbGRPZiwgcGFyZW50KSwKICAgICkpOwoKICAgIGxldCBueCA9IDg7CiAgICBsZXQgbnkgPSAxMDsKCiAgICBmb3IgeCBpbiAxLi5ueCAtIDEgewogICAgICAgIGNtZC5zcGF3bigoCiAgICAgICAgICAgIFRyYW5zZm9ybTM6OmZyb21fdHJhbnNsYXRpb25feHl6KHggYXMgZjMyLCAwLiwgMC4pLndpdGhfcm90YXRpb25fel9kZWcoOTAuKSwKICAgICAgICAgICAgQXNzZXRJbnN0YW5jZSh3YWxsX2FpZC5jbG9uZSgpKSwKICAgICAgICAgICAgKENoaWxkT2YsIHJvb21fZW50aXR5KSwKICAgICAgICApKTsKICAgICAgICBjbWQuc3Bhd24oKAogICAgICAgICAgICBUcmFuc2Zvcm0zOjpmcm9tX3RyYW5zbGF0aW9uX3h5eih4IGFzIGYzMiwgKG55IC0gMSkgYXMgZjMyLCAwLikKICAgICAgICAgICAgICAgIC53aXRoX3JvdGF0aW9uX3pfZGVnKDI3MC4pLAogICAgICAgICAgICBBc3NldEluc3RhbmNlKHdhbGxfYWlkLmNsb25lKCkpLAogICAgICAgICAgICAoQ2hpbGRPZiwgcm9vbV9lbnRpdHkpLAogICAgICAgICkpOwogICAgfQoKICAgIGZvciB5IGluIDEuLm55IC0gMSB7CiAgICAgICAgY21kLnNwYXduKCgKICAgICAgICAgICAgVHJhbnNmb3JtMzo6ZnJvbV90cmFuc2xhdGlvbl94eXooMC4sIHkgYXMgZjMyLCAwLiksCiAgICAgICAgICAgIEFzc2V0SW5zdGFuY2Uod2FsbF9haWQuY2xvbmUoKSksCiAgICAgICAgICAgIChDaGlsZE9mLCByb29tX2VudGl0eSksCiAgICAgICAgKSk7CiAgICAgICAgY21kLnNwYXduKCgKICAgICAgICAgICAgVHJhbnNmb3JtMzo6ZnJvbV90cmFuc2xhdGlvbl94eXooKG54IC0gMSkgYXMgZjMyLCB5IGFzIGYzMiwgMC4pCiAgICAgICAgICAgICAgICAud2l0aF9yb3RhdGlvbl96X2RlZygxODAuKSwKICAgICAgICAgICAgQXNzZXRJbnN0YW5jZSh3YWxsX2FpZC5jbG9uZSgpKSwKICAgICAgICAgICAgKENoaWxkT2YsIHJvb21fZW50aXR5KSwKICAgICAgICApKTsKICAgIH0KCiAgICBjbWQuc3Bhd24oKAogICAgICAgIFRyYW5zZm9ybTM6OmZyb21fdHJhbnNsYXRpb25feHl6KDAuLCAwLiwgMC4pLAogICAgICAgIEFzc2V0SW5zdGFuY2UoY29ybmVyX2FpZC5jbG9uZSgpKSwKICAgICAgICAoQ2hpbGRPZiwgcm9vbV9lbnRpdHkpLAogICAgKSk7CiAgICBjbWQuc3Bhd24oKAogICAgICAgIFRyYW5zZm9ybTM6OmZyb21fdHJhbnNsYXRpb25feHl6KChueCAtIDEpIGFzIGYzMiwgMC4sIDAuKS53aXRoX3JvdGF0aW9uX3pfZGVnKDkwLiksCiAgICAgICAgQXNzZXRJbnN0YW5jZShjb3JuZXJfYWlkLmNsb25lKCkpLAogICAgICAgIChDaGlsZE9mLCByb29tX2VudGl0eSksCiAgICApKTsKICAgIGNtZC5zcGF3bigoCiAgICAgICAgVHJhbnNmb3JtMzo6ZnJvbV90cmFuc2xhdGlvbl94eXooKG54IC0gMSkgYXMgZjMyLCAobnkgLSAxKSBhcyBmMzIsIDAuKQogICAgICAgICAgICAud2l0aF9yb3RhdGlvbl96X2RlZygxODAuKSwKICAgICAgICBBc3NldEluc3RhbmNlKGNvcm5lcl9haWQuY2xvbmUoKSksCiAgICAgICAgKENoaWxkT2YsIHJvb21fZW50aXR5KSwKICAgICkpOwogICAgY21kLnNwYXduKCgKICAgICAgICBUcmFuc2Zvcm0zOjpmcm9tX3RyYW5zbGF0aW9uX3h5eigwLiwgKG55IC0gMSkgYXMgZjMyLCAwLikud2l0aF9yb3RhdGlvbl96X2RlZygyNzAuKSwKICAgICAgICBBc3NldEluc3RhbmNlKGNvcm5lcl9haWQuY2xvbmUoKSksCiAgICAgICAgKENoaWxkT2YsIHJvb21fZW50aXR5KSwKICAgICkpOwp9CgAAAAAAAAAAxCUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABjFAAAdXNlIGNyYXRlOjp7R2xvYmFsQXNzZXRQYXRoLCBsb2FkX2Fzc2V0cywgc3Bhd25fbGV2ZWxzfTsKdXNlIGJpZ3RhbGs6OntCaWd0YWxrTW9jY2EsIE91dGJveCwgUm91dGVyLCBhZGRfcm91dGUsIHNwYXduX2FnZW50fTsKdXNlIGNhbmR5OjpDYW5keU1vY2NhOwp1c2UgY2FuZHlfY2FtZXJhOjp7CiAgICBDYW1lcmFDb21tYW5kLCBDYW1lcmFNYXRyaWNlcywgQ2FtZXJhU3RhdGUsIENhbmR5Q2FtZXJhTW9jY2EsIEZpcnN0UGVyc29uQ2FtZXJhQ29udHJvbGxlciwKICAgIEZpcnN0UGVyc29uQ2FtZXJhQ29udHJvbGxlclNldHRpbmdzLCBQcm9qZWN0aW9uLCBXaW5kb3dSZXNpemVkRXZlbnQsCn07CnVzZSBjYW5keV9mb3JnZTo6Q2FuZHlGb3JnZU1vY2NhOwp1c2UgY2FuZHlfaW5wdXQ6OntDYW5keUlucHV0TW9jY2EsIElucHV0RXZlbnRNZXNzYWdlfTsKdXNlIGNhbmR5X21lc2g6OntDYW5keU1lc2hNb2NjYSwgQ3Vib2lkfTsKdXNlIGNhbmR5X3NjZW5lX3RyZWU6OntDYW5keVNjZW5lVHJlZU1vY2NhLCBUcmFuc2Zvcm0zLCBWaXNpYmlsaXR5fTsKdXNlIGNhbmR5X3NreTo6e0NhbmR5U2t5TW9jY2EsIERheU5pZ2h0Q3ljbGUsIFNreU1vZGVsLCBTb2xpc3RpY0RheXN9Owp1c2UgY2FuZHlfdGVycmE6OkNhbmR5VGVycmFNb2NjYTsKdXNlIGNhbmR5X3RpbWU6OntDYW5keVRpbWVNb2NjYSwgU2ltQ2xvY2ssIFRpY2t9Owp1c2UgY2FuZHlfdXRpbHM6OnsKICAgIENhbWVyYUxpbmssIEltYWdlTG9jYXRpb24sIEltYWdlU2hhcGUsIE1hdGVyaWFsLCBQYnJNYXRlcmlhbCwgV2luZG93RGVmLCBXaW5kb3dMYXlvdXQsCn07CnVzZSBleGNlc3M6OnByZWx1ZGU6Oio7CnVzZSBnbGFtOjp7VmVjMiwgVmVjM307CnVzZSBtYWdpX2NvbG9yOjpMaW5lYXJDb2xvcjsKdXNlIHNpbXBsZWNzOjpwcmVsdWRlOjoqOwp1c2Ugc3RkOjpwYXRoOjpQYXRoQnVmOwoKcHViIHN0cnVjdCBSZWNvbGFNb2NjYTsKCmltcGwgTW9jY2EgZm9yIFJlY29sYU1vY2NhIHsKICAgIGZuIGxvYWQobXV0IGRlcHM6IE1vY2NhRGVwcykgewogICAgICAgIGRlcHMuZGVwZW5kc19vbl9yYXc6OjxCaWd0YWxrTW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlDYW1lcmFNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keUZvcmdlTW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlJbnB1dE1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5TWVzaE1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5TW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlTY2VuZVRyZWVNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keVNreU1vY2NhPigpOwogICAgICAgIGRlcHMuZGVwZW5kc19vbjo6PENhbmR5VGVycmFNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keVRpbWVNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keUlucHV0TW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlNZXNoTW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlTY2VuZVRyZWVNb2NjYT4oKTsKICAgICAgICBkZXBzLmRlcGVuZHNfb246OjxDYW5keVRlcnJhTW9jY2E+KCk7CiAgICAgICAgZGVwcy5kZXBlbmRzX29uOjo8Q2FuZHlUaW1lTW9jY2E+KCk7CiAgICB9CgogICAgZm4gcmVnaXN0ZXJfY29tcG9uZW50cyh3b3JsZDogJm11dCBXb3JsZCkgewogICAgICAgIC8vIHdvcmxkLnJlZ2lzdGVyX2NvbXBvbmVudDo6PFRlcnJhaW5UaWxlRm9saWFnZVNwYXduZWQ+KCk7CiAgICB9CgogICAgZm4gc3RhcnQod29ybGQ6ICZtdXQgV29ybGQpIC0+IFNlbGYgewogICAgICAgIHdvcmxkLnNldF9zaW5nbGV0b24oR2xvYmFsQXNzZXRQYXRoKFBhdGhCdWY6OmZyb20oCiAgICAgICAgICAgICJJOi9Ja2FidXIvZXBoL2Fzc2V0cy9yZWNvbGEiLAogICAgICAgICkpKTsKCiAgICAgICAgd29ybGQucnVuKHNldHVwX3dpbmRvd19hbmRfY2FtZXJhKTsKICAgICAgICB3b3JsZC5ydW4obG9hZF9hc3NldHMpLnVud3JhcCgpOwogICAgICAgIHdvcmxkLnJ1bihzZXR1cF9za3kpOwogICAgICAgIHdvcmxkLnJ1bihzcGF3bl90ZXJyYWluKTsKICAgICAgICB3b3JsZC5ydW4oc3Bhd25fY2hhcm4pOwogICAgICAgIHdvcmxkLnJ1bihzcGF3bl9sZXZlbHMpLnVud3JhcCgpOwoKICAgICAgICBTZWxmCiAgICB9CgogICAgZm4gc3RlcCgmbXV0IHNlbGYsIHdvcmxkOiAmbXV0IFdvcmxkKSB7fQoKICAgIGZuIGZpbmkoJm11dCBzZWxmLCBfd29ybGQ6ICZtdXQgV29ybGQpIHsKICAgICAgICBsb2c6OmluZm8hKCJ0ZXJtaW5hdGVkLiIpOwogICAgfQp9CgpmbiBzZXR1cF93aW5kb3dfYW5kX2NhbWVyYShjbG9jazogU2luZ2xldG9uPFNpbUNsb2NrPiwgbXV0IGNtZDogQ29tbWFuZHMpIHsKICAgIGxldCBjYW0gPSBzcGF3bl9hZ2VudCgKICAgICAgICAmbXV0IGNtZCwKICAgICAgICBDYW1lcmFTdGF0ZTo6ZnJvbV9leWVfdGFyZ2V0X3VwKAogICAgICAgICAgICBWZWMzOjpuZXcoMzAuLCAzMC4sIDEuNzApLAogICAgICAgICAgICBWZWMzOjpuZXcoMzUuLCAzNS4sIDIuMDApLAogICAgICAgICAgICBWZWMzOjpaLAogICAgICAgICAgICBQcm9qZWN0aW9uOjpQZXJzcGVjdGl2ZSB7CiAgICAgICAgICAgICAgICBmb3Y6IDYwLjBfZjMyLnRvX3JhZGlhbnMoKSwKICAgICAgICAgICAgICAgIG5lYXI6IDAuMDUsCiAgICAgICAgICAgICAgICBmYXI6IDIwMC4sCiAgICAgICAgICAgIH0sCiAgICAgICAgKSwKICAgICk7CiAgICBjbWQuZW50aXR5KGNhbSkuc2V0KENhbWVyYU1hdHJpY2VzOjpuZXcoKSk7CgogICAgbGV0IGNhbV9jdHJsX3NldHRpbmdzID0gRmlyc3RQZXJzb25DYW1lcmFDb250cm9sbGVyU2V0dGluZ3MgewogICAgICAgIG1vdmVfbWF4X3NwZWVkOiA2LjAsCiAgICAgICAgbW92ZV9hY2NlbGVyYXRpb246IDIwLjAsCiAgICAgICAgbW92ZV9kZWFjY2VsZXJhdGlvbjogMjUuMCwKICAgICAgICB5YXdfc2Vuc2l0aXZpdHk6IDAuMDAxMiwKICAgICAgICBwaXRjaF9zZW5zaXRpdml0eTogMC4wMDEyLAogICAgICAgIHBpdGNoX3JhbmdlOiAoLTg1LjBfZjMyLnRvX3JhZGlhbnMoKSkuLig4NS4wX2YzMi50b19yYWRpYW5zKCkpLAogICAgICAgIGhlaWdodF9zbW9vdGhpbmdfaGFsZmxpZmU6IDAuMTUsCiAgICAgICAgZXllX2hlaWdodF9jbGVhcmFuY2U6IDEuNywKICAgIH07CiAgICBsZXQgbXV0IGNhbV9jdHJsID0gRmlyc3RQZXJzb25DYW1lcmFDb250cm9sbGVyOjpuZXcoY2FtX2N0cmxfc2V0dGluZ3MpOwogICAgY2FtX2N0cmwuc2V0X3Bvc2l0aW9uX3h5KFZlYzI6Om5ldygtNC41LCAtNC41KSk7CiAgICBjYW1fY3RybC5zZXRfeWF3KDkwLjBfZjMyLnRvX3JhZGlhbnMoKSk7CiAgICBsZXQgY2FtX2N0cmxfYWdlbnQgPSBzcGF3bl9hZ2VudCgmbXV0IGNtZCwgY2FtX2N0cmwpOwogICAgYWRkX3JvdXRlOjo8Q2FtZXJhQ29tbWFuZCwgXz4oJm11dCBjbWQsIGNhbV9jdHJsX2FnZW50LCBjYW0pOwoKICAgIGxldCB3aW4gPSBjbWQuc3Bhd24oKAogICAgICAgIFdpbmRvd0RlZiB7CiAgICAgICAgICAgIHRpdGxlOiAiTFVEVU0gREFSRSA1NzogUkVDT0xBIi50b19zdHJpbmcoKSwKICAgICAgICAgICAgbGF5b3V0OiBXaW5kb3dMYXlvdXQgewogICAgICAgICAgICAgICAgc2hhcGU6IEltYWdlU2hhcGU6OmZyb21fd2lkdGhfaGVpZ2h0KDE5MjAsIDEwODApLAogICAgICAgICAgICAgICAgcG9zaXRpb246IEltYWdlTG9jYXRpb246OmZyb21faG9yaXpvbnRhbF92ZXJ0aWNhbCgyMDAuLCAyMDAuKSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY3Vyc29yX3Zpc2libGU6IGZhbHNlLAogICAgICAgICAgICBjb25maW5lX2N1cnNvcjogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIE91dGJveDo6bmV3KCksCiAgICAgICAgUm91dGVyOjpuZXcoKSwKICAgICAgICAoQ2FtZXJhTGluaywgY2FtKSwKICAgICkpOwoKICAgIGFkZF9yb3V0ZTo6PFdpbmRvd1Jlc2l6ZWRFdmVudCwgXz4oJm11dCBjbWQsIHdpbiwgY2FtKTsKICAgIGFkZF9yb3V0ZTo6PElucHV0RXZlbnRNZXNzYWdlLCBfPigmbXV0IGNtZCwgd2luLCBjYW1fY3RybF9hZ2VudCk7CiAgICBhZGRfcm91dGU6OjxUaWNrLCBfPigmbXV0IGNtZCwgY2xvY2sudGlja19hZ2VudCgpLCBjYW1fY3RybF9hZ2VudCk7Cn0KCmZuIHNldHVwX3NreShtdXQgc2t5OiBTaW5nbGV0b25NdXQ8U2t5TW9kZWw+LCBtdXQgZGF5X25pZ2h0OiBTaW5nbGV0b25NdXQ8RGF5TmlnaHRDeWNsZT4pIHsKICAgIHNreS5zZXRfc3VuX3Jhd19yYWRpYW5jZSgxMi4wKTsKICAgIHNreS5zZXRfbW9vbl9yYXdfcmFkaWFuY2UoMC4xOCk7CiAgICBkYXlfbmlnaHQuc3BlZWRfZmFjdG9yID0gMC47CiAgICBkYXlfbmlnaHQubG9jYWxfdGltZSA9IFNvbGlzdGljRGF5czo6ZnJvbV9kYXlfaG91cigwLCAxMi4wKTsKfQoKZm4gc3Bhd25fdGVycmFpbihtdXQgY21kOiBDb21tYW5kcykgewogICAgY29uc3QgR1JPVU5EX1BMQU5FX1NJWkU6IGYzMiA9IDEwMjQuOwoKICAgIGNtZC5zcGF3bigoCiAgICAgICAgTmFtZTo6ZnJvbV9zdHIoImdyb3VuZCBwbGFuZSIpLAogICAgICAgIFRyYW5zZm9ybTM6OmlkZW50aXR5KCkKICAgICAgICAgICAgLndpdGhfdHJhbnNsYXRpb24oVmVjMzo6bmV3KDAuMCwgMC4wLCAtMC41NSkpCiAgICAgICAgICAgIC53aXRoX3NjYWxlKFZlYzM6Om5ldyhHUk9VTkRfUExBTkVfU0laRSwgR1JPVU5EX1BMQU5FX1NJWkUsIDEuKSksCiAgICAgICAgVmlzaWJpbGl0eTo6VmlzaWJsZSwKICAgICAgICBDdWJvaWQsCiAgICAgICAgTWF0ZXJpYWw6OlBicihQYnJNYXRlcmlhbCB7CiAgICAgICAgICAgIGJhc2VfY29sb3I6IExpbmVhckNvbG9yOjpmcm9tX3JnYigwLjEwLCAwLjEwLCAwLjEwKSwKICAgICAgICAgICAgbWV0YWxsaWM6IDAuLAogICAgICAgICAgICBwZXJjZXB0dWFsX3JvdWdobmVzczogMS4wLAogICAgICAgICAgICByZWZsZWN0YW5jZTogMC41MCwKICAgICAgICAgICAgY29hdF9zdHJlbmd0aDogMC4sCiAgICAgICAgICAgIGNvYXRfcm91Z2huZXNzOiAwLiwKICAgICAgICB9KSwKICAgICkpOwp9CgpmbiBzcGF3bl9jaGFybihtdXQgY21kOiBDb21tYW5kcykgewogICAgY21kLnNwYXduKChUcmFuc2Zvcm0zOjpmcm9tX3RyYW5zbGF0aW9uX3h5eigyNS4sIDI3LiwgMC4pLCBDdWJvaWQpKTsKfQoAAAAAAAAAAEocAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYxQAAAAAAABjFAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "assets/recola/level_1.json",
			"settings":
			{
				"buffer_size": 18763,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMAIAAAAAAAAwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAMAIAAAAAAAAwAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "assets/recola/recola.json",
			"settings":
			{
				"buffer_size": 634,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/recola/assets.json",
			"settings":
			{
				"buffer_size": 1053,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AQAAAI4DAAAAAAAAFAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgMAAAAAAACOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "laser"
					},
					"CgAAAAkEAAAAAAAACgQAAAAAAAAEAAAAcmlmdKoDAAAAAAAAqwMAAAAAAAAEAAAAcmlmdAcEAAAAAAAACAQAAAAAAAAAAAAAqwMAAAAAAACsAwAAAAAAAAAAAAAJBAAAAAAAAAoEAAAAAAAAAAAAAKwDAAAAAAAArQMAAAAAAAAAAAAACwQAAAAAAAAMBAAAAAAAAAAAAACtAwAAAAAAAK4DAAAAAAAAAAAAAA0EAAAAAAAADgQAAAAAAAAAAAAArgMAAAAAAACvAwAAAAAAAAAAAAA",
					"AQAAAAAAAAACAAAAqgMAAAAAAACuAwAAAAAAAAAAAAAAAPC/CQQAAAAAAAANBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "crates/recola/src/main.rs",
			"settings":
			{
				"buffer_size": 479,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"right_delete",
					null,
					"AQAAABMAAAAAAAAAEwAAAAAAAAAYAAAAbW9kIHJlY29sYV9tYWluX3dpbmRvdzsK",
					"AQAAAAAAAAABAAAAKwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAATAAAAbW9kIGVwaF9hcmNoaXRlY3Q7Cg",
					"AQAAAAAAAAABAAAAAAAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAQAAbW9kIHJlY29sYV9tb2NjYTsKCnVzZSBjcmF0ZTo6cmVjb2xhX21vY2NhOjpSZWNvbGFNb2NjYTsKCmZuIG1haW4oKSAtPiBleXJlOjpSZXN1bHQ8KCk+IHsKICAgIGVudl9sb2dnZXI6OmluaXQoKTsKCiAgICBwcm9maWxpbmc6OnJlZ2lzdGVyX3RocmVhZCEoIm1haW4iKTsKCiAgICAjW2NmZyhmZWF0dXJlID0gInByb2ZpbGUtd2l0aC10cmFjeSIpXQogICAgewogICAgICAgIGxvZzo6aW5mbyEoInN0YXJ0aW5nIHRyYWN5IGNsaWVudCIpOwogICAgICAgIHRyYWN5X2NsaWVudDo6Q2xpZW50OjpzdGFydCgpOwogICAgfQoKICAgIHByb2ZpbGluZzo6c2NvcGUhKCJtYWluIik7CgogICAgbGV0IG11dCBhcHAgPSBjYW5keTo6QXBwOjpuZXcoKTsKICAgIGFwcC5sb2FkX21vY2NhOjo8UmVjb2xhTW9jY2E+KCk7CiAgICBhcHAucnVuKCkKfQoAAAAAAAAAAMABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowEAAAAAAACjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADAAQAAbW9kIGxldmVsOwptb2QgcmVjb2xhX21vY2NhOwoKdXNlIGNyYXRlOjpyZWNvbGFfbW9jY2E6OlJlY29sYU1vY2NhOwpwdWIgdXNlIGxldmVsOjoqOwoKZm4gbWFpbigpIC0+IGV5cmU6OlJlc3VsdDwoKT4gewogICAgZW52X2xvZ2dlcjo6aW5pdCgpOwoKICAgIHByb2ZpbGluZzo6cmVnaXN0ZXJfdGhyZWFkISgibWFpbiIpOwoKICAgICNbY2ZnKGZlYXR1cmUgPSAicHJvZmlsZS13aXRoLXRyYWN5IildCiAgICB7CiAgICAgICAgbG9nOjppbmZvISgic3RhcnRpbmcgdHJhY3kgY2xpZW50Iik7CiAgICAgICAgdHJhY3lfY2xpZW50OjpDbGllbnQ6OnN0YXJ0KCk7CiAgICB9CgogICAgcHJvZmlsaW5nOjpzY29wZSEoIm1haW4iKTsKCiAgICBsZXQgbXV0IGFwcCA9IGNhbmR5OjpBcHA6Om5ldygpOwogICAgYXBwLmxvYWRfbW9jY2E6OjxSZWNvbGFNb2NjYT4oKTsKICAgIGFwcC5ydW4oKQp9CgAAAAAAAAAA3wEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowEAAAAAAACjAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					""
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Automatic"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Run (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Check"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Test (with args)..."
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Bench"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clean"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Document"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Clippy"
				],
				[
					"Packages/Rust Enhanced/RustEnhanced.sublime-build",
					"Script"
				]
			],
			[
				"Packages/Rust Enhanced/RustEnhanced.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Rust/Rust.sublime-build",
					""
				],
				[
					"Packages/Rust/Rust.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Rust.sublime-build",
					"Build & Run"
				]
			],
			[
				"Packages/Rust/Rust.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"lower",
				"Convert Case: lowerCamelCase"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"cam",
				"Convert Case: UpperCamelCase"
			],
			[
				"trail",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"sna",
				"Convert Case: snake_case"
			],
			[
				"loc",
				"Convert Case: Lower Case"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: remo",
				"Package Control: Remove Package"
			],
			[
				"Package Control: list",
				"Package Control: List Packages"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"package lis",
				"Package Control: List Packages"
			],
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"mark",
				"OmniMarkupPreviewer: Preview Current Markup in Browser"
			],
			[
				"install package",
				"Package Control: Install Package"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"pack inst",
				"Package Control: Install Package"
			],
			[
				"rust",
				"RustFmt: Format Buffer"
			],
			[
				"pack remo",
				"Package Control: Remove Package"
			],
			[
				"rustf",
				"RustFormat: Enable Format on Save"
			],
			[
				"packinst",
				"Package Control: Install Package"
			],
			[
				"rustfmt",
				"RustFmt: Format Buffer"
			],
			[
				"resource",
				"PackageResourceViewer: Open Resource"
			],
			[
				"resour",
				"PackageResourceViewer: Extract Package"
			],
			[
				"package resour",
				"PackageResourceViewer: Open Resource"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"tra",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"trai",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"run",
				"Build With: RustEnhanced - Run"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"terminus open",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"terminuopen",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"tril",
				"Trim Trailing White Space"
			],
			[
				"tri",
				"Trim Trailing White Space"
			],
			[
				"lower c",
				"Convert Case: Lower Case"
			],
			[
				"tr",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"alignm",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"buil",
				"Build With: Python"
			],
			[
				"build",
				"Build With: Python"
			],
			[
				"test",
				"Build With: RustEnhanced - Test"
			],
			[
				"terminu",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"upper ca",
				"Convert Case: Upper Case"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"termin open",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"run test",
				"Build With: RustEnhanced - Test"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"pack ins",
				"Package Control: Install Package"
			],
			[
				"rust build",
				"Build With: RustEnhanced"
			],
			[
				"rust run",
				"Build With: RustEnhanced - Run"
			],
			[
				"spac",
				"Indentation: Convert to Spaces"
			],
			[
				"space",
				"Indentation: Convert to Spaces"
			],
			[
				"white",
				"Trim Trailing White Space"
			],
			[
				"doxygen sett",
				"Preferences: DoxyDoxygen Settings"
			],
			[
				"trailing",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"dox",
				"Preferences: DoxyDoxygen Settings"
			],
			[
				"doxy",
				"Preferences: DoxyDoxygen Settings"
			],
			[
				"spa",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"trailin",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"to space",
				"Indentation: Convert to Spaces"
			],
			[
				"termin",
				"Terminus: List Shells"
			],
			[
				"open",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"termin uti",
				"Terminus Utilities: Select Theme"
			],
			[
				"termin oepn",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"temrin ope",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"temrin",
				"Terminal: Open"
			],
			[
				"spaces",
				"Indentation: Convert to Spaces"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 391.0,
		"history":
		[
			"ls",
			"dir",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/I/Ikabur/eph",
		"/I/Ikabur/eph/assets",
		"/I/Ikabur/eph/assets/recola",
		"/I/Ikabur/eph/crates",
		"/I/Ikabur/eph/crates/combat",
		"/I/Ikabur/eph/crates/combat/src",
		"/I/Ikabur/eph/crates/eph",
		"/I/Ikabur/eph/crates/eph/src",
		"/I/Ikabur/eph/crates/flowsim",
		"/I/Ikabur/eph/crates/flowsim/tests",
		"/I/Ikabur/eph/crates/gosim",
		"/I/Ikabur/eph/crates/gosim/src",
		"/I/Ikabur/eph/crates/recola",
		"/I/Ikabur/eph/crates/recola/src",
		"/I/Ikabur/candy",
		"/I/Ikabur/candy/crates",
		"/I/Ikabur/candy/crates/candy",
		"/I/Ikabur/candy/crates/candy/examples",
		"/I/Ikabur/candy/crates/candy/shaders",
		"/I/Ikabur/candy/crates/candy/src",
		"/I/Ikabur/candy/crates/candy/src/buf",
		"/I/Ikabur/candy/crates/candy/src/renderer",
		"/I/Ikabur/candy/crates/candy/src/stream",
		"/I/Ikabur/atom",
		"/I/Ikabur/atom/crates",
		"/I/Ikabur/atom/crates/excess",
		"/I/Ikabur/atom/crates/excess/src",
		"/I/Ikabur/atom/crates/excess/src/traits",
		"/I/Ikabur/magi",
		"/I/Ikabur/magi/crates",
		"/I/Ikabur/magi/crates/magi_color",
		"/I/Ikabur/magi/crates/magi_gems",
		"/I/Ikabur/magi/crates/magi_gems/src",
		"/I/Ikabur/magi/crates/magi_geo",
		"/I/Ikabur/magi/crates/magi_geo/src",
		"/I/Ikabur/magi/crates/magi_rng",
		"/I/Ikabur/magi/crates/magi_rng/src",
		"/I/Ikabur/magi/crates/magi_sdf",
		"/I/Ikabur/magi/crates/magi_sdf/src",
		"/I/Ikabur/magi/crates/magi_se",
		"/I/Ikabur/magi/crates/magi_se/src"
	],
	"file_history":
	[
		"/I/Ikabur/eph/assets/recola/level_1.json",
		"/I/Ikabur/candy/crates/candy/examples/cactus.rs",
		"/I/Ikabur/atom/crates/excess/src/world.rs",
		"/I/Ikabur/eph/crates/recola/src/eph_main_window.rs",
		"/I/Ikabur/magi/Cargo.toml",
		"/I/Ikabur/candy/crates/candy/src/asset_library.rs",
		"/I/Ikabur/candy/crates/candy/src/renderer/bind_group.rs",
		"/I/Ikabur/candy/crates/scene_tree/src/scene_tree_mocca.rs",
		"/I/Ikabur/candy/Cargo.toml",
		"/I/Ikabur/candy/crates/candy/src/bind_group.rs",
		"/I/Ikabur/candy/crates/candy/src/gather_frame_mocca.rs",
		"/I/Ikabur/candy/crates/candy/src/glassworks.rs",
		"/I/Ikabur/candy/crates/candy/src/renderer.rs",
		"/I/Ikabur/candy/crates/candy/src/transform.rs",
		"/I/Ikabur/candy/crates/candy/src/vertex_source_to_buffer.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/lib.rs",
		"/I/Ikabur/candy/crates/candy/examples/orks.candy",
		"/I/Ikabur/candy/crates/candy/src/buf/accessor.rs",
		"/I/Ikabur/candy/crates/candy/src/mesh/standard_mesh.rs",
		"/I/Ikabur/candy/crates/candy/src/lib.rs",
		"/I/Ikabur/candy/crates/candy/src/app.rs",
		"/I/Ikabur/candy/crates/candy/src/asset_mocca.rs",
		"/I/Ikabur/candy/crates/candy/examples/ork.rs",
		"/I/Ikabur/candy/crates/candy/src/bbb.rs",
		"/I/Ikabur/eph/Cargo.toml",
		"/I/Ikabur/candy/crates/fim/src/lib.rs",
		"/I/Ikabur/candy/crates/candy/src/vertex_buffer_pool.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/segment.rs",
		"/I/Ikabur/magi/crates/magi_rng/Cargo.toml",
		"/I/Ikabur/candy/crates/candy/Cargo.toml",
		"/I/Ikabur/candy/crates/fim/Cargo.toml",
		"/I/Ikabur/atom/crates/excess/src/entity_world_mut.rs",
		"/I/Ikabur/magi/crates/magi_rng/src/lib.rs",
		"/I/Ikabur/candy/crates/scene_tree/src/transform.rs",
		"/I/Ikabur/magi/crates/magi_gems/src/lib.rs",
		"/I/Ikabur/ikabur/ikabur/forge/gems/fim/fim.cpp",
		"/I/Ikabur/candy/crates/gizmos/src/lib.rs",
		"/I/Ikabur/candy/crates/candy/src/wgpu_res.rs",
		"/I/Ikabur/candy/crates/candy/examples/cube.rs",
		"/I/Ikabur/magi/crates/magi_se/src/so3.rs",
		"/I/Ikabur/magi/crates/magi_se/src/ortho_normal_basis.rs",
		"/I/Ikabur/atom/crates/excess/src/traits/query_fetch.rs",
		"/I/Ikabur/magi/crates/magi_se/src/so2.rs",
		"/I/Ikabur/magi/crates/magi_se/src/math.rs",
		"/I/Ikabur/magi/crates/magi_se/src/lib.rs",
		"/I/Ikabur/magi/crates/magi_gems/Cargo.toml",
		"/I/Ikabur/atom/crates/excess/src/commands.rs",
		"/I/Ikabur/candy/crates/candy/src/gpu_buffer.rs",
		"/I/Ikabur/atom/crates/mocca/src/runner.rs",
		"/I/Ikabur/candy/crates/candy/src/frame.rs",
		"/I/Ikabur/atom/crates/simplecs/src/fabric.rs",
		"/I/Ikabur/candy/crates/candy/src/camera.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/tri_mesh.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/ball.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/distance_transform.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/aabb.rs",
		"/I/Ikabur/magi/crates/magi_sdf/Cargo.toml",
		"/I/Ikabur/magi/crates/magi_geo/src/posed.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/quad_mesh.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/to_mesh.rs",
		"/I/Ikabur/magi/crates/magi_geo/src/tube.rs",
		"/I/Ikabur/magi/crates/magi_geo/Cargo.toml",
		"/I/Ikabur/magi/rustfmt.toml",
		"/I/hand/fibs/crates/kernel/src/lib.rs",
		"/I/Ikabur/magi/crates/magi_se/src/se2.rs",
		"/I/Ikabur/atom/crates/excess/src/traits/query_fetch_term.rs",
		"/I/Ikabur/magi/crates/magi_rng/.gitignore",
		"/I/Ikabur/magi/crates/magi_se/Cargo.toml",
		"/I/Ikabur/candy/crates/candy/src/window.rs",
		"/I/Ikabur/candy/crates/candy/src/candy_mocca.rs",
		"/I/Ikabur/atom/crates/excess/src/query.rs",
		"/I/Ikabur/eph/crates/eph/src/eph_mocca.rs",
		"/I/Ikabur/eph/crates/eph/src/main.rs",
		"/I/Ikabur/ikabur/ikabur/forge/apps/voxels.yaml",
		"/I/Ikabur/ikabur/ikabur/forge/data/gui.aix",
		"/I/Ikabur/ikabur/ikabur/forge/data/terrain.aix",
		"/I/Ikabur/ikabur/ikabur/forge/data/types.cpp",
		"/I/Ikabur/ikabur/ikabur/forge/data/venus_aux.h",
		"/I/Ikabur/ikabur/ikabur/forge/data/types.h",
		"/I/Ikabur/khorne/kernels/src/baldurs_gate.rs",
		"/I/Ikabur/galette/flatsim/src/view.rs",
		"/I/Ikabur/atom/crates/excess/src/detail/unsafe_entity_cell.rs",
		"/I/Ikabur/candy/crates/candy/src/highway.rs",
		"/I/Ikabur/candy/crates/candy/src/window_entity_map.rs",
		"/I/Ikabur/candy/crates/candy/src/backend.rs",
		"/I/Ikabur/atom/crates/mocca/src/lib.rs",
		"/I/Ikabur/candy/crates/candy/src/candy_gather_mocca.rs",
		"/I/Ikabur/eph/crates/eph/Cargo.toml",
		"/I/Ikabur/candy/crates/candy/src/window_renderer_resources.rs",
		"/I/Ikabur/candy/crates/foundation/src/lib.rs",
		"/I/Ikabur/eph/crates/gosim/Cargo.toml",
		"/I/Ikabur/candy/crates/foundation/src/log.rs",
		"/I/Ikabur/candy/crates/foundation/src/time.rs",
		"/I/Ikabur/eph/crates/gosim/src/body_part.rs",
		"/I/Ikabur/eph/crates/gosim/src/flow_sim.rs",
		"/I/Ikabur/eph/crates/gosim/src/heart.rs",
		"/I/Ikabur/eph/crates/gosim/src/lungs.rs",
		"/I/Ikabur/atom/crates/excess/src/traits/entity_access_component_helper.rs",
		"/I/Ikabur/eph/crates/gosim/src/blood.rs",
		"/I/Ikabur/candy/crates/candy/src/clock.rs",
		"/I/Ikabur/candy/crates/candy/src/engine.rs",
		"/I/Ikabur/candy/crates/foundation/Cargo.toml",
		"/I/Ikabur/eph/crates/gosim/src/lib.rs",
		"/I/Ikabur/eph/crates/gosim/src/time.rs",
		"/I/Ikabur/eph/justfile",
		"/I/Ikabur/eph/crates/flowsim/tests/test_pipe_chain.rs",
		"/I/Ikabur/eph/crates/gossim_apps/examples/gosim_test1.rs",
		"/I/Ikabur/eph/.git/config",
		"/I/Ikabur/eph/crates/gossim_apps/examples/flow_sim_pipe_chain.rss",
		"/I/Ikabur/eph/crates/flowsim/src/pipe.rs",
		"/I/Ikabur/eph/crates/gosim/src/gos_sim.rs",
		"/I/Ikabur/eph/crates/mocca/src/runner.rs",
		"/I/Ikabur/gos/flecs_crash/Cargo.toml",
		"/I/Ikabur/gos/crates/gosim/src/agent.rs",
		"/I/Ikabur/gos/crates/gosrv/src/main.rs",
		"/I/Ikabur/gos/crates/gosrv/src/game_server.rs",
		"/I/Ikabur/gos/crates/gosim/src/lib.rs",
		"/I/Ikabur/gos/crates/gosim/src/utils/stats.rs",
		"/I/Ikabur/gos/crates/gosim/src/utils/flecs_query_relation_helpers.rs",
		"/I/Ikabur/gos/crates/gems/Cargo.toml",
		"/I/Ikabur/gos/crates/gosim/src/waterfront.rs",
		"/I/Ikabur/gos/crates/goscl/src/view/inventory_view.rs",
		"/I/Ikabur/gos/crates/gosim/src/utils/newtype_decimal_component.rs",
		"/I/Ikabur/gos/crates/gosim/src/breathing.rs",
		"/I/Ikabur/gos/crates/gems/src/dec.rs",
		"/I/Ikabur/gos/crates/gems/src/modifier.rs",
		"/C/Users/dtw/Downloads/flecs (1).c",
		"/I/Ikabur/gos/crates/gosim/examples/gosim_test1.rs"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 187.0,
		"where_history":
		[
			"",
			"*.rs",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"rift",
			"Camera",
			"tracy",
			"\\",
			"BindGroupBuilder",
			"buf",
			"mesh",
			"gosim",
			"= {",
			"geo",
			"magi_se",
			"color",
			"FimItem",
			"mz",
			"basis",
			"so2",
			"local_vec2",
			"new_from_seed",
			"MyRng",
			"new_from_seed",
			"magi_se",
			"local_vec2",
			"normal_f32",
			"MyRng",
			"query_fetch_term_impl_var",
			"timestep",
			"UnsafeEntityCell",
			"MyWindow",
			"FrameQueue",
			"sim",
			"tx_sender",
			"backend",
			"candy_gather_mocca",
			"CandyGatherMocca",
			"new",
			"cgw",
			"CandyApp",
			"Backend",
			"backend",
			"Runtime",
			"upload_vertex_buffers",
			"Output",
			"SharedFrame",
			"Send",
			"upload_vertex_buffers",
			"tmp",
			"empty",
			"queues",
			"RenderItem",
			"PassQueues",
			"queues",
			"PassQueues",
			"render_queue",
			"RenderItem",
			"RenderQueue",
			"PassQueues",
			"win_def",
			"find",
			"WgpuRes",
			"WindowRendererResources",
			"WindowIdEntityMap",
			"query_vbuf",
			"renderer.",
			"OnCreate",
			"BufferCommand",
			"UploadBuffer",
			"CameraBuffer",
			"CandyEnqueueMocca",
			"candy_enqueue_mocca",
			"wire_material",
			"CandyRendererMocca",
			"scene_tree",
			"candy",
			"RuntimeApp",
			"backend",
			"TransformBufferIndex",
			"renderer_update",
			"pub",
			"backend.borrow_mut()",
			"Rc<RefCell<",
			"self.world\n            .borrow_mut()",
			"world",
			"64",
			"candy",
			"GosSimDebugMocca",
			"goscl",
			"module_phantom",
			"flecs_module_phantom",
			"self",
			"output",
			"intake",
			"/* ",
			"target",
			"red",
			"entity_named",
			"create_blood_vessel",
			"entity_from_id",
			"HeartPrefabParts",
			"pub",
			"EntityView",
			"<'a>",
			"slot_of",
			"Entity",
			",",
			"red",
			"Red",
			"rust_decimal::dec",
			"dec",
			"Decimal",
			"ModifierKind",
			"StatMods<T>",
			"<T>",
			"T",
			"$name",
			"DummModule",
			"HeartRateBpm",
			"add",
			"Clone",
			"Base",
			"HeartRateBpm",
			"f32",
			"gems::Decimal",
			"$name",
			"HeartRateBpm",
			"Weight",
			"world",
			"*cre",
			"connect_entities"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": true,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "I:\\Ikabur\\eph"
		},
		{
			"path": "I:\\Ikabur\\candy"
		},
		{
			"path": "I:\\Ikabur\\atom"
		},
		{
			"path": "I:\\Ikabur\\magi"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/I/Ikabur/atom/crates/excess/src/commands.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8835,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 70.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/pipeline_utils.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5315,
						"regions":
						{
						},
						"selection":
						[
							[
								577,
								577
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/renderer.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19584,
						"regions":
						{
						},
						"selection":
						[
							[
								815,
								815
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/sky_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2112,
						"regions":
						{
						},
						"selection":
						[
							[
								39,
								39
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/standard_bindings.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5712,
						"regions":
						{
						},
						"selection":
						[
							[
								201,
								201
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/terrain_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4155,
						"regions":
						{
						},
						"selection":
						[
							[
								247,
								247
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/terrain_shadow_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5514,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/tonemap_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3688,
						"regions":
						{
						},
						"selection":
						[
							[
								118,
								118
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/uber_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4113,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/uber_shadow_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5387,
						"regions":
						{
						},
						"selection":
						[
							[
								332,
								332
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/I/Ikabur/candy/crates/candy/src/renderer/wire_pipeline.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3647,
						"regions":
						{
						},
						"selection":
						[
							[
								1703,
								1703
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 403,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										255,
										260
									],
									[
										288,
										293
									],
									[
										349,
										354
									],
									[
										355,
										360
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								403,
								403
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/I/hand/fibs/setup/tracy-win.ps1",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 622,
						"regions":
						{
						},
						"selection":
						[
							[
								622,
								622
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "crates/recola/src/recola_mocca.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7242,
						"regions":
						{
						},
						"selection":
						[
							[
								5219,
								5219
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2313.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "assets/recola/level_1.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18763,
						"regions":
						{
						},
						"selection":
						[
							[
								560,
								560
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "assets/recola/recola.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 634,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "assets/recola/assets.json",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1053,
						"regions":
						{
						},
						"selection":
						[
							[
								943,
								943
							],
							[
								1039,
								1039
							]
						],
						"settings":
						{
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "crates/recola/src/main.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 479,
						"regions":
						{
						},
						"selection":
						[
							[
								419,
								419
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust Enhanced/RustEnhanced.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 62.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Terminus":
	{
		"height": 371.0
	},
	"output.Terminus 2":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 171.0
	},
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"output.unsaved_changes":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ensembl",
				"crates\\ens\\src\\ensemble.rs"
			],
			[
				"trime",
				"crates\\geo\\src\\tri_mesh.rs"
			],
			[
				"trimesh",
				"crates\\geo\\src\\tri_mesh.rs"
			],
			[
				"pers",
				"crates\\ens\\src\\persistence.rs"
			],
			[
				"rop",
				"crates\\fibs\\examples\\rope.rs"
			],
			[
				"driver",
				"crates\\nopt\\src\\driver.rs"
			],
			[
				"chain",
				"crates\\magi\\src\\chain.rs"
			],
			[
				"fabricoptjob",
				"crates\\fibs\\src\\fabric_opt_job.rs"
			],
			[
				"fabric opt job",
				"crates\\forge\\src\\model\\fabric_opt_job.rs"
			],
			[
				"rope",
				"crates\\fibs\\examples\\rope.rs"
			],
			[
				"rope.rs",
				"crates\\fibs\\examples\\rope.rs"
			],
			[
				"dynv",
				"crates\\magi_vec\\src\\dyn_vec.rs"
			],
			[
				"vec_n.rs",
				"crates\\geo\\src\\vec_n.rs"
			],
			[
				"plane.rs",
				"crates\\geo\\src\\plane.rs"
			],
			[
				"gui.r",
				"crates\\forge\\src\\controller\\gui.rs"
			],
			[
				"ens",
				"crates\\ens\\src\\ensemble.rs"
			],
			[
				"user_",
				"crates\\forge\\src\\model\\user_settings.rs"
			],
			[
				"camera",
				"crates\\forge\\src\\components\\camera.rs"
			],
			[
				"tri_me",
				"crates\\geo\\src\\tri_mesh.rs"
			],
			[
				"trim",
				"crates\\geo\\src\\tri_mesh.rs"
			],
			[
				"volum",
				"crates\\geo\\src\\volume.rs"
			],
			[
				"rng.rs",
				"gems\\src\\rng.rs"
			],
			[
				"rng",
				"gems\\src\\rng.rs"
			],
			[
				"render.rs",
				"candy_wgpu\\src\\renderer.rs"
			],
			[
				"renderer",
				"candy_wgpu\\src\\renderer.rs"
			],
			[
				"framework",
				"candy_wgpu\\src\\framework.rs"
			],
			[
				"render",
				"ephr_core\\src\\game\\renderer.rs"
			],
			[
				"rng.r",
				"gems\\src\\rng.rs"
			],
			[
				"grid",
				"gems\\src\\grid.rs"
			],
			[
				"gaia.rs",
				"gaia\\src\\bin\\gaia.rs"
			],
			[
				"gaia lib.rs",
				"gaia\\src\\lib.rs"
			],
			[
				"just",
				"justfile"
			],
			[
				"atom_mol.rs",
				"atom_mol\\src\\lib.rs"
			],
			[
				"atom singl",
				"atom\\src\\singleton.rs"
			],
			[
				"enumera",
				"gems\\src\\enumerable.rs"
			],
			[
				"world_setting",
				"warmind\\src\\modes\\campaign\\world_settings.rs"
			],
			[
				"enum_vec",
				"gems\\src\\enum_vec.rs"
			],
			[
				"terrain_settin",
				"warmind\\assets\\map\\terrain_settings.ron"
			],
			[
				"combat repor",
				"warmind\\src\\combat\\report.rs"
			],
			[
				"fuzzy",
				"gems\\src\\fuzzy.rs"
			],
			[
				"dog.ron",
				"warmind\\assets\\dog.ron"
			],
			[
				"perlin",
				"gesso\\src\\simplex_perlin_noise.rs"
			],
			[
				"tags.rs",
				"warmind\\src\\codex\\tags.rs"
			],
			[
				"tags.ron",
				"warmind\\assets\\sprites\\tags.ron"
			],
			[
				"campaign ren",
				"warmind\\src\\modes\\campaign\\campaign_renderer.rs"
			],
			[
				"dog",
				"gems\\src\\dog.rs"
			],
			[
				"tags.",
				"warmind\\src\\codex\\tags.rs"
			],
			[
				"path_trade",
				"warmind\\src\\humania\\ops\\path_trade_value_op.rs"
			],
			[
				"camino astar.r",
				"camino\\src\\astar.rs"
			],
			[
				"camino mod.rs",
				"warmind\\src\\modes\\campaign\\mod.rs"
			],
			[
				"default_pip",
				"candy_wgpu_pipelines\\src\\default_pipeline\\mod.rs"
			],
			[
				"gizmo",
				"warmind\\src\\modes\\gizmo.rs"
			],
			[
				"terrain hei rend",
				"warmind\\src\\modes\\campaign\\terrain_heighfield_renderling.rs"
			],
			[
				"blup",
				"warmind\\src\\modes\\blueprint_mol.rs"
			],
			[
				"texturesou",
				"candy_wgpu_pipelines\\src\\default_pipeline\\texture_resources.rs"
			],
			[
				"texture_resour",
				"candy_wgpu_pipelines\\src\\common\\texture_resource.rs"
			],
			[
				"bluep",
				"warmind\\src\\modes\\blueprint_mol.rs"
			],
			[
				"gems rng",
				"gems\\src\\rng.rs"
			],
			[
				"blueprint",
				"warmind\\src\\modes\\blueprint_mol.rs"
			],
			[
				"instan",
				"candy_wgpu_pipelines\\src\\common\\instance_buffer.rs"
			],
			[
				"legacy_",
				"candy_mol\\src\\legacy_onion_soup.rs"
			],
			[
				"pixie2.rs",
				"pixie2\\src\\lib.rs"
			],
			[
				"scene_tree transform.rs",
				"scene_tree\\src\\transform.rs"
			],
			[
				"blueprin",
				"warmind\\src\\modes\\blueprint_mol.rs"
			],
			[
				"decals_pip",
				"candy_wgpu_pipelines\\src\\decal_pipeline\\decals_pipeline.rs"
			],
			[
				"scene_tree mol.rs",
				"scene_tree\\src\\mol.rs"
			],
			[
				"blue",
				"warmind\\src\\modes\\blueprint_mol.rs"
			],
			[
				"gems math.rs",
				"gems\\src\\math.rs"
			],
			[
				"candy_mol.rs",
				"candy_mol\\src\\mol.rs"
			],
			[
				"legaci",
				"candy_mol\\src\\legacy_onion_soup.rs"
			],
			[
				"command",
				"atom\\src\\commands.rs"
			],
			[
				"legacy ",
				"candy_mol\\src\\legacy_onion_soup.rs"
			],
			[
				"terrain_hei",
				"warmind\\src\\modes\\campaign\\terrain_heighfield.rs"
			],
			[
				"screen_",
				"warmind\\src\\modes\\screen_saver.rs"
			],
			[
				"modes labro",
				"warmind\\src\\modes\\laboratory.rs"
			],
			[
				"labor",
				"warmind\\src\\gui\\laboratory.rs"
			],
			[
				"spawn",
				"warmind\\src\\humania\\ops\\spawn_player_op.rs"
			],
			[
				"spawn_garr",
				"warmind\\src\\humania\\ops\\spawn_garrison_op.rs"
			],
			[
				"tile_det",
				"warmind\\src\\gui\\tile_details.rs"
			],
			[
				"decals.wg",
				"candy_wgpu_pipelines\\assets\\decals.wgsl"
			],
			[
				"uniform",
				"candy_wgpu_pipelines\\assets\\uniforms.wgsl"
			],
			[
				"starkind.js",
				"warmind\\assets\\sprites\\starkind.json"
			],
			[
				"atlas.",
				"warmind\\assets\\sprites\\atlas.json"
			],
			[
				"gizm",
				"warmind\\src\\modes\\gizmo.rs"
			],
			[
				"sprite_col",
				"pixie2\\src\\sprite_collection.rs"
			],
			[
				"so3",
				"gems\\src\\so3.rs"
			],
			[
				"transform",
				"scene_tree\\src\\transform.rs"
			],
			[
				"candy.rs",
				"warmind\\src\\modes\\candy.rs"
			],
			[
				"mesh",
				"candy_wgpu_pipelines\\src\\default_pipeline\\mesh_resources.rs"
			],
			[
				"onion sou",
				"pixie2\\src\\onion_soup.rs"
			],
			[
				"onion_soup",
				"pixie2\\src\\onion_soup.rs"
			],
			[
				"astar",
				"camino\\src\\astar.rs"
			],
			[
				"astar.",
				"camino\\src\\astar.rs"
			],
			[
				"gaia src op.rs",
				"gaia\\src\\op.rs"
			],
			[
				"atlas",
				"warmind\\assets\\sprites\\atlas.json"
			],
			[
				"biome",
				"gaia\\src\\biome.rs"
			],
			[
				"so2",
				"gems\\src\\so2.rs"
			],
			[
				"bin/",
				"gaia\\src\\bin\\gaia.rs"
			],
			[
				"sprite pip",
				"candy_wgpu_pipelines\\src\\sprite_pipeline.rs"
			],
			[
				"gizmo.",
				"warmind\\src\\modes\\gizmo.rs"
			],
			[
				"camera_mod",
				"warmind\\src\\modes\\camera\\camara_mode.rs"
			],
			[
				"gaia terrain",
				"gaia\\src\\terrain.rs"
			],
			[
				"color",
				"gems\\src\\color.rs"
			],
			[
				"rect",
				"gems\\src\\rect.rs"
			],
			[
				"color.rs",
				"gems\\src\\color.rs"
			],
			[
				"human poll",
				"warmind\\src\\humania\\layers\\pollution.rs"
			],
			[
				"biome.r",
				"gaia\\src\\biome.rs"
			],
			[
				"campaign rend",
				"warmind\\src\\modes\\campaign\\campaign_renderer.rs"
			],
			[
				"grid.",
				"gems\\src\\grid.rs"
			],
			[
				"system",
				"atom\\src\\system.rs"
			],
			[
				"muli",
				"gems\\src\\multi_grid.rs"
			],
			[
				"dog.rs",
				"gems\\src\\dog.rs"
			],
			[
				"atom_mol lib.rs",
				"atom_mol\\src\\lib.rs"
			],
			[
				"scene_tree utils",
				"scene_tree\\src\\utils.rs"
			],
			[
				"fabric",
				"atom\\src\\fabric.rs"
			],
			[
				"deploy squad",
				"warmind\\src\\modes\\battle\\squad_deployment.rs"
			],
			[
				"battle arena.rs",
				"warmind\\src\\modes\\battle\\arena.rs"
			],
			[
				"scene_tree sys",
				"scene_tree\\src\\layers.rs"
			],
			[
				"copendiu",
				"warmind\\src\\codex\\copendium.rs"
			],
			[
				"copend",
				"warmind\\src\\codex\\copendium.rs"
			],
			[
				"scenetree mol.r",
				"scene_tree\\src\\mol.rs"
			],
			[
				"transform_sys",
				"ephr_core\\src\\systems\\transform_system.rs"
			],
			[
				"system.rs",
				"atom\\src\\system.rs"
			],
			[
				"mol ",
				"camino_mol\\src\\mol.rs"
			],
			[
				"cocktail",
				"cocktail\\src\\cocktail.rs"
			],
			[
				"squad del wid",
				"warmind\\src\\gui\\squad_details.rs"
			],
			[
				"copendium",
				"warmind\\src\\codex\\copendium.rs"
			],
			[
				"singl",
				"atom\\src\\singleton.rs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 323.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 307.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
